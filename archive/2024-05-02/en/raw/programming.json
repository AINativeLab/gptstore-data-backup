{
    "info": {
        "id": "programming",
        "title": "Programming",
        "description": "Write code, debug, test, and learn",
        "display_type": "ranked",
        "display_group": "Programming",
        "locale": "en"
    },
    "list": {
        "items": [
            {
                "resource": {
                    "gizmo": {
                        "id": "g-2Eo3NxuS7",
                        "organization_id": "org-S6eCwFL4YpT1JA00esUW9Oze",
                        "short_url": "g-2Eo3NxuS7-designergpt",
                        "author": {
                            "user_id": "user-5p8mKZIxdEy3dO92djum4fxG",
                            "display_name": "Pietro Schirano",
                            "link_to": null,
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": [
                                {
                                    "id": "twitterverify-43d2-b12a-bbe33d600487",
                                    "type": "twitter",
                                    "display_name": "X",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "73105934",
                                        "username": "@skirano",
                                        "type": "twitter",
                                        "link_to": "https://twitter.com/skirano"
                                    }
                                }
                            ]
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "DesignerGPT",
                            "description": "Creates and hosts beautiful websites, seamlessly integrating DALLÂ·E-generated images. Sends the website to Replit for further refining and personal domain. Your all-in-one AI solution for web development.",
                            "prompt_starters": [
                                "Design a webpage for a bakery use Dalle for images",
                                "Design a personal blog layout, send to Replit",
                                "Create a tech startup homepage then send to Replit",
                                "Design a webpage with a nature theme"
                            ],
                            "profile_pic_id": "file-x4outSHGhQh7YW6b8fqDK26y",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-x4outSHGhQh7YW6b8fqDK26y?se=2123-10-17T05%3A48%3A06Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Decd882e5-15b7-4dba-8198-94a8849974f9.png&sig=DAm8CnFD1K9kaX%2BVe6AFBl1Yje0t1MGJKrm/tT4YTFc%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-10T05:44:45.958483+00:00",
                        "updated_at": "2024-04-09T03:23:44.361314+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "uses_function_calls",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "AZNJv9smmTQkVdpNA7HgywLi",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "PNvwMNYTsRnGD8VY8vtiQ3nI",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-78351ecf0d575d8405255b15be91cf8dc0915542",
                                "domain": "dalleserver.replit.app",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.0",
                                    "info": {
                                        "title": "DALL-E Image Fetching Service",
                                        "version": "1.0.0"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://dalleserver.replit.app",
                                            "description": "DALL-E Image Server"
                                        }
                                    ],
                                    "paths": {
                                        "/fetch-images": {
                                            "post": {
                                                "operationId": "fetchDalleImages",
                                                "summary": "Fetches DALL-E generated images based on provided identifiers.",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "openaiFileIdRefs": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "name": {
                                                                                    "type": "string",
                                                                                    "description": "The name of the file, auto-generated when created by DALL-E."
                                                                                },
                                                                                "id": {
                                                                                    "type": "string",
                                                                                    "description": "A stable identifier for the file."
                                                                                },
                                                                                "mime_type": {
                                                                                    "type": "string",
                                                                                    "description": "The MIME type of the file, based on file extension for user uploaded files."
                                                                                },
                                                                                "download_link": {
                                                                                    "type": "string",
                                                                                    "description": "The URL to fetch the file, valid for five minutes."
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Images successfully fetched",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "id": {
                                                                                "type": "string"
                                                                            },
                                                                            "download_link": {
                                                                                "type": "string",
                                                                                "description": "The URL to fetch the file, valid for five minutes."
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Invalid input"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://gptprivacy-skirano.replit.app/"
                            }
                        },
                        {
                            "id": "DX9y1883rIre0QLOgDFhKZit",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-25ed6b1c811b9b1e813700a681393e4134944f5f",
                                "domain": "replit.com",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.1.0",
                                    "info": {
                                        "title": "Replit Claim Creation",
                                        "description": "Creates a new Repl claim with a given description, conversation, and file contents.",
                                        "version": "1.0.0"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://replit.com/external/v1"
                                        }
                                    ],
                                    "paths": {
                                        "/claims": {
                                            "post": {
                                                "description": "Create a new Repl claim.",
                                                "operationId": "createReplClaim",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "required": [
                                                                    "description",
                                                                    "conversation",
                                                                    "files"
                                                                ],
                                                                "properties": {
                                                                    "description": {
                                                                        "type": "string",
                                                                        "description": "Description of the Repl claim."
                                                                    },
                                                                    "conversation": {
                                                                        "type": "string",
                                                                        "description": "Conversation or context around the Repl claim."
                                                                    },
                                                                    "files": {
                                                                        "type": "array",
                                                                        "description": "List of files to include in the Repl.",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "path": {
                                                                                    "type": "string",
                                                                                    "description": "File path."
                                                                                },
                                                                                "content": {
                                                                                    "type": "string",
                                                                                    "description": "File content."
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Successfully created the Repl claim.",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "link": {
                                                                            "type": "string",
                                                                            "description": "Link to the created Repl."
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "bearerAuth": []
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "components": {
                                        "securitySchemes": {
                                            "bearerAuth": {
                                                "type": "http",
                                                "scheme": "bearer",
                                                "bearerFormat": "JWT"
                                            }
                                        },
                                        "schemas": {}
                                    }
                                },
                                "auth": {
                                    "type": "service_http",
                                    "instructions": "",
                                    "authorization_type": "bearer",
                                    "verification_tokens": {},
                                    "custom_auth_header": ""
                                },
                                "privacy_policy_url": "https://replit.com/site/privacy"
                            }
                        },
                        {
                            "id": "9yPB7IlzMcWpVLd0CqRwf77a",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-2caf91428f4119225b8fa2a20dcfcf72d547986a",
                                "domain": "designergpt.replit.app",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.0",
                                    "info": {
                                        "title": "Webpage Generator API",
                                        "version": "1.0.0"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://designergpt.replit.app",
                                            "description": "Main production server"
                                        }
                                    ],
                                    "paths": {
                                        "/create-page": {
                                            "post": {
                                                "summary": "Generates a webpage based on provided HTML content",
                                                "operationId": "generateWebpage",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "page_code": {
                                                                        "type": "string",
                                                                        "description": "The HTML content for the web page"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "page_code"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Webpage successfully generated",
                                                        "content": {
                                                            "text/plain": {
                                                                "schema": {
                                                                    "type": "string",
                                                                    "example": "https://example.com/generated_page"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Invalid input"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://gptprivacy-skirano.replit.app/"
                            }
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-php",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/pdf",
                                "text/x-script.python",
                                "text/x-typescript",
                                "text/x-sh",
                                "application/json",
                                "text/x-tex",
                                "text/x-csharp",
                                "text/x-c++",
                                "text/x-java",
                                "text/html",
                                "text/x-c",
                                "text/x-ruby",
                                "application/x-latext",
                                "application/msword",
                                "text/plain",
                                "text/markdown",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/jpeg",
                                "image/webp"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-iYSeH3EAI",
                        "organization_id": "org-jVIUA2hArphbmhH2qURpnZ7C",
                        "short_url": "g-iYSeH3EAI-website-generator",
                        "author": {
                            "user_id": "user-2fJiTRz4nICeuUXfazt7t2wl__4240e878-35cd-4885-8069-87d8555a5f91",
                            "display_name": "websitegenerator.b12.io",
                            "link_to": "https://websitegenerator.b12.io",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": null,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": "4240e878-35cd-4885-8069-87d8555a5f91",
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Website Generator",
                            "description": "A GPT for website creation, design, copywriting, and code. Integrated with DALL-E 3. Powered by B12. Share your feedback with hello@b12.io.",
                            "prompt_starters": [
                                "Build and host a website",
                                "Show me a launch-ready website for my business"
                            ],
                            "profile_pic_id": "file-DpOsgJCyQmWJBfLG28XZd4dF",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-DpOsgJCyQmWJBfLG28XZd4dF?se=2123-10-29T19%3A16%3A24Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D7e3930ef-1664-4325-a510-4fe14dc0b780.png&sig=yScnIo2s5bLFNVRP66I510w2a0vIp%2BMU8QeZw3oUnHY%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-22T18:52:28.403810+00:00",
                        "updated_at": "2024-04-30T20:31:38.107357+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "uses_function_calls",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "EeOGBfLUgtG65obzVQEmzmMH",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-a3c8d9f8a0455a01e0e2acad12dc8574dfe94b1d",
                                "domain": "b12.io",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.1",
                                    "info": {
                                        "title": "B12 AI Websites",
                                        "description": "Create a professional, engaging, and user-friendly website for your business in seconds using AI.",
                                        "version": "v1"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://b12.io/plugins"
                                        }
                                    ],
                                    "paths": {
                                        "/openai-gpt/create-website/website-generator": {
                                            "post": {
                                                "operationId": "createWebsite",
                                                "summary": "Create a website for the business",
                                                "x-openai-isConsequential": false,
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/createWebsiteRequest"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "OK",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/createWebsiteResponse"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "createWebsiteResponse": {
                                                "type": "object",
                                                "required": [
                                                    "link",
                                                    "business_name",
                                                    "preview_image_link"
                                                ],
                                                "properties": {
                                                    "link": {
                                                        "type": "string",
                                                        "description": "The link to claim newly designed website."
                                                    },
                                                    "preview_image_link": {
                                                        "type": "string",
                                                        "description": "The link with preview image of the newly designed website."
                                                    },
                                                    "business_name": {
                                                        "type": "string",
                                                        "description": "The name of the business."
                                                    }
                                                }
                                            },
                                            "createWebsiteRequest": {
                                                "type": "object",
                                                "required": [
                                                    "business_name",
                                                    "business_description",
                                                    "business_category",
                                                    "website_hero_subtitle",
                                                    "background_image",
                                                    "logo_image",
                                                    "openaiFileIdRefs"
                                                ],
                                                "properties": {
                                                    "business_name": {
                                                        "type": "string",
                                                        "description": "The name of the business."
                                                    },
                                                    "business_description": {
                                                        "type": "string",
                                                        "description": "The short description of the business in less than 1000 characters."
                                                    },
                                                    "business_category": {
                                                        "type": "string",
                                                        "description": "The AI selected category from the categories.txt file based on the business name and description."
                                                    },
                                                    "website_hero_subtitle": {
                                                        "type": "string",
                                                        "description": "The subtitle for hero section of the website based on the business name and description."
                                                    },
                                                    "background_image": {
                                                        "type": "string",
                                                        "description": "The file ID of the background image uploaded by the user. This value should be empty if the user did not upload any file. Always make sure include this file ID in openaiFileIdRefs."
                                                    },
                                                    "logo_image": {
                                                        "type": "string",
                                                        "description": "The file ID of the logo image uploaded by the user. This value should empty if the user did not upload any file. Always make sure include this file ID in openaiFileIdRefs."
                                                    },
                                                    "openaiFileIdRefs": {
                                                        "type": "array",
                                                        "description": "It should contain 2 elements, the logo and a background image for the hero section to be used on the website. The logo file should go first in the list. These files should be an image generated by DALLÂ·E or uploaded by the user. JPG, WEBP, and PNG are supported for website creation.",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "service_http",
                                    "instructions": "",
                                    "authorization_type": "bearer",
                                    "verification_tokens": {},
                                    "custom_auth_header": ""
                                },
                                "privacy_policy_url": "https://www.b12.io/static-assets/docs/terms-of-service-03-01-2021.pdf"
                            }
                        },
                        {
                            "id": "gzm_cnf_f57OFSeOpmYLVBWh57tZJJun~gzm_tool_tscFXwfS9n8sKLLwEOWUQKLm",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_f57OFSeOpmYLVBWh57tZJJun~gzm_tool_owutf287pWSuiKA72kLvvIV2",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_f57OFSeOpmYLVBWh57tZJJun~gzm_tool_1aPBaizdfylnB5vTN33TK5BM",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [
                        {
                            "id": "gzm_cnf_mTwULXnlS0l9khiycYtnkLJl~gzm_file_EgUiEiiKiztlagR5y3fROVOG",
                            "type": "text/plain",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-php",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/pdf",
                                "text/x-script.python",
                                "text/x-typescript",
                                "text/x-sh",
                                "application/json",
                                "text/x-tex",
                                "text/x-csharp",
                                "text/x-c++",
                                "text/x-java",
                                "text/html",
                                "text/x-c",
                                "text/x-ruby",
                                "application/x-latext",
                                "application/msword",
                                "text/plain",
                                "text/markdown",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/jpeg",
                                "image/webp"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-TgjKDuQwZ",
                        "organization_id": "org-vSrwV7d9FabJC5xKn5y6zV3V",
                        "short_url": "g-TgjKDuQwZ-r-wizard",
                        "author": {
                            "user_id": "user-GPDxbmSHNKzRxqWXGUV6q2wx",
                            "display_name": "Macroasset Srls",
                            "link_to": null,
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": false,
                            "display_socials": [
                                {
                                    "id": "linkedinverify-4b97-9080-6c959845166a",
                                    "type": "linkedin",
                                    "display_name": "LinkedIn",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "HS7N-gOSa0",
                                        "username": "Massimiliano Todaro",
                                        "display_name": "Massimiliano Todaro",
                                        "type": "linkedin",
                                        "link_to": "https://linkedin.com/in/massimilianotodaro"
                                    }
                                },
                                {
                                    "id": "githubverify-dff6-4871-860f-d61dfa7afa7f",
                                    "type": "github",
                                    "display_name": "GitHub",
                                    "verified": true,
                                    "verified_data": {
                                        "id": 3137038,
                                        "username": "maxto",
                                        "type": "github",
                                        "link_to": "https://github.com/maxto"
                                    }
                                }
                            ]
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "R Wizard",
                            "description": "A specialist in R programming, skilled in Data Science, Statistics, and Finance, providing accurate and useful guidance. Click README before starting.",
                            "prompt_starters": [
                                "README"
                            ],
                            "profile_pic_id": "file-OOEUVVaJCiZucRgYBk0rMfRE",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-OOEUVVaJCiZucRgYBk0rMfRE?se=2123-12-10T19%3A02%3A07Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3D54f710a6-533e-4c42-8e9d-0146169432a3.png&sig=ZqXaZ69BjSVowG66YH3NS5WPHuLf32GcfOxzyj%2BzQAI%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2024-01-03T18:33:39.403219+00:00",
                        "updated_at": "2024-05-01T17:19:11.138667+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "uses_function_calls",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "V410HW9PikGTabrK3WaRqWLN",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-d275258cf3ede057902979f3fa822e9d7ad8b266",
                                "domain": "gpts.webpilot.ai",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.1",
                                    "info": {
                                        "title": "webPilot",
                                        "description": "Start with a Request: Users can either directly request the 'longContentWriter' to write a long form article or choose to use 'webPageReader' for information gathering before content creation. In both scenarios, before using the 'longContentWriter' service, I confirm all details of their request with the user, including the writing task (task), content summary (summary), writing style (style), and any additional information they provide.\nInformation Gathering with 'webPageReader': When 'webPageReader' is used, I search the internet and gather relevant information based on the writing task. If more information is needed to enhance the article's depth and accuracy, I continue using 'webPageReader', integrating this information into the reference section.\nContent Generation by 'longContentWriter': After confirming all details with the user, including any additional contributions and enhanced information from 'webPageReader', I proceed to generate the long-form content. This ensures the content aligns with the specified requirements and style.\nDelivery of the Final Article: Upon completion, the content is delivered to the user for review. They can request revisions or additional information if necessary.\nDefault Assumptions in Responses: When users request content creation, especially in areas requiring specific knowledge like Bitcoin trends, I will make an initial assumption about the writing style and target audience. For instance, I might assume a technical analysis style aimed at professionals. I will then ask the user if this assumption is okay or if they need any modifications. This approach helps streamline the content creation process.",
                                        "version": "v1.1"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://gpts.webpilot.ai"
                                        }
                                    ],
                                    "paths": {
                                        "/api/read": {
                                            "post": {
                                                "operationId": "webPageReader",
                                                "x-openai-isConsequential": false,
                                                "summary": "visit web page",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/visitWebPageRequest"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "OK",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/visitWebPageResponse"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Bad Request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/visitWebPageError"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/api/write": {
                                            "post": {
                                                "operationId": "longContentWriter",
                                                "x-openai-isConsequential": false,
                                                "summary": "generate a book",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/generateContentRequest"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "OK",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/generateContentResponse"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Bad Request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/generateContentError"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "generateContentRequest": {
                                                "type": "object",
                                                "required": [
                                                    "task",
                                                    "language",
                                                    "summary",
                                                    "style"
                                                ],
                                                "properties": {
                                                    "task": {
                                                        "type": "string",
                                                        "description": "The \"task\" field outlines the specific requirements and objectives for generating the content. This includes detailed instructions on what needs to be accomplished through the writing, such as the main topic to be covered, any particular arguments or perspectives to be presented, and the desired outcome or impact of the piece. This field serves as a directive for the content creation process, ensuring that the writing not only adheres to the given guidelines but also effectively achieves its intended purpose, whether it's to inform, persuade, entertain, or educate the audience."
                                                    },
                                                    "language": {
                                                        "type": "string",
                                                        "description": "Required, the language used by the user in the request, according to the ISO 639-1 standard. For Chinese, use zh-CN for Simplified Chinese and zh-TW for Traditional Chinese."
                                                    },
                                                    "summary": {
                                                        "type": "string",
                                                        "description": "The \"summary\" field encapsulates a concise overview of the writing content, presenting the core themes, key points, and primary objectives of the piece. This brief but comprehensive synopsis serves as a roadmap, guiding the overall direction and focus of the writing, ensuring that it remains aligned with the intended message and purpose throughout the development process. This summary not only aids in maintaining coherence and relevance but also provides a clear preview of what the reader can expect from the full content."
                                                    },
                                                    "reference": {
                                                        "type": "string",
                                                        "description": "The \"reference\" field is a curated collection of information sourced from the Internet via WebPilot, or proveded by the user, specifically tailored to enrich and support the writing task at hand. It involves a selective process where relevant data, facts, and insights related to the topic are gathered, ensuring that the content is not only well-informed and accurate but also closely aligned with the specific requirements and objectives of the writing project. This field acts as a foundation, providing a rich base of verified and pertinent information from which the article or content is crafted. This field would be long."
                                                    },
                                                    "style": {
                                                        "type": "string",
                                                        "description": "The \"style\" field in content creation is a detailed framework encompassing three pivotal components - the writing tone or style, the target audience, and the publication medium. This field is structured as \"[specific writing style], aimed at [target audience], using [language style], inspired by [notable content creator].\" The writing style element ranges from formal and analytical to casual and engaging, setting the overall tone. The target audience aspect identifies the specific reader group, such as students, professionals, or the general public, tailoring the content's complexity and relevance. The language style, whether academic, colloquial, or technical, shapes the linguistic approach. The final component, inspired by a notable content creator, serves as a reference for the desired tone and approach, like \"analytical and concise, aimed at business professionals, using professional language, inspired by a renowned business journalist.\" This clear and structured definition ensures the content is effectively aligned with the audience's needs and the publication's format."
                                                    }
                                                }
                                            },
                                            "generateContentResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "message": {
                                                        "type": "string",
                                                        "description": "Result message of the request"
                                                    }
                                                }
                                            },
                                            "generateContentError": {
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "type": "string",
                                                        "description": "error code"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "error message"
                                                    },
                                                    "detail": {
                                                        "type": "string",
                                                        "description": "error detail"
                                                    }
                                                }
                                            },
                                            "visitWebPageResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "title": {
                                                        "type": "string",
                                                        "description": "The title of this web page"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "description": "The content of the web page's url to be summarized"
                                                    },
                                                    "meta": {
                                                        "type": "object",
                                                        "description": "The Html meta info of the web page"
                                                    },
                                                    "links": {
                                                        "type": "array",
                                                        "description": "Some links in the web page",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "extra_search_results": {
                                                        "type": "array",
                                                        "description": "Additional Search results",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "description": "the title of this search result"
                                                                },
                                                                "link": {
                                                                    "type": "string",
                                                                    "description": "the link of this search result"
                                                                },
                                                                "snippet": {
                                                                    "type": "string",
                                                                    "description": "the snippet of this search result"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "todo": {
                                                        "type": "array",
                                                        "description": "what to do with the content",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "tips": {
                                                        "type": "array",
                                                        "description": "Tips placed at the end of the answer",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "rules": {
                                                        "description": "Adherence is required when outputting content.",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "visitWebPageRequest": {
                                                "type": "object",
                                                "required": [
                                                    "link",
                                                    "ur"
                                                ],
                                                "properties": {
                                                    "link": {
                                                        "type": "string",
                                                        "description": "Required, The web page's url to visit and retrieve content from."
                                                    },
                                                    "ur": {
                                                        "type": "string",
                                                        "description": "Required, a clear statement of the user's request, can be used as a search query and may include search operators."
                                                    },
                                                    "lp": {
                                                        "type": "boolean",
                                                        "description": "Required, Whether the link is directly provided by the user"
                                                    },
                                                    "rt": {
                                                        "type": "boolean",
                                                        "description": "If the last request doesn't meet user's need, set this to true when trying to retry another request."
                                                    },
                                                    "l": {
                                                        "type": "string",
                                                        "description": "Required, the language used by the user in the request, according to the ISO 639-1 standard. For Chinese, use zh-CN for Simplified Chinese and zh-TW for Traditional Chinese."
                                                    }
                                                }
                                            },
                                            "visitWebPageError": {
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "type": "string",
                                                        "description": "error code"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "error message"
                                                    },
                                                    "detail": {
                                                        "type": "string",
                                                        "description": "error detail"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://gpts.webpilot.ai/privacy_policy.html"
                            }
                        }
                    ],
                    "files": [
                        {
                            "id": "gzm_cnf_aOv9PAyL7HSMEmmD6R6ZRadq~gzm_file_cCedBEDOGL1wilscPMh9GYPh",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_Sz48tDrN6GX6Ym3TEfLyMa95~gzm_file_IvDV1TV0d0TXp1z5tBiFMCvJ",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_lNi2DQqsitbNVlmK0CWmIVLb~gzm_file_uQ95yyRrRe7PLleNSsPJvMMK",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_qIeDhE1E3xSionYE8F1kKP7N~gzm_file_6xMdjV3ZNpZxcbEXdksa0fVB",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_lNi2DQqsitbNVlmK0CWmIVLb~gzm_file_t4MJkFuHghziDOqA559mjKpg",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_ATqiFmpkVhayBKuRaqrxcmPx~gzm_file_X6JS5or9j2Ke9i85ejOjeEej",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_afyGToBtFcUaHx9rewYhpAhn~gzm_file_pISJMgj79X615zP4uZq2WPWv",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_HLyY1Gd1c2dSPsBoOLIJxm2E~gzm_file_8jljyuNn60csAW01Evb45Nmk",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_HLyY1Gd1c2dSPsBoOLIJxm2E~gzm_file_B4Kexs4Qdfcw90pEv5QMecfp",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-php",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/pdf",
                                "text/x-script.python",
                                "text/x-typescript",
                                "text/x-sh",
                                "application/json",
                                "text/x-tex",
                                "text/x-csharp",
                                "text/x-c++",
                                "text/x-java",
                                "text/html",
                                "text/x-c",
                                "text/x-ruby",
                                "application/x-latext",
                                "application/msword",
                                "text/plain",
                                "text/markdown",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/jpeg",
                                "image/webp"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-3s6SJ5V7S",
                        "organization_id": "org-mlOwKwxqA3vR6M4sREuIZXu5",
                        "short_url": "g-3s6SJ5V7S-askthecode",
                        "author": {
                            "user_id": "user-8cru96dnXZrsPTbKYqeTQgVj",
                            "display_name": "Denys Somok",
                            "link_to": "https://docs.askthecode.ai",
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "AskTheCode",
                            "description": "Provide a GitHub repository URL and ask about any aspect of the code.",
                            "prompt_starters": [
                                "How to use the AskTheCode GPT?",
                                "Please give me an example of how to use the repository https://github.com/langchain-ai/langchainjs",
                                "Please give an overview of the issue https://github.com/langchain-ai/langchain/issues/1358",
                                "Please describe the changes made in  the commit https://github.com/microsoft/semantic-kernel/commit/b346353bfba45f54461a3abb889925d9f353ad43",
                                "Please search for the Qdrant store implementation in https://github.com/microsoft/semantic-kernel"
                            ],
                            "profile_pic_id": "file-aWCgLB79dBX0EDbdex69ke2u",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-aWCgLB79dBX0EDbdex69ke2u?se=2123-10-13T22%3A19%3A16Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dlogo.jpg&sig=CNuXkZEhlT4xOvQLD1Ck8DVuHBAFElHoABiE1WuyX1U%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-06T21:44:57.429149+00:00",
                        "updated_at": "2024-04-13T16:14:29.236987+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "uses_function_calls",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "N3hLXJdPHUPt96hY0OE6p1Ru",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-78baf1f03e18805d542716fa4c7d5ea110c417fe",
                                "domain": "pluginlab.askthecode.dsomok.online",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.1",
                                    "info": {
                                        "title": "AskTheCode Plugin",
                                        "description": "Plugin to explain the code from Github and assist with its usage. Works with the provided Github file link.",
                                        "version": "v1"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://pluginlab.askthecode.dsomok.online"
                                        }
                                    ],
                                    "paths": {
                                        "/api/repository/structure": {
                                            "post": {
                                                "tags": [
                                                    "Repository"
                                                ],
                                                "summary": "Retrieves the Github repository file structure to analyze it and be able to query only relevant files. If the provided URL contains specific branch and directory information, prioritize using that over querying the entire repository structure.",
                                                "operationId": "GetRepositoryStructure",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/StructureRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the github repository structure",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/StructureResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/content": {
                                            "post": {
                                                "tags": [
                                                    "Repository"
                                                ],
                                                "summary": "Retrieves github repository file contents, possibly filtered by file names. Line numbers can be specified in URL as well.NEVER query this endpoint without previously querying GetRepositoryStructure endpoint and when the next step is set to GetRepositoryStructure.",
                                                "operationId": "GetRepositoryContent",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/ContentRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the contents of the requested files",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/RepositoryContentResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/branch/list": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryBranch"
                                                ],
                                                "summary": "Retrieves the list of branches in the repository",
                                                "operationId": "ListRepositoryBranches",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/ListRepositoryBranchesRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the list of repository branches",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/ListRepositoryBranchesResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/branch/create": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryBranch"
                                                ],
                                                "summary": "Creates new repository branch",
                                                "operationId": "CreateRepositoryBranch",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CreateRepositoryBranchRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the result of the branch creation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/CreateRepositoryBranchResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": true
                                            }
                                        },
                                        "/api/repository/branch/delete": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryBranch"
                                                ],
                                                "summary": "Deletes repository branch",
                                                "operationId": "DeleteRepositoryBranch",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/DeleteRepositoryBranchRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the result of the branch deletion",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/DeleteRepositoryBranchResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": true
                                            }
                                        },
                                        "/api/repository/commit/history": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryCommits"
                                                ],
                                                "summary": "Retrieves commit history for a specific file",
                                                "operationId": "GetRepositoryCommitHistory",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CommitHistoryRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the commits history for the specific file",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/CommitHistoryResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/commit/overview": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryCommits"
                                                ],
                                                "summary": "Retrieves commit overview by the commit SHA",
                                                "operationId": "GetRepositoryCommitOverview",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CommitOverviewRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the commit overview",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/CommitOverviewResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/commit/changes": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryCommits"
                                                ],
                                                "summary": "Retrieves commit file changes by the commit SHA",
                                                "operationId": "GetRepositoryCommitChanges",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CommitChangesRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the commit overview",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/CommitChangesResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/file/update/checkout": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryFile"
                                                ],
                                                "summary": "Checkouts file for update and retrieves github repository file content for edit and update. This content should be used when using the UpdateRepositoryFile endpoint for updating the file content.",
                                                "operationId": "CheckoutRepositoryFileForUpdate",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CheckoutRepositoryFileRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the content of the file for updating. The response contains line numbers, never show them to the end user.",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/CheckoutRepositoryFileResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/file/create": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryFile"
                                                ],
                                                "summary": "Creates repository file. You MUST always print the code block with the content of the change you are going to send prior invoking this endpoint",
                                                "operationId": "CreateRepositoryFile",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CreateRepositoryFileRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the github repository file creation result.",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/CreateRepositoryFileResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": true
                                            }
                                        },
                                        "/api/repository/file/update": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryFile"
                                                ],
                                                "summary": "Updates repository file. Never use this endpoint before checking the file out for edit using the CheckoutRepositoryFileForEdit endpoint. You MUST always print the code block with the content of the change you are going to send prior invoking this endpoint",
                                                "operationId": "UpdateRepositoryFile",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/UpdateRepositoryFileRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the github repository file update result.",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/UpdateRepositoryFileResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": true
                                            }
                                        },
                                        "/api/repository/file/delete": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryFile"
                                                ],
                                                "summary": "Deletes the repository file. Use this endpoint when user asks to delete the file. Invoking CheckoutRepositoryFileForUpdate endpoint is not needed.",
                                                "operationId": "DeleteRepositoryFile",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/DeleteRepositoryFileRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the repository file deletion result.",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/DeleteRepositoryFileResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": true
                                            }
                                        },
                                        "/api/repository/issue": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryIssues"
                                                ],
                                                "summary": "Retrieves github issue and its comments by the issue URL",
                                                "operationId": "GetRepositoryIssue",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/IssueRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the issue with its comments",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/IssueResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/issue/comment/post": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryIssues"
                                                ],
                                                "summary": "Posts the comment under the github issue specified by the issue URL",
                                                "operationId": "PostRepositoryIssueComment",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/PostIssueCommentRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the result of the comment posting",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/PostIssueCommentResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": true
                                            }
                                        },
                                        "/api/repository/pull-request/open": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryPullRequests"
                                                ],
                                                "summary": "Retrieves open repository pull requests",
                                                "operationId": "GetOpenRepositoryPullRequests",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/OpenPullRequestsListRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns open repository pull requests list",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/PullRequestsListResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/pull-request/overview": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryPullRequests"
                                                ],
                                                "summary": "Retrieves overview of the repository pull request. Prefer querying this endpoint for a single PR instead of using data from the GetOpenRepositoryPullRequests response.",
                                                "operationId": "GetRepositoryPullRequestOverview",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/PullRequestRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns repository pull request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/PullRequestOverviewResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/pull-request/changed-files": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryPullRequests"
                                                ],
                                                "summary": "Retrieves pull request changed files. Use this endpoint when the GetRepositoryPullRequestOverview endpoint does not retrieve all changes or when user explicitly asks for pull request changed files",
                                                "operationId": "GetRepositoryPullRequestChangedFiles",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/PullRequestChangesRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns repository pull request changed files",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/RepositoryPullRequestChangedFilesResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/pull-request/comments": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryPullRequests"
                                                ],
                                                "summary": "Retrieves pull request comments. Use this endpoint when the GetRepositoryPullRequestOverview endpoint does not retrieve all comments or when user explicitly asks for pull request comments or conversation",
                                                "operationId": "GetRepositoryPullRequestComments",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/PullRequestCommentsRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns repository pull comments",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/RepositoryPullRequestCommentsResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/search/repository/code": {
                                            "post": {
                                                "tags": [
                                                    "Search"
                                                ],
                                                "summary": "Search code by user specified keywords. Use when user explicitly asked to search for something. Otherwise prefer to fetch the repository structure. Invoke only with user-specified, specific keywords (e.g., file, class, method names). Avoid generic terms.",
                                                "operationId": "SearchCode",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/SearchCodeRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns search by code results",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/SearchCodeResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/search/repository/issues": {
                                            "post": {
                                                "tags": [
                                                    "Search"
                                                ],
                                                "summary": "Search issues by user specified keywords. Use only when user explicitly asked to search for issues and provided search query.",
                                                "operationId": "SearchIssues",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/SearchIssuesRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns found issues",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/SearchIssuesResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/search/repository/commits": {
                                            "post": {
                                                "tags": [
                                                    "Search"
                                                ],
                                                "summary": "Search commits by user specified keywords. Use only when user explicitly asked to search for commits and provided search query.",
                                                "operationId": "SearchCommits",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/SearchCommitsRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns found issues",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/SearchCommitsResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/search/repository": {
                                            "post": {
                                                "tags": [
                                                    "Search"
                                                ],
                                                "summary": "Search repositories by user specified keywords. Use only when user explicitly asked to search for repositories and provided search query.",
                                                "operationId": "SearchRepositories",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/SearchRepositoriesRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns found repositories",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/SearchRepositoriesResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "CheckoutRepositoryFileRequestDto": {
                                                "required": [
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    },
                                                    "filePath": {
                                                        "type": "string",
                                                        "description": "Paths to the file. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CheckoutRepositoryFileResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "fileContent": {
                                                        "$ref": "#/components/schemas/FileContentDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CommitChangesRequestDto": {
                                                "required": [
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "fromFileName": {
                                                        "type": "string",
                                                        "description": "Name of the file to start grabbing changes from. Pass it when you want to query the continuation of the commit changes",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CommitChangesResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "commit": {
                                                        "$ref": "#/components/schemas/RepositoryCommitChangesDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CommitHistoryCommitDto": {
                                                "type": "object",
                                                "properties": {
                                                    "commitUrl": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "commitDate": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    },
                                                    "author": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CommitHistoryRequestDto": {
                                                "required": [
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it",
                                                        "nullable": true
                                                    },
                                                    "filePath": {
                                                        "type": "string",
                                                        "description": "Path to the file to request the commit history for. Use path relative to the root directory of the repository",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CommitHistoryResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "filePath": {
                                                        "type": "string",
                                                        "description": "File path the history is returned for",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "commits": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/CommitHistoryCommitDto"
                                                        },
                                                        "description": "List of commits in the file history, ordered by date",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "count": {
                                                        "type": "integer",
                                                        "description": "True if not all commits have been returned returned",
                                                        "format": "int32",
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CommitOverviewRequestDto": {
                                                "required": [
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CommitOverviewResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "commit": {
                                                        "$ref": "#/components/schemas/RepositoryCommitOverviewDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "ContentRequestDto": {
                                                "required": [
                                                    "filePaths",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it. When requesting file from commit, use commit SHA.",
                                                        "nullable": true
                                                    },
                                                    "relativePath": {
                                                        "type": "string",
                                                        "description": "Relative paths to the directory. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    },
                                                    "filePaths": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Files to query the content of. Order them by relevance descendant. This should NEVER contain the repository branch. First determine the branch if possible, and only then the file paths. Pass only if you are sure about the file path, call GetRepositoryStructure otherwise"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CreateRepositoryBranchRequestDto": {
                                                "required": [
                                                    "branchName",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branchName": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "The name of the branch that should be created"
                                                    },
                                                    "parentBranchName": {
                                                        "type": "string",
                                                        "description": "The name of the branch that the new branch should be created from. If not specified, the repository default branch will be used.",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CreateRepositoryBranchResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CreateRepositoryFileRequestDto": {
                                                "required": [
                                                    "commitMessage",
                                                    "content",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    },
                                                    "filePath": {
                                                        "type": "string",
                                                        "description": "Paths to the file.",
                                                        "nullable": true
                                                    },
                                                    "content": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "File content"
                                                    },
                                                    "commitMessage": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Commit message to be used when saving the file."
                                                    },
                                                    "isApprovedByUserForDefaultBranch": {
                                                        "type": "boolean",
                                                        "description": "Always default it to false. Set it to true ONLY when you previously explicitly asked users confirmation to save to the default repository branch. It's crucial to be very careful with passing true, it can corrupt users repository code."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CreateRepositoryFileResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "createCommit": {
                                                        "$ref": "#/components/schemas/RepositoryCommitOverviewDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "DeleteRepositoryBranchRequestDto": {
                                                "required": [
                                                    "branchName",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branchName": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "The name of the branch that should be deleted"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "DeleteRepositoryBranchResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "DeleteRepositoryFileRequestDto": {
                                                "required": [
                                                    "commitMessage",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    },
                                                    "filePath": {
                                                        "type": "string",
                                                        "description": "Paths to the file. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    },
                                                    "commitMessage": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Commit message to be used when saving the file."
                                                    },
                                                    "isApprovedByUserForDefaultBranch": {
                                                        "type": "boolean",
                                                        "description": "Always default it to false. Set it to true ONLY when you previously explicitly asked users confirmation to save to the default repository branch. It's crucial to be very careful with passing true, it can corrupt users repository code."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "DeleteRepositoryFileResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "updateCommit": {
                                                        "$ref": "#/components/schemas/RepositoryCommitOverviewDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "FileContentDto": {
                                                "type": "object",
                                                "properties": {
                                                    "path": {
                                                        "type": "string",
                                                        "description": "Relative path to the file. The path is always relative to the root folder",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "description": "The content of the file. If null or missing, this means that the file content overflowed the allowed maximum and should be queried separately in the next request. Please explain the user why not all files where returned and ask if he wants to proceed.",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "error": {
                                                        "type": "string",
                                                        "description": "An error that occurred when getting the file content",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "FoundCommitDto": {
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "type": "string",
                                                        "description": "Commit Url. Use it to request the overview and changes for the specific commit",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "Commit message",
                                                        "nullable": true
                                                    },
                                                    "matches": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Matches within the commit",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "FoundFileDto": {
                                                "type": "object",
                                                "properties": {
                                                    "path": {
                                                        "type": "string",
                                                        "description": "Path to the file relative to the repository root",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "matches": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Lines of code within the file that matched the search",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "totals": {
                                                        "$ref": "#/components/schemas/TextMatchesTotalsDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "FoundIssueDto": {
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "type": "string",
                                                        "description": "Issue Url. Use it to request the details about the issue",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "description": "Issue title",
                                                        "nullable": true
                                                    },
                                                    "matches": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/TextMatchDto"
                                                        },
                                                        "description": "Matches within the issue",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "FoundRepositoryDto": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Repository name",
                                                        "nullable": true
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "description": "Repository URL. Use it to query over the particular repository",
                                                        "nullable": true
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "description": "Repository description",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "GithubIssueCommentDto": {
                                                "type": "object",
                                                "properties": {
                                                    "body": {
                                                        "type": "string",
                                                        "description": "Body of issue comment. It has the next format: [CREATION DATE] USERNAME (USER ROLE): (MESSAGE)",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "likes": {
                                                        "type": "integer",
                                                        "description": "Number of positive reactions under the issue comment.",
                                                        "format": "int32",
                                                        "readOnly": true
                                                    },
                                                    "dislikes": {
                                                        "type": "integer",
                                                        "description": "Number of negative reactions under the issue comment.",
                                                        "format": "int32",
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "GithubIssueDto": {
                                                "type": "object",
                                                "properties": {
                                                    "title": {
                                                        "type": "string",
                                                        "description": "Title of issue.",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "body": {
                                                        "type": "string",
                                                        "description": "Body of issue. It has the next format: [CREATION DATE] USERNAME (USER ROLE): (MESSAGE)",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "comments": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/GithubIssueCommentDto"
                                                        },
                                                        "description": "List of comments.",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "IssueRequestDto": {
                                                "required": [
                                                    "issueUrl"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "issueUrl": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Github issue URL"
                                                    },
                                                    "comment": {
                                                        "type": "string",
                                                        "description": "The message of the comment you want to request. Provide only when you want to request some specific comment.",
                                                        "nullable": true
                                                    },
                                                    "lastComment": {
                                                        "type": "string",
                                                        "description": "The message of last comment you know about. Provide only when you want to request more issue comments. Never set both comment and lastComment fields.",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "IssueResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "issue": {
                                                        "$ref": "#/components/schemas/GithubIssueDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "ListRepositoryBranchesRequestDto": {
                                                "required": [
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "ListRepositoryBranchesResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "branches": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/RepositoryBranch"
                                                        },
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "OpenPullRequestsListRequestDto": {
                                                "required": [
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "PostIssueCommentRequestDto": {
                                                "required": [
                                                    "comment",
                                                    "issueUrl"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "issueUrl": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Github issue URL"
                                                    },
                                                    "comment": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "The message of the comment to post under the issue"
                                                    },
                                                    "isApprovedByUser": {
                                                        "type": "boolean",
                                                        "description": "Has user approved the comment. If user asked you to post some comment you should first present him the issue URL you want to post comment to and the comment body. Set this to true only if you have explicitly asked for confirmation and user has approved it."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "PostIssueCommentResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "PullRequestChangedFileDto": {
                                                "type": "object",
                                                "properties": {
                                                    "sha": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "filename": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "patch": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "previousFilename": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "additions": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "deletions": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "changes": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "PullRequestChangesRequestDto": {
                                                "required": [
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "fromFileName": {
                                                        "type": "string",
                                                        "description": "Name of the file to start grabbing changes from. Pass it when you want to query the continuation of the pull request changes",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "PullRequestCommentDto": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "body": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "commenter": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "discussion": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/PullRequestDiscussionDto"
                                                        },
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "PullRequestCommentsRequestDto": {
                                                "required": [
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "fromCommentId": {
                                                        "type": "integer",
                                                        "description": "ID of the comment to start grabbing comments from. Pass it when you want to query the continuation of the pull request comments",
                                                        "format": "int64",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "PullRequestDiscussionDto": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "body": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "filePath": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "fileDiff": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "commenter": {
                                                        "type": "string",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "PullRequestOverviewResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "pullRequest": {
                                                        "$ref": "#/components/schemas/RepositoryPullRequestOverviewDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "PullRequestRequestDto": {
                                                "required": [
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "PullRequestState": {
                                                "enum": [
                                                    0,
                                                    1
                                                ],
                                                "type": "integer",
                                                "format": "int32"
                                            },
                                            "PullRequestsListResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "pullRequests": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/RepositoryPullRequestsListItemDto"
                                                        },
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryBranch": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "headSha": {
                                                        "type": "string",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryCommitChangesDto": {
                                                "type": "object",
                                                "properties": {
                                                    "sha": {
                                                        "type": "string",
                                                        "description": "SHA of the commit. When getting full content of the file, use it as the branch name until other branch is explicitly specified by user",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "parentCommitSha": {
                                                        "type": "string",
                                                        "description": "SHA of the parent commit. Use it in URL to query the full content of the file that was before the commit when requesting GetRepositoryContent",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "changes": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/RepositoryCommitFileDto"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "otherFilesInCommit": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "nextFileToQuery": {
                                                        "type": "string",
                                                        "description": "Name of the next file to query. Pass it as FromFileName when you want to query the continuation of the commit changes. If not null, empty or missing, this means that commit changes were not fully analyzed. Ask user if he want to proceed before querying.",
                                                        "nullable": true
                                                    },
                                                    "totals": {
                                                        "$ref": "#/components/schemas/RepositoryCommitTotalsDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryCommitFileDto": {
                                                "type": "object",
                                                "properties": {
                                                    "fileName": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "patch": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryCommitOverviewDto": {
                                                "type": "object",
                                                "properties": {
                                                    "sha": {
                                                        "type": "string",
                                                        "description": "SHA of the commit. When getting full content of the file, use it as the branch name until other branch is explicitly specified by user",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "parentCommitSha": {
                                                        "type": "string",
                                                        "description": "SHA of the parent commit. Use it in URL to query the full content of the file that was before the commit when requesting GetRepositoryContent",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "commitDate": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    },
                                                    "author": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "changedFiles": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "totalFiles": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryCommitTotalsDto": {
                                                "type": "object",
                                                "properties": {
                                                    "totalFiles": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "readOnly": true
                                                    },
                                                    "analyzedFiles": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryContentResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "branchName": {
                                                        "type": "string",
                                                        "description": "Requested Github repository branch",
                                                        "nullable": true
                                                    },
                                                    "files": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/FileContentDto"
                                                        },
                                                        "description": "File contents",
                                                        "nullable": true
                                                    },
                                                    "adv": {
                                                        "type": "string",
                                                        "description": "Display it only when you are not planning to send more requests. Separate Adv from the main response with a line",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryFileContentPatchDto": {
                                                "type": "object",
                                                "properties": {
                                                    "startLine": {
                                                        "type": "integer",
                                                        "description": "One-based line number to start replacing the file content from. This number is inclusive, meaning that the line at this line will also be replaced. ALWAYS double-check the line number before posting to the endpoint.",
                                                        "format": "int32"
                                                    },
                                                    "endLine": {
                                                        "type": "integer",
                                                        "description": "One-based line number to replace the file content to. This number is inclusive, the line with this line number will also be replaced. ALWAYS double-check the line number before posting. It does not support indexing from the file end.",
                                                        "format": "int32"
                                                    },
                                                    "insertOnly": {
                                                        "type": "boolean",
                                                        "description": "Pass TRUE only when you want to insert the new code and do not replace any existing code. StartLine will be used as the line to insert before. Otherwise either leave empty, or pass FALSE",
                                                        "nullable": true
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "description": "New content. Always validate indentation prior to posting. The content should contain the diff between the old version and a new one.",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryPullRequestChangedFilesDto": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "number": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "changedFiles": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/PullRequestChangedFileDto"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "nextChangedFileName": {
                                                        "type": "string",
                                                        "description": "The name of the next changed file that was not included in the response. If null, all files were included.",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryPullRequestChangedFilesResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "pullRequest": {
                                                        "$ref": "#/components/schemas/RepositoryPullRequestChangedFilesDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryPullRequestCommentsDto": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "number": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "comments": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/PullRequestCommentDto"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "nextCommentId": {
                                                        "type": "integer",
                                                        "description": "The ID of the next comment that was not included in the response. If null, all files were included.",
                                                        "format": "int64",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryPullRequestCommentsResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "pullRequest": {
                                                        "$ref": "#/components/schemas/RepositoryPullRequestCommentsDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryPullRequestOverviewDto": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "number": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "issueUrl": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "state": {
                                                        "$ref": "#/components/schemas/PullRequestState"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "body": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updatedAt": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "closedAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "mergedAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "openedBy": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "assignees": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "mergedBy": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "mergeCommitSha": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "totals": {
                                                        "$ref": "#/components/schemas/RepositoryPullRequestTotals"
                                                    },
                                                    "comments": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/PullRequestCommentDto"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "nextCommentId": {
                                                        "type": "integer",
                                                        "description": "The ID of the next comment that was not included in the response. If null, all files were included.",
                                                        "format": "int64",
                                                        "nullable": true
                                                    },
                                                    "changedFiles": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/PullRequestChangedFileDto"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "nextChangedFileName": {
                                                        "type": "string",
                                                        "description": "The name of the next changed file that was not included in the response. If null, all files were included.",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryPullRequestTotals": {
                                                "type": "object",
                                                "properties": {
                                                    "commentsCount": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "commitsCount": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "additionsCount": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "deletionsCount": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "changedFilesCount": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryPullRequestsListItemDto": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "number": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "issueUrl": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "state": {
                                                        "$ref": "#/components/schemas/PullRequestState"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "body": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "createdAt": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updatedAt": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "closedAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "mergedAt": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "nullable": true
                                                    },
                                                    "openedBy": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "assignees": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "mergedBy": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "mergeCommitSha": {
                                                        "type": "string",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "SearchCodeRequestDto": {
                                                "required": [
                                                    "searchKeywords",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it. When requesting file from commit, use commit SHA.",
                                                        "nullable": true
                                                    },
                                                    "relativePath": {
                                                        "type": "string",
                                                        "description": "Relative path to the file or directory to search in. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    },
                                                    "searchKeywords": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Search keywords. Invoke only with user-specified keywords. Never use keywords that are not part of the user prompt. When user asks to search for function definitions in a specific file (not directory) and you cannot parse them from file content, pass function keyword relevant for the file language."
                                                    },
                                                    "searchHitLinesCount": {
                                                        "type": "integer",
                                                        "description": "Number of lines to retrieve. Set only when explicitly asked to retrieve the specified amount of lines by the user.",
                                                        "format": "int32",
                                                        "nullable": true
                                                    },
                                                    "skipMatchesCount": {
                                                        "type": "integer",
                                                        "description": "Number of matches to skip in the file. use only when user is searching over file and you need to search for matches that were omitted from the previous search request",
                                                        "format": "int32",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "SearchCodeResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "branchName": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "searchResults": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/FoundFileDto"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "adv": {
                                                        "type": "string",
                                                        "description": "Display it only when you are not planning to send more requests. Separate Adv from the main response with a line",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "SearchCommitsRequestDto": {
                                                "required": [
                                                    "searchKeywords",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "searchKeywords": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Search keywords. Invoke only with user-specified keywords. Never use keywords that are not part of the user prompt."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "SearchCommitsResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "commits": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/FoundCommitDto"
                                                        },
                                                        "description": "List of found commits, ordered by relevance",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "totalCount": {
                                                        "type": "integer",
                                                        "description": "The count of found commits",
                                                        "format": "int32"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "SearchIssuesRequestDto": {
                                                "required": [
                                                    "searchKeywords",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "searchKeywords": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Search keywords. Invoke only with user-specified keywords in singular form. Never use keywords that are not part of the user prompt. Keywords MUST be in singular form."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "SearchIssuesResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "issues": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/FoundIssueDto"
                                                        },
                                                        "description": "List of found issues, ordered by relevance",
                                                        "nullable": true
                                                    },
                                                    "totalCount": {
                                                        "type": "integer",
                                                        "description": "The count of found issues",
                                                        "format": "int32"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "SearchRepositoriesRequestDto": {
                                                "required": [
                                                    "searchKeywords"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "searchKeywords": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Search keywords. Always use a single, specific keyword that best represents the topic. Avoid using multiple keywords for the same topic. OR logic applied, so providing multiple keywords for the same topic will worsen the results. Keywords should be singular, contain single word and clearly defined for precise searches."
                                                    },
                                                    "language": {
                                                        "type": "string",
                                                        "description": "Programming language. Use only when explicitly specified by the user",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "SearchRepositoriesResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "repositories": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/FoundRepositoryDto"
                                                        },
                                                        "description": "List of found repositories, ordered by relevance",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "totalCount": {
                                                        "type": "integer",
                                                        "description": "The count of found repositories",
                                                        "format": "int32"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "StructureRequestDto": {
                                                "required": [
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    },
                                                    "relativePaths": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Relative paths to retrieve. USE only paths you are certain that exist, NEVER invent them. If the provided URL contains a specific directory path, extract and use it. Otherwise, this should be a directory path or pattern only. Patterns accept * symbol as \"any substring\"",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "StructureResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "branchName": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "nextStep": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "files": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "TextMatchDto": {
                                                "type": "object",
                                                "properties": {
                                                    "objectType": {
                                                        "type": "string",
                                                        "description": "Type of the object that contains the match. E.g., 'IssueComment', 'FileContent' etc",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "property": {
                                                        "type": "string",
                                                        "description": "Name of the property that contains the match. E.g., 'body', 'content', 'Description' etc",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "lines": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Lines within the property that matched the search",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "TextMatchesTotalsDto": {
                                                "type": "object",
                                                "properties": {
                                                    "total": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "readOnly": true
                                                    },
                                                    "analyzed": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "UpdateRepositoryFileRequestDto": {
                                                "required": [
                                                    "commitMessage",
                                                    "contentPatch",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    },
                                                    "filePath": {
                                                        "type": "string",
                                                        "description": "Paths to the file.",
                                                        "nullable": true
                                                    },
                                                    "contentPatch": {
                                                        "$ref": "#/components/schemas/RepositoryFileContentPatchDto"
                                                    },
                                                    "commitMessage": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Commit message to be used when saving the file."
                                                    },
                                                    "isApprovedByUserForDefaultBranch": {
                                                        "type": "boolean",
                                                        "description": "Always default it to false. Set it to true ONLY when you previously explicitly asked users confirmation to save to the default repository branch. It's crucial to be very careful with passing true, it can corrupt users repository code."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "UpdateRepositoryFileResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "updateCommit": {
                                                        "$ref": "#/components/schemas/RepositoryCommitOverviewDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "UsefulUrlsDto": {
                                                "type": "object",
                                                "properties": {
                                                    "websiteUrl": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "documentationUrl": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "githubUrl": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "twitterUrl": {
                                                        "type": "string",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        },
                                        "securitySchemes": {
                                            "Bearer": {
                                                "type": "http",
                                                "description": "Please enter a valid token",
                                                "scheme": "Bearer",
                                                "bearerFormat": "JWT"
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "oauth",
                                    "instructions": "",
                                    "client_url": "https://pluginlab.askthecode.dsomok.online/oauth/authorize",
                                    "scope": "all",
                                    "authorization_url": "https://pluginlab.askthecode.dsomok.online/oauth/token",
                                    "authorization_content_type": "application/x-www-form-urlencoded",
                                    "verification_tokens": {},
                                    "pkce_required": false,
                                    "token_exchange_method": "default_post"
                                },
                                "privacy_policy_url": "https://docs.askthecode.ai/legal/"
                            }
                        },
                        {
                            "id": "gzm_cnf_SRjf7CME7b9vYL1toHJPNgPd~gzm_tool_Scsp1CQ2H0vNxhKV89IDnSQr",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_SRjf7CME7b9vYL1toHJPNgPd~gzm_tool_fMs6vWjBLDLorQu2Jr6kKDa9",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_SRjf7CME7b9vYL1toHJPNgPd~gzm_tool_NLjIGIraSpiQpPXXvKP4ZRyi",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-php",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/pdf",
                                "text/x-script.python",
                                "text/x-typescript",
                                "text/x-sh",
                                "application/json",
                                "text/x-tex",
                                "text/x-csharp",
                                "text/x-c++",
                                "text/x-java",
                                "text/html",
                                "text/x-c",
                                "text/x-ruby",
                                "application/x-latext",
                                "application/msword",
                                "text/plain",
                                "text/markdown",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/jpeg",
                                "image/webp"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-qqTuUWsBY",
                        "organization_id": "org-hZRtglLxBYvAvvtxhca6Qoso",
                        "short_url": "g-qqTuUWsBY-crewai-assistant",
                        "author": {
                            "user_id": "user-Z7G4wMLazxqvC5wjYAAaoCfz",
                            "display_name": "JOAO M DURAES MOURA",
                            "link_to": null,
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "CrewAI Assistant",
                            "description": "CrewAI expert",
                            "prompt_starters": [
                                "Help me create a crew for a use case",
                                "What are some advanced CrewAI features?",
                                "How can I set up a Crew myself?",
                                "Explain CrewAI for me"
                            ],
                            "profile_pic_id": "file-NZbU15LvF7fOHVqNCMadAbVe",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-NZbU15LvF7fOHVqNCMadAbVe?se=2124-02-23T16%3A01%3A41Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3Dc_only.png&sig=UrvUk3sjPm0pt9p4nqVlvpa0NsfoWulXw1Tm7CPiqtI%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-14T18:42:24.210719+00:00",
                        "updated_at": "2024-03-18T20:34:38.543591+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "uses_function_calls",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_8BuqghMQSyKxTyyu3tq42PiJ~gzm_tool_WKGxuXyHbeOEHG3QTxWNGfxC",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_8BuqghMQSyKxTyyu3tq42PiJ~gzm_tool_EPFrUVqlCSD73dx840iGAXOX",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_S2ECcbq0xxbnpOnp0p4TTolb~gzm_tool_ie1m9uotitZGysVZLEollleV",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-ddbd19ca55fc1d150b6ae66a6ef2a6685f9ac0f2",
                                "domain": "crew-ai-custom-gpt-crewai.replit.app",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.1.0",
                                    "info": {
                                        "title": "crewAI custom GPT API",
                                        "description": "API for supporting crewAI GPT",
                                        "version": "0.1"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://crew-ai-custom-gpt-crewai.replit.app",
                                            "description": "Main API server"
                                        }
                                    ],
                                    "paths": {
                                        "/read_crewai_code/{code_class}": {
                                            "get": {
                                                "summary": "Read Code",
                                                "operationId": "read_code_read_crewai_code__code_class__get",
                                                "parameters": [
                                                    {
                                                        "name": "code_class",
                                                        "in": "path",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string",
                                                            "title": "Code Class",
                                                            "enum": [
                                                                "agent",
                                                                "task",
                                                                "crew",
                                                                "process"
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful Response",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        }
                                                    },
                                                    "422": {
                                                        "description": "Validation Error",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/crewai_tools": {
                                            "get": {
                                                "summary": "Crewai Tools",
                                                "operationId": "crewai_tools_crewai_tools_get",
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful Response",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/crewai_tools/{tool}/example": {
                                            "get": {
                                                "summary": "Crewai Tool Example",
                                                "operationId": "crewai_tool_example_crewai_tools__tool__example_get",
                                                "parameters": [
                                                    {
                                                        "name": "tool",
                                                        "in": "path",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string",
                                                            "title": "Tool Class Namer",
                                                            "enum": [
                                                                "CodeDocsSearchTool",
                                                                "CSVSearchTool",
                                                                "DirectorySearchTool",
                                                                "DOCXSearchTool",
                                                                "DirectoryReadTool",
                                                                "FileReadTool",
                                                                "GithubSearchTool",
                                                                "SerperDevTool",
                                                                "TXTSearchTool",
                                                                "JSONSearchTool",
                                                                "MDXSearchTool",
                                                                "PDFSearchTool",
                                                                "PGSearchTool",
                                                                "RagTool",
                                                                "ScrapeElementFromWebsiteTool",
                                                                "ScrapeWebsiteTool",
                                                                "SeleniumScrapingTool",
                                                                "WebsiteSearchTool",
                                                                "XMLSearchTool",
                                                                "YoutubeChannelSearchTool",
                                                                "YoutubeVideoSearchTool"
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful Response",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        }
                                                    },
                                                    "422": {
                                                        "description": "Validation Error",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/agent_examples/{type}": {
                                            "get": {
                                                "summary": "Agent Examples",
                                                "operationId": "agent_examples_agent_examples__type__get",
                                                "parameters": [
                                                    {
                                                        "name": "type",
                                                        "in": "path",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string",
                                                            "title": "Type",
                                                            "enum": [
                                                                "travel_related_examples",
                                                                "financial_related_examples",
                                                                "landing_page_generation_related_examples",
                                                                "marketing_related_examples",
                                                                "game_generation_related_examples"
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful Response",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        }
                                                    },
                                                    "422": {
                                                        "description": "Validation Error",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/task_examples/{type}": {
                                            "get": {
                                                "summary": "Task Examples",
                                                "operationId": "task_examples_task_examples__type__get",
                                                "parameters": [
                                                    {
                                                        "name": "type",
                                                        "in": "path",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string",
                                                            "title": "Type",
                                                            "enum": [
                                                                "travel_related_examples",
                                                                "financial_related_examples",
                                                                "marketing_related_examples",
                                                                "game_generation_related_examples"
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful Response",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        }
                                                    },
                                                    "422": {
                                                        "description": "Validation Error",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "HTTPValidationError": {
                                                "properties": {
                                                    "detail": {
                                                        "items": {
                                                            "$ref": "#/components/schemas/ValidationError"
                                                        },
                                                        "type": "array",
                                                        "title": "Detail"
                                                    }
                                                },
                                                "type": "object",
                                                "title": "HTTPValidationError"
                                            },
                                            "ValidationError": {
                                                "properties": {
                                                    "loc": {
                                                        "items": {
                                                            "anyOf": [
                                                                {
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "type": "integer"
                                                                }
                                                            ]
                                                        },
                                                        "type": "array",
                                                        "title": "Location"
                                                    },
                                                    "msg": {
                                                        "type": "string",
                                                        "title": "Message"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Error Type"
                                                    }
                                                },
                                                "type": "object",
                                                "required": [
                                                    "loc",
                                                    "msg",
                                                    "type"
                                                ],
                                                "title": "ValidationError"
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://crew-ai-custom-gpt-crewai.replit.app/privacy"
                            }
                        },
                        {
                            "id": "gzm_cnf_8BuqghMQSyKxTyyu3tq42PiJ~gzm_tool_RE324Ho8tAfzR0RLdsQCo0qL",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [
                        {
                            "id": "gzm_cnf_MyQJEoQd8fJei9nIWUMNUVPr~gzm_file_GBMDpMddm2AGmT7M81lVQesS",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_1gOEPPbqukf92Nc77Vi5Xbsk~gzm_file_OuKcihbfpZRXToRh2qBonGOl",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_Bz8ZP0may53ErRNp24SF2QnA~gzm_file_vizeSx8uEaHpOI3e8315pJ24",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_Bz8ZP0may53ErRNp24SF2QnA~gzm_file_7gQETi1D8GTsCuyh9N8A1XjZ",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_Bz8ZP0may53ErRNp24SF2QnA~gzm_file_PYty4NQd4SVr2tUBCPbLqIR1",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_dZjsBMik428RNyQy9kwvaNEd~gzm_file_LKgC0peR5p3fhPoO2I1cIFTv",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_SVlbK58BT8mEq2OrwlaS72Pd~gzm_file_QJlLRbMGEiKSQ6GtFwnA0IG9",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_SVlbK58BT8mEq2OrwlaS72Pd~gzm_file_Dd8F9OCb7aGH4lDoyM7GtLaZ",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_SVlbK58BT8mEq2OrwlaS72Pd~gzm_file_A6XpsvNjHVGOFvsgRPPNWMpQ",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_Bz8ZP0may53ErRNp24SF2QnA~gzm_file_pdrUGH1soLTkT4LVIgWZ18WJ",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_Bz8ZP0may53ErRNp24SF2QnA~gzm_file_x5rilUlrAsY9qMpQja5FcZyW",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_KKfgOJpCmTnwVR3KPk4cHb2h~gzm_file_8aFWbljmQg1u6W34HIzNAE5x",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_Bz8ZP0may53ErRNp24SF2QnA~gzm_file_P61rUJQnh4sKGw3MXvCuPI0s",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_O3vLwN90j0vCp0UAP5TeII9x~gzm_file_n5TXKXD2Ke5ro0rbTMBfYCkz",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_SVlbK58BT8mEq2OrwlaS72Pd~gzm_file_EzMvJE4wxsv85CbSR1L3Rq0d",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_SVlbK58BT8mEq2OrwlaS72Pd~gzm_file_bdzWd7S3u7L1mZG3ormB2aX8",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_7lbN8arRYSqwf9CJM5n6rENB~gzm_file_aklabQsoPVyJiXa5A7Y4dOUV",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_SVlbK58BT8mEq2OrwlaS72Pd~gzm_file_BtMSYmDFXzDZAuZxLfZIfsKo",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_5TTZB9JNYQ6XlNN7TG4wfBCH~gzm_file_DPm0zSIAmUow780tjvkXVSxp",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_a4lcEgNOMWOxEvD8DqbqLd99~gzm_file_qb0jbhG2JpbbTiCAP6fGQqgK",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-php",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/pdf",
                                "text/x-script.python",
                                "text/x-typescript",
                                "text/x-sh",
                                "application/json",
                                "text/x-tex",
                                "text/x-csharp",
                                "text/x-c++",
                                "text/x-java",
                                "text/html",
                                "text/x-c",
                                "text/x-ruby",
                                "application/x-latext",
                                "application/msword",
                                "text/plain",
                                "text/markdown",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/jpeg",
                                "image/webp"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-pTF23RJ6f",
                        "organization_id": "org-oVSt1r5YTNNoENKl3zJ0hcTl",
                        "short_url": "g-pTF23RJ6f-autoexpert-dev",
                        "author": {
                            "user_id": "user-kXMhiu1ELw9iK7sDP2wGaSAU",
                            "display_name": "Dustin Miller",
                            "link_to": "https://llmimagineers.com",
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "AutoExpert (Dev)",
                            "description": "AutoExpert v6 (GPT Developer Edition) is your steadfast pair programmer, armed with enhanced code generation ability, online access for the latest APIs, and custom commands to save your session state so you can recall it in a new session later. /help will tell you all about it. Say \"Hello\" to start!",
                            "prompt_starters": [
                                "Hello",
                                "/help"
                            ],
                            "profile_pic_id": "file-eLFrNX9FaFZ2c2utPPLBfxKv",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-eLFrNX9FaFZ2c2utPPLBfxKv?se=2123-10-20T20%3A05%3A54Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DAutoExpertDev.jpg&sig=l6nI5Vev4Xg7ghEU7xeA4caih7rFbOjR1NDu/cEDxAU%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-09T04:38:27.455576+00:00",
                        "updated_at": "2024-02-28T13:50:34.876687+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_oWhzpsG7VQz4c79uiaRwOpiW~gzm_tool_my5p98NF6UvVwEAMzz7M3Vp0",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_oWhzpsG7VQz4c79uiaRwOpiW~gzm_tool_c2xIFGxgZj9WkDgb7pGFNypX",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [
                        {
                            "id": "gzm_cnf_9XvgiPhiiXqD3MGkbjHWT4Tz~gzm_file_EgZlQdsRlxxErYNsRLH5dXGx",
                            "type": "text/x-python-script",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_iItpXvjrGIZZ3Jh6EwOro58E~gzm_file_AN5XOjTVVsrKUMKdNWk5qpgv",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_9XvgiPhiiXqD3MGkbjHWT4Tz~gzm_file_gyc9u44Wlgjooo86d38t2895",
                            "type": "text/plain",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-php",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/pdf",
                                "text/x-script.python",
                                "text/x-typescript",
                                "text/x-sh",
                                "application/json",
                                "text/x-tex",
                                "text/x-csharp",
                                "text/x-c++",
                                "text/x-java",
                                "text/html",
                                "text/x-c",
                                "text/x-ruby",
                                "application/x-latext",
                                "application/msword",
                                "text/plain",
                                "text/markdown",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/jpeg",
                                "image/webp"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-Uz8I8oK3R",
                        "organization_id": "org-IobrZlJS7Zq3jUoeBtsh9Mxi",
                        "short_url": "g-Uz8I8oK3R-unity-helper",
                        "author": {
                            "user_id": "user-PR4WSfhspaPdFPQbb8kKT7f8",
                            "display_name": "Jesus Angarita",
                            "link_to": null,
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": [
                                {
                                    "id": "linkedinverify-4b97-9080-6c959845166a",
                                    "type": "linkedin",
                                    "display_name": "LinkedIn",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "57Fw7a6r1U",
                                        "username": "Jesus Angarita",
                                        "display_name": "Jesus Angarita",
                                        "type": "linkedin",
                                        "link_to": "https://linkedin.com/in/ninquiet"
                                    }
                                },
                                {
                                    "id": "twitterverify-43d2-b12a-bbe33d600487",
                                    "type": "twitter",
                                    "display_name": "X",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "1165823683912450048",
                                        "username": "@Ninquiet",
                                        "type": "twitter",
                                        "link_to": "https://twitter.com/Ninquiet"
                                    }
                                }
                            ]
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Unity Helper",
                            "description": "Hi fellow developer! Ready to assist with your Unity coding and game design queries.",
                            "prompt_starters": [
                                "Can you help me optimize this Unity code?",
                                "What's a better way to write this function in Unity?",
                                "I'm stuck with a bug in Unity, can you help?",
                                "How can I refactor this Unity script for better readability?"
                            ],
                            "profile_pic_id": "file-SITDAnQoBaMdzS0RrguKfM0X",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-SITDAnQoBaMdzS0RrguKfM0X?se=2124-01-16T23%3A41%3A55Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DScreenshot%25202024-02-09%2520183803.png&sig=AHf51LIwkxayXhn9EvWic4q/yoLNsV0wbcSDpl0BX3A%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-15T14:50:50.716192+00:00",
                        "updated_at": "2024-04-02T16:22:58.583898+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_InCUAxBtNWnubmrVzpeBeaG8~gzm_tool_8AEIyXoYUL6R0ALFWepB4MdE",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_InCUAxBtNWnubmrVzpeBeaG8~gzm_tool_8T3F74qGsOtsvKYx3m3lF7Vq",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_InCUAxBtNWnubmrVzpeBeaG8~gzm_tool_wjXXTreI3ghMYacVSJC5bL4k",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [
                        {
                            "id": "gzm_cnf_N0lzkc6XoZTrMbFX3olimqaq~gzm_file_7X1m1hAfuUivRCq2BfNlJwXD",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "15DPM3YHmP0uPtbIQPVBXbP5",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "OFwvwl60oqNKFORqq9fr0pHJ",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_UlW51kstdhS015gj5lY3SZAc~gzm_file_5gaAKLNH7SvHgMOTBagRVJHV",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_pAxpKpPa7fJhcGFWn43FfjZb~gzm_file_3L1Pmtq9LlFkVkMZjDcPj527",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_vy6CWPBWAahSDOvqKsEFmfgD~gzm_file_QQbCZTX4WQHIVN63QhwndB8n",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "hNj2NovSFej1PlO38ZofRh20",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "063NhBH86MijIFV4qJX8OxhK",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_7OxwntXGw3Wzs1udJTUUR0H7~gzm_file_qH45rGaH8pjxidEmvgwUqlRi",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-php",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/pdf",
                                "text/x-script.python",
                                "text/x-typescript",
                                "text/x-sh",
                                "application/json",
                                "text/x-tex",
                                "text/x-csharp",
                                "text/x-c++",
                                "text/x-java",
                                "text/html",
                                "text/x-c",
                                "text/x-ruby",
                                "application/x-latext",
                                "application/msword",
                                "text/plain",
                                "text/markdown",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/jpeg",
                                "image/webp"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-cZPwvslfA",
                        "organization_id": "org-5XrOZvGKfGakL0ss0Umz1QCG",
                        "short_url": "g-cZPwvslfA-flutter",
                        "author": {
                            "user_id": "user-RdXVUreJ3cRPQYgHWhWYtc7y",
                            "display_name": "Widenex",
                            "link_to": null,
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Flutter",
                            "description": "You personal Flutter copilot, assistant and project generator with a focus on responsive, beautiful, and scalable UI. Write clean Dart code and become a much faster developer.",
                            "prompt_starters": [
                                "ð¤ Build a full login screen with password recovery",
                                "ðª² Find any bug or improvement in my code",
                                "â­ï¸ Transform this UI design into Flutter code",
                                "ð¡ Teach me a useful skill or trick in Flutter"
                            ],
                            "profile_pic_id": "file-9BlE6C48jk9u2xQDLJ1jlHsk",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-9BlE6C48jk9u2xQDLJ1jlHsk?se=2123-12-14T17%3A16%3A11Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DFlutter.001.png&sig=I7aIfSpZlmjMKk8JxlHhSDYU8ueU1AbBhKPwTO1YXEI%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2024-01-07T17:13:52.228304+00:00",
                        "updated_at": "2024-02-19T03:49:25.220095+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_W6UrLDtPbvebBEV0zOf8Ow8N~gzm_tool_XwfIlGQ1qlfCSx6CiTzaXdN0",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-php",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/pdf",
                                "text/x-script.python",
                                "text/x-typescript",
                                "text/x-sh",
                                "application/json",
                                "text/x-tex",
                                "text/x-csharp",
                                "text/x-c++",
                                "text/x-java",
                                "text/html",
                                "text/x-c",
                                "text/x-ruby",
                                "application/x-latext",
                                "application/msword",
                                "text/plain",
                                "text/markdown",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/jpeg",
                                "image/webp"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-jSqTyHBbh",
                        "organization_id": "org-BefTOGXOnbHXj4n8ghoIwSYr",
                        "short_url": "g-jSqTyHBbh-chatcody-github-gitlab-assistant",
                        "author": {
                            "user_id": "user-r8voqHQWSPnzuofhu24mN2Ho",
                            "display_name": "Grace Lungu",
                            "link_to": "https://uigpt.dev",
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": [
                                {
                                    "id": "linkedinverify-4b97-9080-6c959845166a",
                                    "type": "linkedin",
                                    "display_name": "LinkedIn",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "M9LJHPOpsr",
                                        "username": "GrÃ¢ce Lungu",
                                        "display_name": "GrÃ¢ce Lungu",
                                        "type": "linkedin",
                                        "link_to": "https://linkedin.com/in/grÃ¢ce-lungu-262306190"
                                    }
                                },
                                {
                                    "id": "twitterverify-43d2-b12a-bbe33d600487",
                                    "type": "twitter",
                                    "display_name": "X",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "1144311993966497793",
                                        "username": "@gracelubw",
                                        "type": "twitter",
                                        "link_to": "https://twitter.com/gracelubw"
                                    }
                                }
                            ]
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "ChatCody - GitHub, GitLab Assistant",
                            "description": "GitHub / Lab - empowered assistant, designed for comprehensive repository interaction - from code contributions to read/write operations, reviews and advanced task automation.",
                            "prompt_starters": [
                                "Work on issue #123 and raise a pull request with the fix.",
                                "Can you review the most recent merge request?",
                                "Write new unit tests for the 'Payment Gateway' module.",
                                "Create a new repo with a basic express todo app boilerplate.",
                                "Develop integration tests for the 'User Authentication' module in [repository name] and raise an MR for these changes."
                            ],
                            "profile_pic_id": "file-JiXnpmgaV7b92IYZWxhLFNxU",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-JiXnpmgaV7b92IYZWxhLFNxU?se=2123-10-25T13%3A49%3A40Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DDALL%25C2%25B7E%25202023-10-24%252012.34.47%2520-%2520Modern%2520logo%2520design%2520that%2520fuses%2520the%2520GitHub%2520octocat%2520silhouette%2520with%2520the%2520minimalist%2520aesthetics%2520of%2520the%2520OpenAI%2520logo.png&sig=wnK0s71IO7BUEoTbn6mM9M3bftlh40I7jlIiwolTA/s%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-12T12:06:22.386349+00:00",
                        "updated_at": "2024-03-05T18:00:40.339309+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "uses_function_calls",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_GCdy9YxFWMHP7qjRiLjsE8bD~gzm_tool_cWVdVGySfGXF3B3YoxySDa3q",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-ec05df503b01a63ff6e57d76d5ed11f96e3f62ea",
                                "domain": "api.github.com",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.0",
                                    "info": {
                                        "title": "GitHub User, Repositories, and Files API",
                                        "version": "1.0.0"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://api.github.com"
                                        }
                                    ],
                                    "paths": {
                                        "/user": {
                                            "get": {
                                                "summary": "Get the authenticated user's username",
                                                "operationId": "getCurrentUser",
                                                "responses": {
                                                    "200": {
                                                        "description": "Username of the authenticated user",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "login": {
                                                                            "type": "string",
                                                                            "description": "The username of the authenticated user"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/users/{username}/repos": {
                                            "get": {
                                                "summary": "List user repositories [ask user for type]",
                                                "operationId": "listUserRepos",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "username",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "GitHub username"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "type",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string",
                                                            "default": "owner"
                                                        },
                                                        "description": "Type of repositories (all, owner, member)"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "sort",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "The field to sort by (created, updated, pushed, full_name)"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "direction",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Sort direction (asc or desc)"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "per_page",
                                                        "schema": {
                                                            "type": "integer",
                                                            "default": 10
                                                        },
                                                        "description": "Number of items per page"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "page",
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Page number of the results to fetch"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "A list of repositories",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "$ref": "#/components/schemas/Repository"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "post": {
                                                "summary": "Create a new repository for a specific user",
                                                "operationId": "createUserRepository",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "username",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "The username for whom the repository is being created"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "example": "user-repository"
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "example": "User's personal repository"
                                                                    },
                                                                    "private": {
                                                                        "type": "boolean",
                                                                        "example": true
                                                                    },
                                                                    "auto_init": {
                                                                        "type": "boolean",
                                                                        "example": false
                                                                    },
                                                                    "gitignore_template": {
                                                                        "type": "string",
                                                                        "example": "Python"
                                                                    },
                                                                    "license_template": {
                                                                        "type": "string",
                                                                        "example": "gpl-3.0"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "201": {
                                                        "description": "Repository created successfully"
                                                    }
                                                }
                                            }
                                        },
                                        "/user/repos": {
                                            "post": {
                                                "summary": "Create a new repository",
                                                "operationId": "createRepository",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "description": "The name of the repository"
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "description": "A short description of the repository"
                                                                    },
                                                                    "private": {
                                                                        "type": "boolean",
                                                                        "description": "Whether the repository is private"
                                                                    },
                                                                    "auto_init": {
                                                                        "type": "boolean",
                                                                        "description": "Pass true to create an initial commit with empty README"
                                                                    },
                                                                    "gitignore_template": {
                                                                        "type": "string",
                                                                        "description": "Desired GITIGNORE template to apply"
                                                                    },
                                                                    "license_template": {
                                                                        "type": "string",
                                                                        "description": "Desired license template to apply"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "201": {
                                                        "description": "Repository created successfully",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "format": "int64"
                                                                        },
                                                                        "name": {
                                                                            "type": "string"
                                                                        },
                                                                        "full_name": {
                                                                            "type": "string"
                                                                        },
                                                                        "private": {
                                                                            "type": "boolean"
                                                                        },
                                                                        "owner": {
                                                                            "$ref": "#/components/schemas/User"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Invalid input"
                                                    }
                                                }
                                            }
                                        },
                                        "/repos/{owner}/{repo}/contents/{path}": {
                                            "get": {
                                                "summary": "Get contents of a file",
                                                "operationId": "getFile",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "path",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "File path"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "ref",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "The name of the commit/branch/tag. Default: the repositoryâs default branch (usually master)"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "File content and metadata",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/FileContent"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "put": {
                                                "summary": "Create or update a file",
                                                "operationId": "createOrUpdateFile",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "path",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "File path"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "message": {
                                                                        "type": "string",
                                                                        "description": "The commit message."
                                                                    },
                                                                    "content": {
                                                                        "type": "string",
                                                                        "description": "The new file content, using Base64 encoding."
                                                                    },
                                                                    "sha": {
                                                                        "type": "string",
                                                                        "description": "Required if updating a file. The blob SHA of the file being replaced."
                                                                    },
                                                                    "branch": {
                                                                        "type": "string",
                                                                        "description": "The branch name. Defaults to the repositoryâs default branch."
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "File successfully created or updated"
                                                    },
                                                    "201": {
                                                        "description": "File successfully created"
                                                    },
                                                    "404": {
                                                        "description": "Resource not found"
                                                    },
                                                    "409": {
                                                        "description": "Conflict"
                                                    },
                                                    "422": {
                                                        "description": "Validation failed, or the endpoint has been spammed"
                                                    }
                                                }
                                            },
                                            "delete": {
                                                "summary": "Delete a file",
                                                "operationId": "deleteFile",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "path",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "File path"
                                                    }
                                                ],
                                                "responses": {
                                                    "204": {
                                                        "description": "File successfully deleted"
                                                    }
                                                }
                                            }
                                        },
                                        "/repos/{owner}/{repo}/contents": {
                                            "get": {
                                                "summary": "List files in the root of a repository",
                                                "operationId": "listRepoFiles",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "ref",
                                                        "schema": {
                                                            "type": "string",
                                                            "default": "master"
                                                        },
                                                        "description": "The name of the commit/branch/tag. Default: master"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "A list of files in the repository root",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "$ref": "#/components/schemas/File"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/repos/{owner}/{repo}/issues": {
                                            "post": {
                                                "summary": "Create an issue",
                                                "operationId": "createIssue",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "title": {
                                                                        "type": "string",
                                                                        "description": "Title of the issue"
                                                                    },
                                                                    "body": {
                                                                        "type": "string",
                                                                        "description": "Detailed description of the issue"
                                                                    },
                                                                    "labels": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "string"
                                                                        },
                                                                        "description": "Labels to associate with this issue"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "201": {
                                                        "description": "Issue created successfully"
                                                    }
                                                }
                                            },
                                            "get": {
                                                "summary": "List issues in a repository",
                                                "operationId": "listIssues",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "state",
                                                        "schema": {
                                                            "type": "string",
                                                            "enum": [
                                                                "open",
                                                                "closed",
                                                                "all"
                                                            ],
                                                            "default": "open"
                                                        },
                                                        "description": "State of the issues to list"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "labels",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "A comma-separated list of labels to filter by"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "per_page",
                                                        "schema": {
                                                            "type": "integer",
                                                            "default": 10
                                                        },
                                                        "description": "Number of items per page"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "page",
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Page number of the results to fetch"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "A list of issues"
                                                    }
                                                }
                                            }
                                        },
                                        "/repos/{owner}/{repo}/issues/{issue_number}": {
                                            "get": {
                                                "summary": "Get a single issue",
                                                "operationId": "getIssue",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "issue_number",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Issue number"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Issue retrieved successfully"
                                                    }
                                                }
                                            }
                                        },
                                        "/repos/{owner}/{repo}/issues/{issue_number}/comments": {
                                            "post": {
                                                "summary": "Create a comment on an issue",
                                                "operationId": "createIssueComment",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "issue_number",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Issue number"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "body": {
                                                                        "type": "string",
                                                                        "description": "The text of the comment"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "201": {
                                                        "description": "Comment on the issue created successfully"
                                                    }
                                                }
                                            },
                                            "get": {
                                                "summary": "List comments on an issue",
                                                "operationId": "listIssueComments",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "issue_number",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Issue number"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "per_page",
                                                        "schema": {
                                                            "type": "integer",
                                                            "default": 10
                                                        },
                                                        "description": "Number of items per page"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "page",
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Page number of the results to fetch"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "A list of comments for the specified issue"
                                                    }
                                                }
                                            }
                                        },
                                        "/repos/{owner}/{repo}/issues/comments/{comment_id}": {
                                            "patch": {
                                                "summary": "Update a comment on an issue",
                                                "operationId": "updateIssueComment",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "comment_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Comment ID"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "body": {
                                                                        "type": "string",
                                                                        "description": "The updated text of the comment"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Comment on the issue updated successfully"
                                                    }
                                                }
                                            },
                                            "delete": {
                                                "summary": "Delete a comment on an issue",
                                                "operationId": "deleteIssueComment",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "comment_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Comment ID"
                                                    }
                                                ],
                                                "responses": {
                                                    "204": {
                                                        "description": "Comment on the issue deleted successfully"
                                                    }
                                                }
                                            }
                                        },
                                        "/repos/{owner}/{repo}/git/refs": {
                                            "post": {
                                                "summary": "Create a branch",
                                                "operationId": "createBranch",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "ref": {
                                                                        "type": "string",
                                                                        "description": "The name of the new branch (e.g., refs/heads/new-branch)"
                                                                    },
                                                                    "sha": {
                                                                        "type": "string",
                                                                        "description": "The SHA1 value to branch from"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "201": {
                                                        "description": "Branch created successfully"
                                                    }
                                                }
                                            }
                                        },
                                        "/repos/{owner}/{repo}/branches": {
                                            "get": {
                                                "summary": "List branches in a repository",
                                                "operationId": "listBranches",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "per_page",
                                                        "schema": {
                                                            "type": "integer",
                                                            "default": 10
                                                        },
                                                        "description": "Number of items per page"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "page",
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Page number of the results to fetch"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "A list of branches"
                                                    }
                                                }
                                            }
                                        },
                                        "/repos/{owner}/{repo}/branches/{branch}": {
                                            "get": {
                                                "summary": "Get a single branch",
                                                "operationId": "getBranch",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "branch",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Branch name"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Details of the branch"
                                                    }
                                                }
                                            },
                                            "patch": {
                                                "summary": "Update a branch",
                                                "operationId": "updateBranch",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "branch",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Branch name"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "new_name": {
                                                                        "type": "string",
                                                                        "description": "New name of the branch"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Branch updated successfully"
                                                    }
                                                }
                                            }
                                        },
                                        "/repos/{owner}/{repo}/git/refs/heads/{branch}": {
                                            "delete": {
                                                "summary": "Delete a branch",
                                                "operationId": "deleteBranch",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "branch",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Branch name"
                                                    }
                                                ],
                                                "responses": {
                                                    "204": {
                                                        "description": "Branch deleted successfully"
                                                    }
                                                }
                                            }
                                        },
                                        "/repos/{owner}/{repo}/pulls": {
                                            "post": {
                                                "summary": "Create a pull request",
                                                "operationId": "createPullRequest",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "title": {
                                                                        "type": "string",
                                                                        "description": "Title of the pull request"
                                                                    },
                                                                    "head": {
                                                                        "type": "string",
                                                                        "description": "The name of the branch where changes are implemented"
                                                                    },
                                                                    "base": {
                                                                        "type": "string",
                                                                        "description": "The name of the branch you want the changes pulled into"
                                                                    },
                                                                    "body": {
                                                                        "type": "string",
                                                                        "description": "Detailed description of the pull request"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "201": {
                                                        "description": "Pull request created successfully"
                                                    }
                                                }
                                            },
                                            "get": {
                                                "summary": "List pull requests",
                                                "operationId": "listPullRequests",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "state",
                                                        "schema": {
                                                            "type": "string",
                                                            "enum": [
                                                                "open",
                                                                "closed",
                                                                "all"
                                                            ],
                                                            "default": "open"
                                                        },
                                                        "description": "State of the pull requests to list"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "sort",
                                                        "schema": {
                                                            "type": "string",
                                                            "enum": [
                                                                "created",
                                                                "updated",
                                                                "popularity",
                                                                "long-running"
                                                            ],
                                                            "default": "created"
                                                        },
                                                        "description": "The criteria to sort pull requests"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "direction",
                                                        "schema": {
                                                            "type": "string",
                                                            "enum": [
                                                                "asc",
                                                                "desc"
                                                            ],
                                                            "default": "desc"
                                                        },
                                                        "description": "The direction to sort pull requests"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "per_page",
                                                        "schema": {
                                                            "type": "integer",
                                                            "default": 3
                                                        },
                                                        "description": "Number of items per page"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "page",
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Page number of the results to fetch"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "A list of pull requests"
                                                    }
                                                }
                                            }
                                        },
                                        "/repos/{owner}/{repo}/pulls/{pull_number}": {
                                            "get": {
                                                "summary": "Get a single pull request",
                                                "operationId": "getPullRequest",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "pull_number",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Pull request number"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Details of the pull request"
                                                    }
                                                }
                                            },
                                            "patch": {
                                                "summary": "Update a pull request [also used to close by updating status]",
                                                "operationId": "updatePullRequest",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "pull_number",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Pull request number"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "title": {
                                                                        "type": "string",
                                                                        "description": "Title of the pull request"
                                                                    },
                                                                    "body": {
                                                                        "type": "string",
                                                                        "description": "Detailed description of the pull request"
                                                                    },
                                                                    "state": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "open",
                                                                            "closed"
                                                                        ],
                                                                        "description": "State of the pull request"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Pull request updated successfully"
                                                    }
                                                }
                                            }
                                        },
                                        "/repos/{owner}/{repo}/pulls/{pull_number}/reviews": {
                                            "post": {
                                                "summary": "Create a pull request review",
                                                "operationId": "createPullRequestReview",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "pull_number",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Pull request number"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "body": {
                                                                        "type": "string",
                                                                        "description": "The body text of the pull request review"
                                                                    },
                                                                    "event": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "APPROVE",
                                                                            "REQUEST_CHANGES",
                                                                            "COMMENT"
                                                                        ],
                                                                        "description": "The review action to perform"
                                                                    },
                                                                    "comments": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "path": {
                                                                                    "type": "string",
                                                                                    "description": "The relative path to the file that necessitates a comment"
                                                                                },
                                                                                "position": {
                                                                                    "type": "integer",
                                                                                    "description": "The position in the diff where the comment should be placed"
                                                                                },
                                                                                "body": {
                                                                                    "type": "string",
                                                                                    "description": "Text of the comment"
                                                                                }
                                                                            },
                                                                            "required": [
                                                                                "path"
                                                                            ]
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "201": {
                                                        "description": "Pull request review created successfully"
                                                    }
                                                }
                                            },
                                            "get": {
                                                "summary": "List reviews on a pull request",
                                                "operationId": "listPullRequestReviews",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "pull_number",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Pull request number"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "per_page",
                                                        "schema": {
                                                            "type": "integer",
                                                            "default": 10
                                                        },
                                                        "description": "Number of items per page"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "page",
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Page number of the results to fetch"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "A list of pull request reviews"
                                                    }
                                                }
                                            }
                                        },
                                        "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}": {
                                            "get": {
                                                "summary": "Get a specific review for a pull request",
                                                "operationId": "getPullRequestReview",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "pull_number",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Pull request number"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "review_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Review ID"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Details of the pull request review"
                                                    }
                                                }
                                            }
                                        },
                                        "/repos/{owner}/{repo}/pulls/comments/{comment_id}": {
                                            "delete": {
                                                "summary": "Delete a review comment",
                                                "operationId": "deleteReviewComment",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "comment_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Review comment ID"
                                                    }
                                                ],
                                                "responses": {
                                                    "204": {
                                                        "description": "Review comment deleted successfully"
                                                    }
                                                }
                                            }
                                        },
                                        "/repos/{owner}/{repo}/pulls/{pull_number}/reviews/{review_id}/comments": {
                                            "get": {
                                                "summary": "List comments for a single review",
                                                "operationId": "listReviewComments",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "pull_number",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Pull request number"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "review_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Review ID"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "per_page",
                                                        "schema": {
                                                            "type": "integer",
                                                            "default": 10
                                                        },
                                                        "description": "Number of items per page"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "page",
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Page number of the results to fetch"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "A list of comments for the specified review"
                                                    }
                                                }
                                            }
                                        },
                                        "/repos/{owner}/{repo}/pulls/{pull_number}/comments/{comment_id}/replies": {
                                            "post": {
                                                "summary": "Create a reply to a comment",
                                                "operationId": "createCommentReply",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "owner",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository owner's username"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "repo",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Repository name"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "pull_number",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Pull request number"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "comment_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "ID of the comment being replied to"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "body": {
                                                                        "type": "string",
                                                                        "description": "The text of the reply"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "201": {
                                                        "description": "Reply to the comment created successfully"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "File": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Name of the file"
                                                    },
                                                    "path": {
                                                        "type": "string",
                                                        "description": "Path of the file relative to repository root"
                                                    },
                                                    "size": {
                                                        "type": "integer",
                                                        "description": "Size of the file in bytes"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "description": "Type of the file (e.g., file, dir)"
                                                    }
                                                }
                                            },
                                            "Repository": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "full_name": {
                                                        "type": "string"
                                                    },
                                                    "private": {
                                                        "type": "boolean"
                                                    },
                                                    "owner": {
                                                        "$ref": "#/components/schemas/User"
                                                    }
                                                }
                                            },
                                            "User": {
                                                "type": "object",
                                                "properties": {
                                                    "login": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "integer",
                                                        "format": "int64"
                                                    },
                                                    "type": {
                                                        "type": "string"
                                                    },
                                                    "site_admin": {
                                                        "type": "boolean"
                                                    }
                                                }
                                            },
                                            "FileContent": {
                                                "type": "object",
                                                "properties": {
                                                    "content": {
                                                        "type": "string",
                                                        "description": "Content of the file"
                                                    },
                                                    "encoding": {
                                                        "type": "string",
                                                        "description": "Encoding type used for content"
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "description": "URL to access the file"
                                                    },
                                                    "sha": {
                                                        "type": "string",
                                                        "description": "SHA of the file"
                                                    }
                                                }
                                            },
                                            "FileInput": {
                                                "type": "object",
                                                "properties": {
                                                    "message": {
                                                        "type": "string",
                                                        "description": "Commit message"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "description": "Base64 encoded content of the file"
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Branch name"
                                                    },
                                                    "committer": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    },
                                                    "author": {
                                                        "type": "object",
                                                        "properties": {
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "email": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "oauth",
                                    "instructions": "",
                                    "client_url": "https://github.com/login/oauth/authorize",
                                    "scope": "repo",
                                    "authorization_url": "https://github.com/login/oauth/access_token",
                                    "authorization_content_type": "application/x-www-form-urlencoded",
                                    "verification_tokens": {},
                                    "pkce_required": false,
                                    "token_exchange_method": "basic_auth_header"
                                },
                                "privacy_policy_url": "https://docs.github.com/en/site-policy/privacy-policies/github-privacy-statement"
                            }
                        },
                        {
                            "id": "gzm_cnf_GCdy9YxFWMHP7qjRiLjsE8bD~gzm_tool_u9smFLgUW8uf7KVlf7VM9wBd",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-f3807b5b6ea4fd802b839389d0a598ae5125d08e",
                                "domain": "gitlab.com",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.0",
                                    "info": {
                                        "title": "GitLab User, Projects, and Files API",
                                        "version": "1.0.0"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://gitlab.com/api/v4"
                                        }
                                    ],
                                    "paths": {
                                        "/user": {
                                            "get": {
                                                "summary": "Get the authenticated user's details",
                                                "operationId": "getCurrentUserGitLab",
                                                "responses": {
                                                    "200": {
                                                        "description": "Details of the authenticated user",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "id": {
                                                                            "type": "integer",
                                                                            "description": "The ID of the authenticated user"
                                                                        },
                                                                        "username": {
                                                                            "type": "string",
                                                                            "description": "The username of the authenticated user"
                                                                        },
                                                                        "email": {
                                                                            "type": "string",
                                                                            "description": "The email of the authenticated user"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/users/{user_id}/projects": {
                                            "get": {
                                                "summary": "List user projects",
                                                "operationId": "listUserProjects",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "user_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "GitLab user ID"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "membership",
                                                        "schema": {
                                                            "type": "boolean"
                                                        },
                                                        "description": "Limit by projects that the current user is a member of"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "owned",
                                                        "schema": {
                                                            "type": "boolean"
                                                        },
                                                        "description": "Limit by projects that are owned by the current user"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "sort",
                                                        "schema": {
                                                            "type": "string",
                                                            "enum": [
                                                                "asc",
                                                                "desc"
                                                            ]
                                                        },
                                                        "description": "Return projects ordered by creation date in ascending or descending order"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "per_page",
                                                        "schema": {
                                                            "type": "integer",
                                                            "default": 10
                                                        },
                                                        "description": "Number of items per page"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "page",
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Page number of the results to fetch"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "A list of projects",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "$ref": "#/components/schemas/Project"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/projects": {
                                            "post": {
                                                "summary": "Create a new project (repository)",
                                                "operationId": "createProject",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "required": [
                                                                    "name"
                                                                ],
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "description": "The name of the new project"
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "description": "A short project description"
                                                                    },
                                                                    "visibility": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "private",
                                                                            "internal",
                                                                            "public"
                                                                        ],
                                                                        "default": "private",
                                                                        "description": "Sets the project's visibility level"
                                                                    },
                                                                    "initialize_with_readme": {
                                                                        "type": "boolean",
                                                                        "default": false,
                                                                        "description": "Whether to initialize the project with a README file"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "201": {
                                                        "description": "Project created",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/Project"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Invalid request"
                                                    }
                                                }
                                            }
                                        },
                                        "/projects/{project_id}/repository/tree": {
                                            "get": {
                                                "summary": "List files in a repository",
                                                "operationId": "listRepositoryFiles",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "ref",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "The name of the branch, tag, or commit"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "per_page",
                                                        "schema": {
                                                            "type": "integer",
                                                            "default": 10
                                                        },
                                                        "description": "Number of files per page"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "page",
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Page number of the results to fetch"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "A list of files",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "file_name": {
                                                                                "type": "string"
                                                                            },
                                                                            "file_path": {
                                                                                "type": "string"
                                                                            },
                                                                            "size": {
                                                                                "type": "integer"
                                                                            },
                                                                            "encoding": {
                                                                                "type": "string"
                                                                            },
                                                                            "content_sha256": {
                                                                                "type": "string"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/projects/{project_id}/repository/files/{file_path}": {
                                            "get": {
                                                "summary": "Get a file from a repository",
                                                "operationId": "getRepositoryFile",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "file_path",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Full path to the file"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "ref",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "The name of the branch, tag, or commit"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "File details",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "file_name": {
                                                                            "type": "string"
                                                                        },
                                                                        "file_path": {
                                                                            "type": "string"
                                                                        },
                                                                        "size": {
                                                                            "type": "integer"
                                                                        },
                                                                        "encoding": {
                                                                            "type": "string"
                                                                        },
                                                                        "content": {
                                                                            "type": "string"
                                                                        },
                                                                        "content_sha256": {
                                                                            "type": "string"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "post": {
                                                "summary": "Create a new file in a repository",
                                                "operationId": "createRepositoryFile",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "file_path",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Full path to the file"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "required": [
                                                                    "branch",
                                                                    "content",
                                                                    "commit_message"
                                                                ],
                                                                "properties": {
                                                                    "branch": {
                                                                        "type": "string",
                                                                        "description": "The name of the branch where the commit will be made"
                                                                    },
                                                                    "content": {
                                                                        "type": "string",
                                                                        "description": "New file content, Base64 encoded"
                                                                    },
                                                                    "commit_message": {
                                                                        "type": "string",
                                                                        "description": "Commit message"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "201": {
                                                        "description": "File created"
                                                    }
                                                }
                                            },
                                            "put": {
                                                "summary": "Update an existing file in a repository",
                                                "operationId": "updateRepositoryFile",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "file_path",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Full path to the file"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "required": [
                                                                    "branch",
                                                                    "content"
                                                                ],
                                                                "properties": {
                                                                    "branch": {
                                                                        "type": "string",
                                                                        "description": "The name of the branch where the commit will be made"
                                                                    },
                                                                    "content": {
                                                                        "type": "string",
                                                                        "description": "New file content, Base64 encoded"
                                                                    },
                                                                    "commit_message": {
                                                                        "type": "string",
                                                                        "description": "Commit message"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "File updated"
                                                    }
                                                }
                                            },
                                            "delete": {
                                                "summary": "Delete a file from a repository",
                                                "operationId": "deleteRepositoryFile",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "file_path",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Full path to the file to"
                                                    }
                                                ],
                                                "responses": {
                                                    "204": {
                                                        "description": "File deleted"
                                                    }
                                                }
                                            }
                                        },
                                        "/projects/{project_id}/issues": {
                                            "get": {
                                                "summary": "List issues for a project",
                                                "operationId": "listProjectIssues",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "state",
                                                        "schema": {
                                                            "type": "string",
                                                            "enum": [
                                                                "opened",
                                                                "closed",
                                                                "all"
                                                            ]
                                                        },
                                                        "description": "Return only issues with the specified state"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "labels",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Comma-separated list of label names to filter by"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "per_page",
                                                        "schema": {
                                                            "type": "integer",
                                                            "default": 10
                                                        },
                                                        "description": "Number of issues per page"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "page",
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Page number of the results to fetch"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "A list of project issues",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "$ref": "#/components/schemas/Issue"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "post": {
                                                "summary": "Create a new issue in a project",
                                                "operationId": "createProjectIssue",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "required": [
                                                                    "title"
                                                                ],
                                                                "properties": {
                                                                    "title": {
                                                                        "type": "string",
                                                                        "description": "The title of the issue"
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "description": "The description of the issue"
                                                                    },
                                                                    "labels": {
                                                                        "type": "string",
                                                                        "description": "Comma-separated list of labels for the issue"
                                                                    },
                                                                    "assignee_ids": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "integer"
                                                                        },
                                                                        "description": "The ID or list of IDs of users to assign the issue to"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "201": {
                                                        "description": "Issue created",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/Issue"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/projects/{project_id}/issues/{issue_id}": {
                                            "get": {
                                                "summary": "Get a single issue by ID",
                                                "operationId": "getProjectIssue",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "issue_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the issue"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Issue details",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/Issue"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/projects/{project_id}/issues/{issue_id}/notes": {
                                            "get": {
                                                "summary": "List all notes for a specific issue",
                                                "operationId": "listIssueNotes",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "issue_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the issue"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "An array of notes for the issue"
                                                    }
                                                }
                                            },
                                            "post": {
                                                "summary": "Add a new note to an issue",
                                                "operationId": "createIssueNote",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "issue_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the issue"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "body",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "The content of the note"
                                                    }
                                                ],
                                                "responses": {
                                                    "201": {
                                                        "description": "Note created"
                                                    }
                                                }
                                            }
                                        },
                                        "/projects/{project_id}/issues/{issue_id}/notes/{note_id}": {
                                            "get": {
                                                "summary": "Get a single note from an issue",
                                                "operationId": "getIssueNote",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "issue_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the issue"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "note_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the note"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Detailed information about the note"
                                                    }
                                                }
                                            }
                                        },
                                        "/projects/{project_id}/merge_requests/{merge_request_id}/notes": {
                                            "get": {
                                                "summary": "List all notes for a specific merge request",
                                                "operationId": "listMergeRequestNotes",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "mr_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the mr"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "An array of notes for the mr"
                                                    }
                                                }
                                            },
                                            "post": {
                                                "summary": "Add a new note to a merge request",
                                                "operationId": "createMergeRequestNote",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "mr_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the mr"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "body",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "The content of the note"
                                                    }
                                                ],
                                                "responses": {
                                                    "201": {
                                                        "description": "Note created"
                                                    }
                                                }
                                            }
                                        },
                                        "/projects/{project_id}/merge_requests/{merge_request_id}/notes/{note_id}": {
                                            "get": {
                                                "summary": "Get a single note from a merge request",
                                                "operationId": "getMergeRequestNote",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "mr_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the mr"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "note_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the note"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Detailed information about the note"
                                                    }
                                                }
                                            }
                                        },
                                        "/projects/{project_id}/merge_requests": {
                                            "get": {
                                                "summary": "List merge requests for a project",
                                                "operationId": "listProjectMergeRequests",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "state",
                                                        "schema": {
                                                            "type": "string",
                                                            "enum": [
                                                                "opened",
                                                                "closed",
                                                                "merged",
                                                                "all"
                                                            ]
                                                        },
                                                        "description": "Return only merge requests with the specified state"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "source_branch",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Filter merge requests by source branch name"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "target_branch",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "Filter merge requests by target branch name"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "per_page",
                                                        "schema": {
                                                            "type": "integer",
                                                            "default": 10
                                                        },
                                                        "description": "Number of merge requests per page"
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "page",
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "Page number of the results to fetch"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "A list of project merge requests",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "$ref": "#/components/schemas/MergeRequest"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "post": {
                                                "summary": "Create a new merge request",
                                                "operationId": "createProjectMergeRequest",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "required": [
                                                                    "source_branch",
                                                                    "target_branch",
                                                                    "title"
                                                                ],
                                                                "properties": {
                                                                    "source_branch": {
                                                                        "type": "string",
                                                                        "description": "The source branch for the merge request"
                                                                    },
                                                                    "target_branch": {
                                                                        "type": "string",
                                                                        "description": "The target branch for the merge request"
                                                                    },
                                                                    "title": {
                                                                        "type": "string",
                                                                        "description": "The title of the merge request"
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "description": "The description of the merge request"
                                                                    },
                                                                    "assignee_ids": {
                                                                        "type": "array",
                                                                        "items": {
                                                                            "type": "integer"
                                                                        },
                                                                        "description": "Assignee user IDs for the merge request"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "201": {
                                                        "description": "Merge request created",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/MergeRequest"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/projects/{project_id}/merge_requests/{merge_request_id}": {
                                            "get": {
                                                "summary": "Get a single merge request by ID",
                                                "operationId": "getProjectMergeRequest",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "merge_request_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the merge request"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Detailed information about the merge request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/MergeRequest"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "put": {
                                                "summary": "Update an existing merge request",
                                                "operationId": "updateProjectMergeRequest",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "merge_request_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the merge request"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "title": {
                                                                        "type": "string",
                                                                        "description": "The title of the merge request"
                                                                    },
                                                                    "description": {
                                                                        "type": "string",
                                                                        "description": "The description of the merge request"
                                                                    },
                                                                    "state_event": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "close",
                                                                            "reopen"
                                                                        ],
                                                                        "description": "Change the state of the merge request"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Merge request updated",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/MergeRequest"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/projects/{project_id}/merge_requests/{merge_request_id}/reviews": {
                                            "get": {
                                                "summary": "List reviews for a merge request",
                                                "operationId": "listMergeRequestReviews",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "merge_request_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the merge request"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "An array of reviews for the merge request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "$ref": "#/components/schemas/Review"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "post": {
                                                "summary": "Create a new review for a merge request",
                                                "operationId": "createMergeRequestReview",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "merge_request_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the merge request"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "required": [
                                                                    "body"
                                                                ],
                                                                "properties": {
                                                                    "body": {
                                                                        "type": "string",
                                                                        "description": "The content of the review"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "201": {
                                                        "description": "Review created",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/Review"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/projects/{project_id}/repository/branches": {
                                            "get": {
                                                "summary": "List branches for a project",
                                                "operationId": "listProjectBranches",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "An array of branches for the project",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "$ref": "#/components/schemas/Branch"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "post": {
                                                "summary": "Create a new branch in the project",
                                                "operationId": "createProjectBranch",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    }
                                                ],
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "required": [
                                                                    "branch",
                                                                    "ref"
                                                                ],
                                                                "properties": {
                                                                    "branch": {
                                                                        "type": "string",
                                                                        "description": "The name of the branch to create"
                                                                    },
                                                                    "ref": {
                                                                        "type": "string",
                                                                        "description": "The branch name or commit SHA to start the new branch from"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "201": {
                                                        "description": "Branch created",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/Branch"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/projects/{project_id}/repository/branches/{branch}": {
                                            "get": {
                                                "summary": "Get a single branch",
                                                "operationId": "getProjectBranch",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "project_id",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        },
                                                        "description": "The ID of the project"
                                                    },
                                                    {
                                                        "in": "path",
                                                        "name": "branch",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "The name of the branch"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Detailed information about the branch",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/Branch"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "Branch": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "merged": {
                                                        "type": "boolean"
                                                    },
                                                    "protected": {
                                                        "type": "boolean"
                                                    },
                                                    "default": {
                                                        "type": "boolean"
                                                    },
                                                    "developers_can_push": {
                                                        "type": "boolean"
                                                    },
                                                    "developers_can_merge": {
                                                        "type": "boolean"
                                                    },
                                                    "can_push": {
                                                        "type": "boolean"
                                                    },
                                                    "commit": {
                                                        "$ref": "#/components/schemas/Commit"
                                                    }
                                                }
                                            },
                                            "Commit": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "string"
                                                    },
                                                    "short_id": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string"
                                                    },
                                                    "parent_ids": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "message": {
                                                        "type": "string"
                                                    },
                                                    "author_name": {
                                                        "type": "string"
                                                    },
                                                    "author_email": {
                                                        "type": "string"
                                                    },
                                                    "authored_date": {
                                                        "type": "string"
                                                    },
                                                    "committer_name": {
                                                        "type": "string"
                                                    },
                                                    "committer_email": {
                                                        "type": "string"
                                                    },
                                                    "committed_date": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "Review": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "body": {
                                                        "type": "string"
                                                    },
                                                    "author": {
                                                        "$ref": "#/components/schemas/User"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    }
                                                }
                                            },
                                            "MergeRequest": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "source_branch": {
                                                        "type": "string"
                                                    },
                                                    "target_branch": {
                                                        "type": "string"
                                                    },
                                                    "author": {
                                                        "$ref": "#/components/schemas/User"
                                                    },
                                                    "assignees": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/User"
                                                        }
                                                    }
                                                }
                                            },
                                            "Comment": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "body": {
                                                        "type": "string"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "author": {
                                                        "$ref": "#/components/schemas/User"
                                                    }
                                                }
                                            },
                                            "Issue": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "type": "string",
                                                        "description": "The current state of the issue (e.g., opened, closed)"
                                                    },
                                                    "labels": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "A list of labels applied to the issue"
                                                    },
                                                    "assignee": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/User"
                                                        },
                                                        "description": "Users assigned to the issue"
                                                    },
                                                    "created_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "description": "The date and time when the issue was created"
                                                    },
                                                    "updated_at": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "description": "The date and time when the issue was last updated"
                                                    }
                                                }
                                            },
                                            "User": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "username": {
                                                        "type": "string"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "state": {
                                                        "type": "string"
                                                    },
                                                    "avatar_url": {
                                                        "type": "string"
                                                    },
                                                    "web_url": {
                                                        "type": "string"
                                                    }
                                                }
                                            },
                                            "Repository": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "full_name": {
                                                        "type": "string"
                                                    },
                                                    "private": {
                                                        "type": "boolean"
                                                    },
                                                    "owner": {
                                                        "type": "object",
                                                        "properties": {
                                                            "login": {
                                                                "type": "string"
                                                            },
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "type": {
                                                                "type": "string"
                                                            },
                                                            "site_admin": {
                                                                "type": "boolean"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "Project": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "name": {
                                                        "type": "string"
                                                    },
                                                    "path_with_namespace": {
                                                        "type": "string"
                                                    },
                                                    "visibility": {
                                                        "type": "string"
                                                    },
                                                    "owner": {
                                                        "type": "object",
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer"
                                                            },
                                                            "name": {
                                                                "type": "string"
                                                            },
                                                            "username": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "oauth",
                                    "instructions": "",
                                    "client_url": "https://gitlab.com/oauth/authorize",
                                    "scope": "api",
                                    "authorization_url": "https://gitlab.com/oauth/token",
                                    "authorization_content_type": "application/x-www-form-urlencoded",
                                    "verification_tokens": {},
                                    "pkce_required": false,
                                    "token_exchange_method": "basic_auth_header"
                                },
                                "privacy_policy_url": "https://handbook.gitlab.com/handbook/legal/privacy/"
                            }
                        },
                        {
                            "id": "gzm_cnf_Q9l7q70wTF2Wv0cqG8TbThy2~gzm_tool_LTFeoIY6yaF4UF2S9grgpuSV",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_Q9l7q70wTF2Wv0cqG8TbThy2~gzm_tool_0HHSPKbIH723yOlwWLdz5Lvt",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_Q9l7q70wTF2Wv0cqG8TbThy2~gzm_tool_sk4n2URtenDd99cQPctmBomn",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-php",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/pdf",
                                "text/x-script.python",
                                "text/x-typescript",
                                "text/x-sh",
                                "application/json",
                                "text/x-tex",
                                "text/x-csharp",
                                "text/x-c++",
                                "text/x-java",
                                "text/html",
                                "text/x-c",
                                "text/x-ruby",
                                "application/x-latext",
                                "application/msword",
                                "text/plain",
                                "text/markdown",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/jpeg",
                                "image/webp"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-k3IqoCe1l",
                        "organization_id": "org-BKYs92E7s4KWVUjfmhwsPNf1",
                        "short_url": "g-k3IqoCe1l-code-guru",
                        "author": {
                            "user_id": "user-yp9DLIPtuakcBWOr0ESzYdup",
                            "display_name": "Ryan J Topps",
                            "link_to": null,
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": null,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Code Guru",
                            "description": "Reviews code, writes pull requests, generates and optimizes functions, writes tests, and comments existing code.",
                            "prompt_starters": [
                                "Can you review this code snippet?",
                                "Can you please write a pull request for this code?",
                                "Can you please generate me a function that I will describe in the next prompt and write unit tests for it?",
                                "Can you write the unit tests for this code?",
                                "Can you add comments to this code?",
                                "Can you optimize this code with changing it interface?",
                                "Can you optimize this code?"
                            ],
                            "profile_pic_id": null,
                            "profile_picture_url": "https://files.oaiusercontent.com/file-7yUeBkDlueBD9rjEl9XBYypr?se=2123-10-19T05%3A09%3A47Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dbabe19af-25aa-42f3-a9c8-9b731eb94675.png&sig=OjufzbXkrGb2gJck3zC%2BPHiXM7ndeofRXB2T%2B4tuO40%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-12T04:45:07.116011+00:00",
                        "updated_at": "2024-04-12T15:50:42.520089+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_zQCN7ugC8upyTIRGEUWWY0ko~gzm_tool_jBdkrHIaLUxsvelKd2InXyR9",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_zQCN7ugC8upyTIRGEUWWY0ko~gzm_tool_KG7bgk2POTbiYWdGTjT12plr",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_zQCN7ugC8upyTIRGEUWWY0ko~gzm_tool_5TXvs08GHMjmJL7JAsHzipF2",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-php",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/pdf",
                                "text/x-script.python",
                                "text/x-typescript",
                                "text/x-sh",
                                "application/json",
                                "text/x-tex",
                                "text/x-csharp",
                                "text/x-c++",
                                "text/x-java",
                                "text/html",
                                "text/x-c",
                                "text/x-ruby",
                                "application/x-latext",
                                "application/msword",
                                "text/plain",
                                "text/markdown",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/jpeg",
                                "image/webp"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            }
        ],
        "cursor": null
    }
}