{
    "info": {
        "id": "programming",
        "title": "Programming",
        "description": "Write code, debug, test, and learn",
        "display_type": "ranked",
        "display_group": "Programming",
        "locale": "global"
    },
    "list": {
        "items": [
            {
                "resource": {
                    "gizmo": {
                        "id": "g-iYSeH3EAI",
                        "organization_id": "org-jVIUA2hArphbmhH2qURpnZ7C",
                        "short_url": "g-iYSeH3EAI-website-generator",
                        "author": {
                            "user_id": "user-2fJiTRz4nICeuUXfazt7t2wl__4240e878-35cd-4885-8069-87d8555a5f91",
                            "display_name": null,
                            "link_to": null,
                            "is_verified": false,
                            "selected_display": "name",
                            "will_receive_support_emails": false,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": "4240e878-35cd-4885-8069-87d8555a5f91",
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Website Generator",
                            "description": "A user-friendly GPT for website creation with coding and DALL-E 3 examples.",
                            "prompt_starters": [
                                "What kind of website do you want to create?",
                                "Do you have any specific design elements in mind?",
                                "Can I help with any coding questions for your website?",
                                "Would you like to see a DALL-E 3 example for your site design?"
                            ],
                            "profile_pic_id": "file-DpOsgJCyQmWJBfLG28XZd4dF",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-DpOsgJCyQmWJBfLG28XZd4dF?se=2123-10-29T19%3A16%3A24Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D7e3930ef-1664-4325-a510-4fe14dc0b780.png&sig=yScnIo2s5bLFNVRP66I510w2a0vIp%2BMU8QeZw3oUnHY%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-22T18:52:28.403810+00:00",
                        "updated_at": "2024-02-11T04:57:38.675092+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_f57OFSeOpmYLVBWh57tZJJun~gzm_tool_tscFXwfS9n8sKLLwEOWUQKLm",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_f57OFSeOpmYLVBWh57tZJJun~gzm_tool_owutf287pWSuiKA72kLvvIV2",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_f57OFSeOpmYLVBWh57tZJJun~gzm_tool_1aPBaizdfylnB5vTN33TK5BM",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-ruby",
                                "text/x-java",
                                "application/msword",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-tex",
                                "text/javascript",
                                "text/x-c",
                                "text/x-c++",
                                "application/pdf",
                                "application/json",
                                "text/html",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/x-csharp",
                                "text/x-script.python",
                                "text/x-php",
                                "text/x-sh",
                                "text/markdown",
                                "text/x-typescript",
                                "text/plain",
                                "application/x-latext"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/webp",
                                "image/jpeg"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-3s6SJ5V7S",
                        "organization_id": "org-mlOwKwxqA3vR6M4sREuIZXu5",
                        "short_url": "g-3s6SJ5V7S-askthecode",
                        "author": {
                            "user_id": "user-8cru96dnXZrsPTbKYqeTQgVj",
                            "display_name": "Denys Somok",
                            "link_to": "https://docs.askthecode.ai",
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "AskTheCode",
                            "description": "Provide a GitHub repository URL and ask about any aspect of the code.",
                            "prompt_starters": [
                                "How to use the AskTheCode GPT?",
                                "Please give me an example of how to use the repository https://github.com/langchain-ai/langchainjs",
                                "Please give an overview of the issue https://github.com/langchain-ai/langchain/issues/1358",
                                "Please describe the changes made in  the commit https://github.com/microsoft/semantic-kernel/commit/b346353bfba45f54461a3abb889925d9f353ad43",
                                "Please search for the Qdrant store implementation in https://github.com/microsoft/semantic-kernel"
                            ],
                            "profile_pic_id": "file-aWCgLB79dBX0EDbdex69ke2u",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-aWCgLB79dBX0EDbdex69ke2u?se=2123-10-13T22%3A19%3A16Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dlogo.jpg&sig=CNuXkZEhlT4xOvQLD1Ck8DVuHBAFElHoABiE1WuyX1U%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-06T21:44:57.429149+00:00",
                        "updated_at": "2024-03-07T07:08:09.881372+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_c6HCWMuEmeQ8J3bAXj9rP9Y0~gzm_tool_ExucKMftBRgOSBLTzSNqcdMu",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-78baf1f03e18805d542716fa4c7d5ea110c417fe",
                                "domain": "pluginlab.askthecode.dsomok.online",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.1",
                                    "info": {
                                        "title": "AskTheCode Plugin",
                                        "description": "Plugin to explain the code from Github and assist with its usage. Works with the provided Github file link.",
                                        "version": "v1"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://pluginlab.askthecode.dsomok.online"
                                        }
                                    ],
                                    "paths": {
                                        "/api/repository/structure": {
                                            "post": {
                                                "tags": [
                                                    "Repository"
                                                ],
                                                "summary": "Retrieves the Github repository file structure to analyze it and be able to query only relevant files. If the provided URL contains specific branch and directory information, prioritize using that over querying the entire repository structure.",
                                                "operationId": "GetRepositoryStructure",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/StructureRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the github repository structure",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/StructureResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/content": {
                                            "post": {
                                                "tags": [
                                                    "Repository"
                                                ],
                                                "summary": "Retrieves github repository file contents, possibly filtered by file names. Line numbers can be specified in URL as well.NEVER query this endpoint without previously querying GetRepositoryStructure endpoint and when the next step is set to GetRepositoryStructure.",
                                                "operationId": "GetRepositoryContent",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/ContentRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the contents of the requested files",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/RepositoryContentResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/branch/list": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryBranch"
                                                ],
                                                "summary": "Retrieves the list of branches in the repository",
                                                "operationId": "ListRepositoryBranches",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/ListRepositoryBranchesRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the list of repository branches",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/ListRepositoryBranchesResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/branch/create": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryBranch"
                                                ],
                                                "summary": "Creates new repository branch",
                                                "operationId": "CreateRepositoryBranch",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CreateRepositoryBranchRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the result of the branch creation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/CreateRepositoryBranchResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": true
                                            }
                                        },
                                        "/api/repository/branch/delete": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryBranch"
                                                ],
                                                "summary": "Deletes repository branch",
                                                "operationId": "DeleteRepositoryBranch",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/DeleteRepositoryBranchRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the result of the branch deletion",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/DeleteRepositoryBranchResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": true
                                            }
                                        },
                                        "/api/repository/commit/history": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryCommits"
                                                ],
                                                "summary": "Retrieves commit history for a specific file",
                                                "operationId": "GetRepositoryCommitHistory",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CommitHistoryRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the commits history for the specific file",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/CommitHistoryResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/commit/overview": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryCommits"
                                                ],
                                                "summary": "Retrieves commit overview by the commit SHA",
                                                "operationId": "GetRepositoryCommitOverview",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CommitOverviewRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the commit overview",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/CommitOverviewResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/commit/changes": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryCommits"
                                                ],
                                                "summary": "Retrieves commit file changes by the commit SHA",
                                                "operationId": "GetRepositoryCommitChanges",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CommitChangesRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the commit overview",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/CommitChangesResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/file/update/checkout": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryFile"
                                                ],
                                                "summary": "Checkouts file for update and retrieves github repository file content for edit and update. This content should be used when using the UpdateRepositoryFile endpoint for updating the file content.",
                                                "operationId": "CheckoutRepositoryFileForUpdate",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CheckoutRepositoryFileRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the content of the file for updating. The response contains line numbers, never show them to the end user.",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/CheckoutRepositoryFileResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/file/create": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryFile"
                                                ],
                                                "summary": "Creates repository file. You MUST always print the code block with the content of the change you are going to send prior invoking this endpoint",
                                                "operationId": "CreateRepositoryFile",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CreateRepositoryFileRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the github repository file creation result.",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/CreateRepositoryFileResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": true
                                            }
                                        },
                                        "/api/repository/file/update": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryFile"
                                                ],
                                                "summary": "Updates repository file. Never use this endpoint before checking the file out for edit using the CheckoutRepositoryFileForEdit endpoint. You MUST always print the code block with the content of the change you are going to send prior invoking this endpoint",
                                                "operationId": "UpdateRepositoryFile",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/UpdateRepositoryFileRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the github repository file update result.",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/UpdateRepositoryFileResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": true
                                            }
                                        },
                                        "/api/repository/file/delete": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryFile"
                                                ],
                                                "summary": "Deletes the repository file. Use this endpoint when user asks to delete the file. Invoking CheckoutRepositoryFileForUpdate endpoint is not needed.",
                                                "operationId": "DeleteRepositoryFile",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/DeleteRepositoryFileRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the repository file deletion result.",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/DeleteRepositoryFileResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": true
                                            }
                                        },
                                        "/api/repository/issue": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryIssues"
                                                ],
                                                "summary": "Retrieves github issue and its comments by the issue URL",
                                                "operationId": "GetRepositoryIssue",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/IssueRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the issue with its comments",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/IssueResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/repository/issue/comment/post": {
                                            "post": {
                                                "tags": [
                                                    "RepositoryIssues"
                                                ],
                                                "summary": "Posts the comment under the github issue specified by the issue URL",
                                                "operationId": "PostRepositoryIssueComment",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/PostIssueCommentRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns the result of the comment posting",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/PostIssueCommentResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": true
                                            }
                                        },
                                        "/api/search/repository/code": {
                                            "post": {
                                                "tags": [
                                                    "Search"
                                                ],
                                                "summary": "Search code by user specified keywords. Use when user explicitly asked to search for something. Otherwise prefer to fetch the repository structure. Invoke only with user-specified, specific keywords (e.g., file, class, method names). Avoid generic terms.",
                                                "operationId": "SearchCode",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/SearchCodeRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns search by code results",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/SearchCodeResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/search/repository/issues": {
                                            "post": {
                                                "tags": [
                                                    "Search"
                                                ],
                                                "summary": "Search issues by user specified keywords. Use only when user explicitly asked to search for issues and provided search query.",
                                                "operationId": "SearchIssues",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/SearchIssuesRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns found issues",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/SearchIssuesResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/search/repository/commits": {
                                            "post": {
                                                "tags": [
                                                    "Search"
                                                ],
                                                "summary": "Search commits by user specified keywords. Use only when user explicitly asked to search for commits and provided search query.",
                                                "operationId": "SearchCommits",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/SearchCommitsRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns found issues",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/SearchCommitsResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        },
                                        "/api/search/repository": {
                                            "post": {
                                                "tags": [
                                                    "Search"
                                                ],
                                                "summary": "Search repositories by user specified keywords. Use only when user explicitly asked to search for repositories and provided search query.",
                                                "operationId": "SearchRepositories",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/SearchRepositoriesRequestDto"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Returns found repositories",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/SearchRepositoriesResponseDto"
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "security": [
                                                    {
                                                        "Bearer": []
                                                    }
                                                ],
                                                "x-openai-isConsequential": false
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "CheckoutRepositoryFileRequestDto": {
                                                "required": [
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    },
                                                    "filePath": {
                                                        "type": "string",
                                                        "description": "Paths to the file. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CheckoutRepositoryFileResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "fileContent": {
                                                        "$ref": "#/components/schemas/FileContentDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CommitChangesRequestDto": {
                                                "required": [
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "fromFileName": {
                                                        "type": "string",
                                                        "description": "Name of the file to start grabbing changes from. Pass it when you want to query the continuation of the commit changes",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CommitChangesResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "commit": {
                                                        "$ref": "#/components/schemas/RepositoryCommitChangesDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CommitHistoryCommitDto": {
                                                "type": "object",
                                                "properties": {
                                                    "commitUrl": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "commitDate": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    },
                                                    "author": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CommitHistoryRequestDto": {
                                                "required": [
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it",
                                                        "nullable": true
                                                    },
                                                    "filePath": {
                                                        "type": "string",
                                                        "description": "Path to the file to request the commit history for. Use path relative to the root directory of the repository",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CommitHistoryResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "filePath": {
                                                        "type": "string",
                                                        "description": "File path the history is returned for",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "commits": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/CommitHistoryCommitDto"
                                                        },
                                                        "description": "List of commits in the file history, ordered by date",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "count": {
                                                        "type": "integer",
                                                        "description": "True if not all commits have been returned returned",
                                                        "format": "int32",
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CommitOverviewRequestDto": {
                                                "required": [
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CommitOverviewResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "commit": {
                                                        "$ref": "#/components/schemas/RepositoryCommitOverviewDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "ContentRequestDto": {
                                                "required": [
                                                    "filePaths",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it. When requesting file from commit, use commit SHA.",
                                                        "nullable": true
                                                    },
                                                    "relativePath": {
                                                        "type": "string",
                                                        "description": "Relative paths to the directory. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    },
                                                    "filePaths": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Files to query the content of. Order them by relevance descendant. This should NEVER contain the repository branch. First determine the branch if possible, and only then the file paths. Pass only if you are sure about the file path, call GetRepositoryStructure otherwise"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CreateRepositoryBranchRequestDto": {
                                                "required": [
                                                    "branchName",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branchName": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "The name of the branch that should be created"
                                                    },
                                                    "parentBranchName": {
                                                        "type": "string",
                                                        "description": "The name of the branch that the new branch should be created from. If not specified, the repository default branch will be used.",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CreateRepositoryBranchResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CreateRepositoryFileRequestDto": {
                                                "required": [
                                                    "commitMessage",
                                                    "content",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    },
                                                    "filePath": {
                                                        "type": "string",
                                                        "description": "Paths to the file.",
                                                        "nullable": true
                                                    },
                                                    "content": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "File content"
                                                    },
                                                    "commitMessage": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Commit message to be used when saving the file."
                                                    },
                                                    "isApprovedByUserForDefaultBranch": {
                                                        "type": "boolean",
                                                        "description": "Always default it to false. Set it to true ONLY when you previously explicitly asked users confirmation to save to the default repository branch. It's crucial to be very careful with passing true, it can corrupt users repository code."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "CreateRepositoryFileResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "createCommit": {
                                                        "$ref": "#/components/schemas/RepositoryCommitOverviewDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "DeleteRepositoryBranchRequestDto": {
                                                "required": [
                                                    "branchName",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branchName": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "The name of the branch that should be deleted"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "DeleteRepositoryBranchResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "DeleteRepositoryFileRequestDto": {
                                                "required": [
                                                    "commitMessage",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    },
                                                    "filePath": {
                                                        "type": "string",
                                                        "description": "Paths to the file. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    },
                                                    "commitMessage": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Commit message to be used when saving the file."
                                                    },
                                                    "isApprovedByUserForDefaultBranch": {
                                                        "type": "boolean",
                                                        "description": "Always default it to false. Set it to true ONLY when you previously explicitly asked users confirmation to save to the default repository branch. It's crucial to be very careful with passing true, it can corrupt users repository code."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "DeleteRepositoryFileResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "updateCommit": {
                                                        "$ref": "#/components/schemas/RepositoryCommitOverviewDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "FileContentDto": {
                                                "type": "object",
                                                "properties": {
                                                    "path": {
                                                        "type": "string",
                                                        "description": "Relative path to the file. The path is always relative to the root folder",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "description": "The content of the file. If null or missing, this means that the file content overflowed the allowed maximum and should be queried separately in the next request. Please explain the user why not all files where returned and ask if he wants to proceed.",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "error": {
                                                        "type": "string",
                                                        "description": "An error that occurred when getting the file content",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "FoundCommitDto": {
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "type": "string",
                                                        "description": "Commit Url. Use it to request the overview and changes for the specific commit",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "Commit message",
                                                        "nullable": true
                                                    },
                                                    "matches": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Matches within the commit",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "FoundFileDto": {
                                                "type": "object",
                                                "properties": {
                                                    "path": {
                                                        "type": "string",
                                                        "description": "Path to the file relative to the repository root",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "matches": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Lines of code within the file that matched the search",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "totals": {
                                                        "$ref": "#/components/schemas/TextMatchesTotalsDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "FoundIssueDto": {
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "type": "string",
                                                        "description": "Issue Url. Use it to request the details about the issue",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "description": "Issue title",
                                                        "nullable": true
                                                    },
                                                    "matches": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/TextMatchDto"
                                                        },
                                                        "description": "Matches within the issue",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "FoundRepositoryDto": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "description": "Repository name",
                                                        "nullable": true
                                                    },
                                                    "url": {
                                                        "type": "string",
                                                        "description": "Repository URL. Use it to query over the particular repository",
                                                        "nullable": true
                                                    },
                                                    "description": {
                                                        "type": "string",
                                                        "description": "Repository description",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "GithubIssueCommentDto": {
                                                "type": "object",
                                                "properties": {
                                                    "body": {
                                                        "type": "string",
                                                        "description": "Body of issue comment. It has the next format: [CREATION DATE] USERNAME (USER ROLE): (MESSAGE)",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "likes": {
                                                        "type": "integer",
                                                        "description": "Number of positive reactions under the issue comment.",
                                                        "format": "int32",
                                                        "readOnly": true
                                                    },
                                                    "dislikes": {
                                                        "type": "integer",
                                                        "description": "Number of negative reactions under the issue comment.",
                                                        "format": "int32",
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "GithubIssueDto": {
                                                "type": "object",
                                                "properties": {
                                                    "title": {
                                                        "type": "string",
                                                        "description": "Title of issue.",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "body": {
                                                        "type": "string",
                                                        "description": "Body of issue. It has the next format: [CREATION DATE] USERNAME (USER ROLE): (MESSAGE)",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "comments": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/GithubIssueCommentDto"
                                                        },
                                                        "description": "List of comments.",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "IssueRequestDto": {
                                                "required": [
                                                    "issueUrl"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "issueUrl": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Github issue URL"
                                                    },
                                                    "comment": {
                                                        "type": "string",
                                                        "description": "The message of the comment you want to request. Provide only when you want to request some specific comment.",
                                                        "nullable": true
                                                    },
                                                    "lastComment": {
                                                        "type": "string",
                                                        "description": "The message of last comment you know about. Provide only when you want to request more issue comments. Never set both comment and lastComment fields.",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "IssueResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "issue": {
                                                        "$ref": "#/components/schemas/GithubIssueDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "ListRepositoryBranchesRequestDto": {
                                                "required": [
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "ListRepositoryBranchesResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "branches": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/RepositoryBranch"
                                                        },
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "PostIssueCommentRequestDto": {
                                                "required": [
                                                    "comment",
                                                    "issueUrl"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "issueUrl": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Github issue URL"
                                                    },
                                                    "comment": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "The message of the comment to post under the issue"
                                                    },
                                                    "isApprovedByUser": {
                                                        "type": "boolean",
                                                        "description": "Has user approved the comment. If user asked you to post some comment you should first present him the issue URL you want to post comment to and the comment body. Set this to true only if you have explicitly asked for confirmation and user has approved it."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "PostIssueCommentResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryBranch": {
                                                "type": "object",
                                                "properties": {
                                                    "name": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "headSha": {
                                                        "type": "string",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryCommitChangesDto": {
                                                "type": "object",
                                                "properties": {
                                                    "sha": {
                                                        "type": "string",
                                                        "description": "SHA of the commit. When getting full content of the file, use it as the branch name until other branch is explicitly specified by user",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "parentCommitSha": {
                                                        "type": "string",
                                                        "description": "SHA of the parent commit. Use it in URL to query the full content of the file that was before the commit when requesting GetRepositoryContent",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "changes": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/RepositoryCommitFileDto"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "otherFilesInCommit": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "nextFileToQuery": {
                                                        "type": "string",
                                                        "description": "Name of the next file to query. Pass it as FromFileName when you want to query the continuation of the commit changes. If not null, empty or missing, this means that commit changes were not fully analyzed. Ask user if he want to proceed before querying.",
                                                        "nullable": true
                                                    },
                                                    "totals": {
                                                        "$ref": "#/components/schemas/RepositoryCommitTotalsDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryCommitFileDto": {
                                                "type": "object",
                                                "properties": {
                                                    "fileName": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "status": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "patch": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryCommitOverviewDto": {
                                                "type": "object",
                                                "properties": {
                                                    "sha": {
                                                        "type": "string",
                                                        "description": "SHA of the commit. When getting full content of the file, use it as the branch name until other branch is explicitly specified by user",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "parentCommitSha": {
                                                        "type": "string",
                                                        "description": "SHA of the parent commit. Use it in URL to query the full content of the file that was before the commit when requesting GetRepositoryContent",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "commitDate": {
                                                        "type": "string",
                                                        "format": "date-time",
                                                        "readOnly": true
                                                    },
                                                    "author": {
                                                        "type": "string",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "changedFiles": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "totalFiles": {
                                                        "type": "integer",
                                                        "format": "int32"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryCommitTotalsDto": {
                                                "type": "object",
                                                "properties": {
                                                    "totalFiles": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "readOnly": true
                                                    },
                                                    "analyzedFiles": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryContentResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "branchName": {
                                                        "type": "string",
                                                        "description": "Requested Github repository branch",
                                                        "nullable": true
                                                    },
                                                    "files": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/FileContentDto"
                                                        },
                                                        "description": "File contents",
                                                        "nullable": true
                                                    },
                                                    "adv": {
                                                        "type": "string",
                                                        "description": "Display it only when you are not planning to send more requests. Separate Adv from the main response with a line",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "RepositoryFileContentPatchDto": {
                                                "type": "object",
                                                "properties": {
                                                    "startLine": {
                                                        "type": "integer",
                                                        "description": "One-based line number to start replacing the file content from. This number is inclusive, meaning that the line at this line will also be replaced. ALWAYS double-check the line number before posting to the endpoint.",
                                                        "format": "int32"
                                                    },
                                                    "endLine": {
                                                        "type": "integer",
                                                        "description": "One-based line number to replace the file content to. This number is inclusive, the line with this line number will also be replaced. ALWAYS double-check the line number before posting. It does not support indexing from the file end.",
                                                        "format": "int32"
                                                    },
                                                    "insertOnly": {
                                                        "type": "boolean",
                                                        "description": "Pass TRUE only when you want to insert the new code and do not replace any existing code. StartLine will be used as the line to insert before. Otherwise either leave empty, or pass FALSE",
                                                        "nullable": true
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "description": "New content. Always validate indentation prior to posting. The content should contain the diff between the old version and a new one.",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "SearchCodeRequestDto": {
                                                "required": [
                                                    "searchKeywords",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it. When requesting file from commit, use commit SHA.",
                                                        "nullable": true
                                                    },
                                                    "relativePath": {
                                                        "type": "string",
                                                        "description": "Relative path to the file or directory to search in. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    },
                                                    "searchKeywords": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Search keywords. Invoke only with user-specified keywords. Never use keywords that are not part of the user prompt. When user asks to search for function definitions in a specific file (not directory) and you cannot parse them from file content, pass function keyword relevant for the file language."
                                                    },
                                                    "searchHitLinesCount": {
                                                        "type": "integer",
                                                        "description": "Number of lines to retrieve. Set only when explicitly asked to retrieve the specified amount of lines by the user.",
                                                        "format": "int32",
                                                        "nullable": true
                                                    },
                                                    "skipMatchesCount": {
                                                        "type": "integer",
                                                        "description": "Number of matches to skip in the file. use only when user is searching over file and you need to search for matches that were omitted from the previous search request",
                                                        "format": "int32",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "SearchCodeResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "branchName": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "searchResults": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/FoundFileDto"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "adv": {
                                                        "type": "string",
                                                        "description": "Display it only when you are not planning to send more requests. Separate Adv from the main response with a line",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "SearchCommitsRequestDto": {
                                                "required": [
                                                    "searchKeywords",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "searchKeywords": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Search keywords. Invoke only with user-specified keywords. Never use keywords that are not part of the user prompt."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "SearchCommitsResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "commits": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/FoundCommitDto"
                                                        },
                                                        "description": "List of found commits, ordered by relevance",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "totalCount": {
                                                        "type": "integer",
                                                        "description": "The count of found commits",
                                                        "format": "int32"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "SearchIssuesRequestDto": {
                                                "required": [
                                                    "searchKeywords",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "searchKeywords": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Search keywords. Invoke only with user-specified keywords in singular form. Never use keywords that are not part of the user prompt. Keywords MUST be in singular form."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "SearchIssuesResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "issues": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/FoundIssueDto"
                                                        },
                                                        "description": "List of found issues, ordered by relevance",
                                                        "nullable": true
                                                    },
                                                    "totalCount": {
                                                        "type": "integer",
                                                        "description": "The count of found issues",
                                                        "format": "int32"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "SearchRepositoriesRequestDto": {
                                                "required": [
                                                    "searchKeywords"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "searchKeywords": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Search keywords. Always use a single, specific keyword that best represents the topic. Avoid using multiple keywords for the same topic. OR logic applied, so providing multiple keywords for the same topic will worsen the results. Keywords should be singular, contain single word and clearly defined for precise searches."
                                                    },
                                                    "language": {
                                                        "type": "string",
                                                        "description": "Programming language. Use only when explicitly specified by the user",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "SearchRepositoriesResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "repositories": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/FoundRepositoryDto"
                                                        },
                                                        "description": "List of found repositories, ordered by relevance",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "totalCount": {
                                                        "type": "integer",
                                                        "description": "The count of found repositories",
                                                        "format": "int32"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "StructureRequestDto": {
                                                "required": [
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    },
                                                    "relativePaths": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Relative paths to retrieve. USE only paths you are certain that exist, NEVER invent them. If the provided URL contains a specific directory path, extract and use it. Otherwise, this should be a directory path or pattern only. Patterns accept * symbol as \"any substring\"",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "StructureResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "branchName": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "nextStep": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "files": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "TextMatchDto": {
                                                "type": "object",
                                                "properties": {
                                                    "objectType": {
                                                        "type": "string",
                                                        "description": "Type of the object that contains the match. E.g., 'IssueComment', 'FileContent' etc",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "property": {
                                                        "type": "string",
                                                        "description": "Name of the property that contains the match. E.g., 'body', 'content', 'Description' etc",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    },
                                                    "lines": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "Lines within the property that matched the search",
                                                        "nullable": true,
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "TextMatchesTotalsDto": {
                                                "type": "object",
                                                "properties": {
                                                    "total": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "readOnly": true
                                                    },
                                                    "analyzed": {
                                                        "type": "integer",
                                                        "format": "int32",
                                                        "readOnly": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "UpdateRepositoryFileRequestDto": {
                                                "required": [
                                                    "commitMessage",
                                                    "contentPatch",
                                                    "url"
                                                ],
                                                "type": "object",
                                                "properties": {
                                                    "url": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]#[additional-parameters]. The URL MUST be identical to the one, that was provided by the user, you MUST NEVER alter or truncate it. This is crucial for valid responses. You should NEVER truncate additional-parameters."
                                                    },
                                                    "branch": {
                                                        "type": "string",
                                                        "description": "Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it.",
                                                        "nullable": true
                                                    },
                                                    "filePath": {
                                                        "type": "string",
                                                        "description": "Paths to the file.",
                                                        "nullable": true
                                                    },
                                                    "contentPatch": {
                                                        "$ref": "#/components/schemas/RepositoryFileContentPatchDto"
                                                    },
                                                    "commitMessage": {
                                                        "minLength": 1,
                                                        "type": "string",
                                                        "description": "Commit message to be used when saving the file."
                                                    },
                                                    "isApprovedByUserForDefaultBranch": {
                                                        "type": "boolean",
                                                        "description": "Always default it to false. Set it to true ONLY when you previously explicitly asked users confirmation to save to the default repository branch. It's crucial to be very careful with passing true, it can corrupt users repository code."
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "UpdateRepositoryFileResponseDto": {
                                                "type": "object",
                                                "properties": {
                                                    "assistantNextSteps": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "usefulUrls": {
                                                        "$ref": "#/components/schemas/UsefulUrlsDto"
                                                    },
                                                    "updateCommit": {
                                                        "$ref": "#/components/schemas/RepositoryCommitOverviewDto"
                                                    }
                                                },
                                                "additionalProperties": false
                                            },
                                            "UsefulUrlsDto": {
                                                "type": "object",
                                                "properties": {
                                                    "websiteUrl": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "documentationUrl": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "githubUrl": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "twitterUrl": {
                                                        "type": "string",
                                                        "nullable": true
                                                    }
                                                },
                                                "additionalProperties": false
                                            }
                                        },
                                        "securitySchemes": {
                                            "Bearer": {
                                                "type": "http",
                                                "description": "Please enter a valid token",
                                                "scheme": "Bearer",
                                                "bearerFormat": "JWT"
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "oauth",
                                    "instructions": "",
                                    "client_url": "https://pluginlab.askthecode.dsomok.online/oauth/authorize",
                                    "scope": "all",
                                    "authorization_url": "https://pluginlab.askthecode.dsomok.online/oauth/token",
                                    "authorization_content_type": "application/x-www-form-urlencoded",
                                    "verification_tokens": {},
                                    "pkce_required": false,
                                    "token_exchange_method": "default_post"
                                },
                                "privacy_policy_url": "https://docs.askthecode.ai/legal/"
                            }
                        },
                        {
                            "id": "gzm_cnf_SRjf7CME7b9vYL1toHJPNgPd~gzm_tool_Scsp1CQ2H0vNxhKV89IDnSQr",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_SRjf7CME7b9vYL1toHJPNgPd~gzm_tool_fMs6vWjBLDLorQu2Jr6kKDa9",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_SRjf7CME7b9vYL1toHJPNgPd~gzm_tool_NLjIGIraSpiQpPXXvKP4ZRyi",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-ruby",
                                "text/x-java",
                                "application/msword",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-tex",
                                "text/javascript",
                                "text/x-c",
                                "text/x-c++",
                                "application/pdf",
                                "application/json",
                                "text/html",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/x-csharp",
                                "text/x-script.python",
                                "text/x-php",
                                "text/x-sh",
                                "text/markdown",
                                "text/x-typescript",
                                "text/plain",
                                "application/x-latext"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/webp",
                                "image/jpeg"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-hz8Pw1quF",
                        "organization_id": "org-BjOqXYjUreMtZqdYzKXG0AjG",
                        "short_url": "g-hz8Pw1quF-screenshot-to-code-gpt",
                        "author": {
                            "user_id": "user-mRxaWur6h0648QycIl3IXhBl",
                            "display_name": "godofprompt.ai",
                            "link_to": "https://godofprompt.ai",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": null,
                            "display_socials": [
                                {
                                    "id": "twitterverify-43d2-b12a-bbe33d600487",
                                    "type": "twitter",
                                    "display_name": "X",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "1643695629665722379",
                                        "username": "@godofprompt",
                                        "type": "twitter",
                                        "link_to": "https://twitter.com/godofprompt"
                                    }
                                }
                            ]
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Screenshot To Code GPT",
                            "description": "Upload a screenshot of a website and convert it to clean HTML/Tailwind/JS code.",
                            "prompt_starters": [
                                "Upload your screenshot to start!"
                            ],
                            "profile_pic_id": "file-iODprsP2w9ZuzUHKX4AKhPVP",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-iODprsP2w9ZuzUHKX4AKhPVP?se=2123-12-23T12%3A18%3A57Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DLogo_dark.png&sig=sop%2BvwJEsGv0pjCNaUEqR13FPANThkNoCwo6PEuRUdE%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-16T14:36:57.358445+00:00",
                        "updated_at": "2024-03-01T12:09:11.316257+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_gB3CZrQBQQWVaBMYZZevgohT~gzm_tool_RvOgEQbzuKoGQzM31hrIJ28I",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_gB3CZrQBQQWVaBMYZZevgohT~gzm_tool_KymOASrsVi1R4wRWzEr4r5vF",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_gB3CZrQBQQWVaBMYZZevgohT~gzm_tool_YVsiqrvVvUAgTM3yLbWjCoWf",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-ruby",
                                "text/x-java",
                                "application/msword",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-tex",
                                "text/javascript",
                                "text/x-c",
                                "text/x-c++",
                                "application/pdf",
                                "application/json",
                                "text/html",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/x-csharp",
                                "text/x-script.python",
                                "text/x-php",
                                "text/x-sh",
                                "text/markdown",
                                "text/x-typescript",
                                "text/plain",
                                "application/x-latext"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/webp",
                                "image/jpeg"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-m5lMeGifF",
                        "organization_id": "org-5iFq010QT4ZYZACnN7qcsxXe",
                        "short_url": "g-m5lMeGifF-sql-expert",
                        "author": {
                            "user_id": "user-QzIHc7YKSV21t9lzDntuQynG",
                            "display_name": "Dmitry Khanukov",
                            "link_to": null,
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": null,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "SQL Expert",
                            "description": "SQL expert for optimization and queries.",
                            "prompt_starters": [
                                "How do I optimize this SQL query?",
                                "Suggest a database structure for my app.",
                                "Explain this SQL error message.",
                                "Help me to optimize this request."
                            ],
                            "profile_pic_id": null,
                            "profile_picture_url": null,
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-09T02:30:52.951198+00:00",
                        "updated_at": "2024-01-17T03:03:05.187835+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_tNB8QJoKJslIQOC9y8oMoqiC~gzm_tool_OwJtUTt8Qy0ju3pJ4uny1UAm",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_tNB8QJoKJslIQOC9y8oMoqiC~gzm_tool_bUHB7n7Z9D8wntY7H4aDnZLL",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-ruby",
                                "text/x-java",
                                "application/msword",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-tex",
                                "text/javascript",
                                "text/x-c",
                                "text/x-c++",
                                "application/pdf",
                                "application/json",
                                "text/html",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/x-csharp",
                                "text/x-script.python",
                                "text/x-php",
                                "text/x-sh",
                                "text/markdown",
                                "text/x-typescript",
                                "text/plain",
                                "application/x-latext"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/webp",
                                "image/jpeg"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-pTF23RJ6f",
                        "organization_id": "org-oVSt1r5YTNNoENKl3zJ0hcTl",
                        "short_url": "g-pTF23RJ6f-autoexpert-dev",
                        "author": {
                            "user_id": "user-kXMhiu1ELw9iK7sDP2wGaSAU",
                            "display_name": "Dustin Miller",
                            "link_to": "https://llmimagineers.com",
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "AutoExpert (Dev)",
                            "description": "AutoExpert v6 (GPT Developer Edition) is your steadfast pair programmer, armed with enhanced code generation ability, online access for the latest APIs, and custom commands to save your session state so you can recall it in a new session later. /help will tell you all about it. Say \"Hello\" to start!",
                            "prompt_starters": [
                                "Hello",
                                "/help"
                            ],
                            "profile_pic_id": "file-eLFrNX9FaFZ2c2utPPLBfxKv",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-eLFrNX9FaFZ2c2utPPLBfxKv?se=2123-10-20T20%3A05%3A54Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DAutoExpertDev.jpg&sig=l6nI5Vev4Xg7ghEU7xeA4caih7rFbOjR1NDu/cEDxAU%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-09T04:38:27.455576+00:00",
                        "updated_at": "2024-02-28T13:50:34.876687+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_oWhzpsG7VQz4c79uiaRwOpiW~gzm_tool_my5p98NF6UvVwEAMzz7M3Vp0",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_oWhzpsG7VQz4c79uiaRwOpiW~gzm_tool_c2xIFGxgZj9WkDgb7pGFNypX",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [
                        {
                            "id": "gzm_cnf_9XvgiPhiiXqD3MGkbjHWT4Tz~gzm_file_EgZlQdsRlxxErYNsRLH5dXGx",
                            "type": "text/x-python-script",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_iItpXvjrGIZZ3Jh6EwOro58E~gzm_file_AN5XOjTVVsrKUMKdNWk5qpgv",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_9XvgiPhiiXqD3MGkbjHWT4Tz~gzm_file_gyc9u44Wlgjooo86d38t2895",
                            "type": "text/plain",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-ruby",
                                "text/x-java",
                                "application/msword",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-tex",
                                "text/javascript",
                                "text/x-c",
                                "text/x-c++",
                                "application/pdf",
                                "application/json",
                                "text/html",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/x-csharp",
                                "text/x-script.python",
                                "text/x-php",
                                "text/x-sh",
                                "text/markdown",
                                "text/x-typescript",
                                "text/plain",
                                "application/x-latext"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/webp",
                                "image/jpeg"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-qqTuUWsBY",
                        "organization_id": "org-hZRtglLxBYvAvvtxhca6Qoso",
                        "short_url": "g-qqTuUWsBY-crewai-assistant",
                        "author": {
                            "user_id": "user-Z7G4wMLazxqvC5wjYAAaoCfz",
                            "display_name": "JOAO M DURAES MOURA",
                            "link_to": null,
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "CrewAI Assistant",
                            "description": "CrewAI Python expert.",
                            "prompt_starters": [
                                "Help me create a crew for a use case",
                                "What are some advanced CrewAI features?",
                                "How can I set up a Crew myself?",
                                "Explain CrewAI for me"
                            ],
                            "profile_pic_id": null,
                            "profile_picture_url": "https://files.oaiusercontent.com/file-SGuuFVdt9o6aEisoJqE6jKCS?se=2123-10-21T20%3A17%3A56Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D672061c4-217c-48c7-adf7-eab1db1e6dc8.png&sig=COYTkk8ZnC68RFZvgrPwuGt/q1TDqrEbXEY2CSTLSq4%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-14T18:42:24.210719+00:00",
                        "updated_at": "2024-03-09T06:38:55.679273+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_8BuqghMQSyKxTyyu3tq42PiJ~gzm_tool_WKGxuXyHbeOEHG3QTxWNGfxC",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_8BuqghMQSyKxTyyu3tq42PiJ~gzm_tool_RE324Ho8tAfzR0RLdsQCo0qL",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_8BuqghMQSyKxTyyu3tq42PiJ~gzm_tool_EPFrUVqlCSD73dx840iGAXOX",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_hUw3agpVQlLiuxjYdA0M70J5~gzm_tool_cJolbshlUUkN6LXQhOnRJD93",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-a8591873eda85280314c1bf13acf1d254c803d0d",
                                "domain": "crew-ai-custom-gpt-crewai.replit.app",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.1.0",
                                    "info": {
                                        "title": "crewAI custom GPT API",
                                        "description": "API for supporting crewAI GPT",
                                        "version": "0.1"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://crew-ai-custom-gpt-crewai.replit.app",
                                            "description": "Main API server"
                                        }
                                    ],
                                    "paths": {
                                        "/read_crewai_code/{code_class}": {
                                            "get": {
                                                "summary": "Read Code",
                                                "operationId": "read_code_read_crewai_code__code_class__get",
                                                "parameters": [
                                                    {
                                                        "name": "code_class",
                                                        "in": "path",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string",
                                                            "title": "Code Class",
                                                            "enum": [
                                                                "agent",
                                                                "task",
                                                                "crew",
                                                                "process"
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful Response",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        }
                                                    },
                                                    "422": {
                                                        "description": "Validation Error",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/agent_examples/{type}": {
                                            "get": {
                                                "summary": "Agent Examples",
                                                "operationId": "agent_examples_agent_examples__type__get",
                                                "parameters": [
                                                    {
                                                        "name": "type",
                                                        "in": "path",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string",
                                                            "title": "Type",
                                                            "enum": [
                                                                "travel_related_examples",
                                                                "financial_related_examples",
                                                                "landing_page_generation_related_examples",
                                                                "marketing_related_examples",
                                                                "game_generation_related_examples"
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful Response",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        }
                                                    },
                                                    "422": {
                                                        "description": "Validation Error",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/task_examples/{type}": {
                                            "get": {
                                                "summary": "Task Examples",
                                                "operationId": "task_examples_task_examples__type__get",
                                                "parameters": [
                                                    {
                                                        "name": "type",
                                                        "in": "path",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string",
                                                            "title": "Type",
                                                            "enum": [
                                                                "travel_related_examples",
                                                                "financial_related_examples",
                                                                "marketing_related_examples",
                                                                "game_generation_related_examples"
                                                            ]
                                                        }
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful Response",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        }
                                                    },
                                                    "422": {
                                                        "description": "Validation Error",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "HTTPValidationError": {
                                                "properties": {
                                                    "detail": {
                                                        "items": {
                                                            "$ref": "#/components/schemas/ValidationError"
                                                        },
                                                        "type": "array",
                                                        "title": "Detail"
                                                    }
                                                },
                                                "type": "object",
                                                "title": "HTTPValidationError"
                                            },
                                            "ValidationError": {
                                                "properties": {
                                                    "loc": {
                                                        "items": {
                                                            "anyOf": [
                                                                {
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "type": "integer"
                                                                }
                                                            ]
                                                        },
                                                        "type": "array",
                                                        "title": "Location"
                                                    },
                                                    "msg": {
                                                        "type": "string",
                                                        "title": "Message"
                                                    },
                                                    "type": {
                                                        "type": "string",
                                                        "title": "Error Type"
                                                    }
                                                },
                                                "type": "object",
                                                "required": [
                                                    "loc",
                                                    "msg",
                                                    "type"
                                                ],
                                                "title": "ValidationError"
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://crew-ai-custom-gpt-crewai.replit.app/privacy"
                            }
                        }
                    ],
                    "files": [
                        {
                            "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_7TVmiiDI9RL6lxqU7inLCjAS",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_z9dPtIoYgQQ3pRQEGSq9hblg",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_6Uxy0KXk3dKj0pjxgRZWoqW5",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_EpD5Tpg9zpqRl9Ai3ahcKpDu",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_29l4SDlLX9h98Y8r1f7ii9e1",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_n1jhKtZJA5ti73MAKsQrqjwM",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_dhgJGS8hgYnW5BciyRIyMTW2",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_bqJ6UncnwiHyqXAwLzW77Mm7~gzm_file_smAqCtPQPdLH3778p40hRTF5",
                            "type": "application/zip",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_QZdR7klO6lpxHw8pyrYuVoZY",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_qQBILWLi7AXr3Uo45ZCaSB6v~gzm_file_R6tKe1luQPazWovGf7uf4VEj",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-ruby",
                                "text/x-java",
                                "application/msword",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-tex",
                                "text/javascript",
                                "text/x-c",
                                "text/x-c++",
                                "application/pdf",
                                "application/json",
                                "text/html",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/x-csharp",
                                "text/x-script.python",
                                "text/x-php",
                                "text/x-sh",
                                "text/markdown",
                                "text/x-typescript",
                                "text/plain",
                                "application/x-latext"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/webp",
                                "image/jpeg"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-I1XNbsyDK",
                        "organization_id": "org-qqBm9uftX8eDJ6X4s5PWt8tv",
                        "short_url": "g-I1XNbsyDK-api-docs",
                        "author": {
                            "user_id": "user-H6oKEgOlrNwORingNRbr9llz",
                            "display_name": "gpts.webpilot.ai",
                            "link_to": "https://gpts.webpilot.ai",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": true,
                            "display_socials": [
                                {
                                    "id": "githubverify-dff6-4871-860f-d61dfa7afa7f",
                                    "type": "github",
                                    "display_name": "GitHub",
                                    "verified": true,
                                    "verified_data": {
                                        "id": 6043666,
                                        "username": "CocoSgt",
                                        "type": "github",
                                        "link_to": "https://github.com/CocoSgt"
                                    }
                                },
                                {
                                    "id": "twitterverify-43d2-b12a-bbe33d600487",
                                    "type": "twitter",
                                    "display_name": "X",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "553334373",
                                        "username": "@CocoSgt_twt",
                                        "type": "twitter",
                                        "link_to": "https://twitter.com/CocoSgt_twt"
                                    }
                                }
                            ]
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "API Docs",
                            "description": "OpenAI API, GPTs, Documentation and CookBook",
                            "prompt_starters": [
                                "How to use OpenAI API?",
                                "What does 'top_p' mean in the API?",
                                "How do I use the function call?",
                                "How to create GPTs"
                            ],
                            "profile_pic_id": null,
                            "profile_picture_url": "https://files.oaiusercontent.com/file-hWsLaYpYnZ2TWUuoq4II1Lol?se=2123-10-14T15%3A09%3A26Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dac2881e8-7f33-4a7d-994d-e0e44725f68a.png&sig=4yXvsGNs7ZXNoKnINM1tLN4ku8f1hmV0jXvaZ1gyEKg%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-07T14:54:20.620213+00:00",
                        "updated_at": "2024-02-15T06:17:19.545613+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_IWkJKu1wxzUkTK6ogf6vFEjM~gzm_tool_y26wXnDlGuTd1yz3fFxy7GEu",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-31dd1bab84ef240f813d7c034bb4e7efcf483bb4",
                                "domain": "gpts.webpilot.ai",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.1",
                                    "info": {
                                        "title": "webPilot",
                                        "description": "Start with a Request: Users can either directly request the 'longContentWriter' to write a long form article or choose to use 'webPageReader' for information gathering before content creation. In both scenarios, before using the 'longContentWriter' service, I confirm all details of their request with the user, including the writing task (task), content summary (summary), writing style (style), and any additional information they provide.\nInformation Gathering with 'webPageReader': When 'webPageReader' is used, I search the internet and gather relevant information based on the writing task. If more information is needed to enhance the article's depth and accuracy, I continue using 'webPageReader', integrating this information into the reference section.\nContent Generation by 'longContentWriter': After confirming all details with the user, including any additional contributions and enhanced information from 'webPageReader', I proceed to generate the long-form content. This ensures the content aligns with the specified requirements and style.\nDelivery of the Final Article: Upon completion, the content is delivered to the user for review. They can request revisions or additional information if necessary.\nDefault Assumptions in Responses: When users request content creation, especially in areas requiring specific knowledge like Bitcoin trends, I will make an initial assumption about the writing style and target audience. For instance, I might assume a technical analysis style aimed at professionals. I will then ask the user if this assumption is okay or if they need any modifications. This approach helps streamline the content creation process.",
                                        "version": "v1.1"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://gpts.webpilot.ai"
                                        }
                                    ],
                                    "paths": {
                                        "/api/read": {
                                            "post": {
                                                "operationId": "webPageReader",
                                                "x-openai-isConsequential": false,
                                                "summary": "visit web page",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/visitWebPageRequest"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "OK",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/visitWebPageResponse"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Bad Request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/visitWebPageError"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/api/write": {
                                            "post": {
                                                "operationId": "longContentWriter",
                                                "x-openai-isConsequential": false,
                                                "summary": "generate a book",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/generateContentRequest"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "OK",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/generateContentResponse"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Bad Request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/generateContentError"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "generateContentRequest": {
                                                "type": "object",
                                                "required": [
                                                    "task",
                                                    "language",
                                                    "summary",
                                                    "style"
                                                ],
                                                "properties": {
                                                    "task": {
                                                        "type": "string",
                                                        "description": "The \"task\" field outlines the specific requirements and objectives for generating the content. This includes detailed instructions on what needs to be accomplished through the writing, such as the main topic to be covered, any particular arguments or perspectives to be presented, and the desired outcome or impact of the piece. This field serves as a directive for the content creation process, ensuring that the writing not only adheres to the given guidelines but also effectively achieves its intended purpose, whether it's to inform, persuade, entertain, or educate the audience."
                                                    },
                                                    "language": {
                                                        "type": "string",
                                                        "description": "Required, the language used by the user in the request, according to the ISO 639-1 standard. For Chinese, use zh-CN for Simplified Chinese and zh-TW for Traditional Chinese."
                                                    },
                                                    "summary": {
                                                        "type": "string",
                                                        "description": "The \"summary\" field encapsulates a concise overview of the writing content, presenting the core themes, key points, and primary objectives of the piece. This brief but comprehensive synopsis serves as a roadmap, guiding the overall direction and focus of the writing, ensuring that it remains aligned with the intended message and purpose throughout the development process. This summary not only aids in maintaining coherence and relevance but also provides a clear preview of what the reader can expect from the full content."
                                                    },
                                                    "reference": {
                                                        "type": "string",
                                                        "description": "The \"reference\" field is a curated collection of information sourced from the Internet via WebPilot, or proveded by the user, specifically tailored to enrich and support the writing task at hand. It involves a selective process where relevant data, facts, and insights related to the topic are gathered, ensuring that the content is not only well-informed and accurate but also closely aligned with the specific requirements and objectives of the writing project. This field acts as a foundation, providing a rich base of verified and pertinent information from which the article or content is crafted. This field would be long."
                                                    },
                                                    "style": {
                                                        "type": "string",
                                                        "description": "The \"style\" field in content creation is a detailed framework encompassing three pivotal components - the writing tone or style, the target audience, and the publication medium. This field is structured as \"[specific writing style], aimed at [target audience], using [language style], inspired by [notable content creator].\" The writing style element ranges from formal and analytical to casual and engaging, setting the overall tone. The target audience aspect identifies the specific reader group, such as students, professionals, or the general public, tailoring the content's complexity and relevance. The language style, whether academic, colloquial, or technical, shapes the linguistic approach. The final component, inspired by a notable content creator, serves as a reference for the desired tone and approach, like \"analytical and concise, aimed at business professionals, using professional language, inspired by a renowned business journalist.\" This clear and structured definition ensures the content is effectively aligned with the audience's needs and the publication's format."
                                                    }
                                                }
                                            },
                                            "generateContentResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "message": {
                                                        "type": "string",
                                                        "description": "Result message of the request"
                                                    }
                                                }
                                            },
                                            "generateContentError": {
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "type": "string",
                                                        "description": "error code"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "error message"
                                                    },
                                                    "detail": {
                                                        "type": "string",
                                                        "description": "error detail"
                                                    }
                                                }
                                            },
                                            "visitWebPageResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "title": {
                                                        "type": "string",
                                                        "description": "The title of this web page"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "description": "The content of the web page's url to be summarized"
                                                    },
                                                    "meta": {
                                                        "type": "object",
                                                        "description": "The Html meta info of the web page"
                                                    },
                                                    "links": {
                                                        "type": "array",
                                                        "description": "Some links in the web page",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "extra_search_results": {
                                                        "type": "array",
                                                        "description": "Additional Search results",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "description": "the title of this search result"
                                                                },
                                                                "link": {
                                                                    "type": "string",
                                                                    "description": "the link of this search result"
                                                                },
                                                                "snippet": {
                                                                    "type": "string",
                                                                    "description": "the snippet of this search result"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "todo": {
                                                        "type": "array",
                                                        "description": "what to do with the content",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "tips": {
                                                        "type": "array",
                                                        "description": "Tips placed at the end of the answer",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "rules": {
                                                        "description": "Adherence is required when outputting content.",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "visitWebPageRequest": {
                                                "type": "object",
                                                "required": [
                                                    "link",
                                                    "ur"
                                                ],
                                                "properties": {
                                                    "link": {
                                                        "type": "string",
                                                        "description": "Required, The web page's url to visit and retrieve content from."
                                                    },
                                                    "ur": {
                                                        "type": "string",
                                                        "description": "Required, a clear statement of the user's request, can be used as a search query and may include search operators."
                                                    },
                                                    "lp": {
                                                        "type": "boolean",
                                                        "description": "Required, Whether the link is directly provided by the user"
                                                    },
                                                    "rt": {
                                                        "type": "boolean",
                                                        "description": "If the last request doesn't meet user's need, set this to true when trying to retry another request."
                                                    },
                                                    "l": {
                                                        "type": "string",
                                                        "description": "Required, the language used by the user in the request, according to the ISO 639-1 standard. For Chinese, use zh-CN for Simplified Chinese and zh-TW for Traditional Chinese."
                                                    }
                                                }
                                            },
                                            "visitWebPageError": {
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "type": "string",
                                                        "description": "error code"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "error message"
                                                    },
                                                    "detail": {
                                                        "type": "string",
                                                        "description": "error detail"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://gpts.webpilot.ai/privacy_policy.html"
                            }
                        },
                        {
                            "id": "gzm_cnf_bhxgt6RD9aPTQXbESOIC1vNC~gzm_tool_bHTDXGnRDYluiNVqbP7gGZTA",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_bhxgt6RD9aPTQXbESOIC1vNC~gzm_tool_gQt1IuhsCuuEIbTlWKD7nuYT",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [
                        {
                            "id": "gzm_cnf_bhxgt6RD9aPTQXbESOIC1vNC~gzm_file_kWvpL3GRHsKGzVCxWsBt1lsD",
                            "type": "text/html",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_bhxgt6RD9aPTQXbESOIC1vNC~gzm_file_EtGliIVgkNorWM8SBLZvjhrH",
                            "type": "text/html",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_uZBwGJUDSFQEJK76YOvfD7Te~gzm_file_XttMKt03zEKRLwMZpg4l8mPP",
                            "type": "text/html",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-ruby",
                                "text/x-java",
                                "application/msword",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-tex",
                                "text/javascript",
                                "text/x-c",
                                "text/x-c++",
                                "application/pdf",
                                "application/json",
                                "text/html",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/x-csharp",
                                "text/x-script.python",
                                "text/x-php",
                                "text/x-sh",
                                "text/markdown",
                                "text/x-typescript",
                                "text/plain",
                                "application/x-latext"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/webp",
                                "image/jpeg"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-TgjKDuQwZ",
                        "organization_id": "org-vSrwV7d9FabJC5xKn5y6zV3V",
                        "short_url": "g-TgjKDuQwZ-r-wizard",
                        "author": {
                            "user_id": "user-GPDxbmSHNKzRxqWXGUV6q2wx",
                            "display_name": "Macroasset Srls",
                            "link_to": null,
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": false,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "R Wizard",
                            "description": "An expert in R programming, adept in Data Science, Statistics, and Finance, offering precise and helpful guidance.",
                            "prompt_starters": [
                                "Could you give me a brief overview of what R Wizard can do?",
                                "Can you review my R script for data analysis?",
                                "How do I perform linear regression in R?",
                                "Advice on R packages for financial analysis?"
                            ],
                            "profile_pic_id": null,
                            "profile_picture_url": "https://files.oaiusercontent.com/file-OOEUVVaJCiZucRgYBk0rMfRE?se=2123-12-10T19%3A02%3A07Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3D54f710a6-533e-4c42-8e9d-0146169432a3.png&sig=ZqXaZ69BjSVowG66YH3NS5WPHuLf32GcfOxzyj%2BzQAI%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2024-01-03T18:33:39.403219+00:00",
                        "updated_at": "2024-02-09T06:34:59.243925+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_zBdsSbD6fxtw6VgN3Q8GWmGP~gzm_tool_mLm0PeqQfTvhTz2JHRg2u1Z8",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-589a4357c79809593fc9460b721bf8df3fe1bd86",
                                "domain": "gpts.webpilot.ai",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.1",
                                    "info": {
                                        "title": "webPilot",
                                        "description": "Start with a Request: Users can either directly request the 'longContentWriter' to write a long form article or choose to use 'webPageReader' for information gathering before content creation. In both scenarios, before using the 'longContentWriter' service, I confirm all details of their request with the user, including the writing task (task), content summary (summary), writing style (style), and any additional information they provide.\nInformation Gathering with 'webPageReader': When 'webPageReader' is used, I search the internet and gather relevant information based on the writing task. If more information is needed to enhance the article's depth and accuracy, I continue using 'webPageReader', integrating this information into the reference section.\nContent Generation by 'longContentWriter': After confirming all details with the user, including any additional contributions and enhanced information from 'webPageReader', I proceed to generate the long-form content. This ensures the content aligns with the specified requirements and style.\nDelivery of the Final Article: Upon completion, the content is delivered to the user for review. They can request revisions or additional information if necessary.\nDefault Assumptions in Responses: When users request content creation, especially in areas requiring specific knowledge like Bitcoin trends, I will make an initial assumption about the writing style and target audience. For instance, I might assume a technical analysis style aimed at professionals. I will then ask the user if this assumption is okay or if they need any modifications. This approach helps streamline the content creation process.",
                                        "version": "v1.1"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://gpts.webpilot.ai"
                                        }
                                    ],
                                    "paths": {
                                        "/api/read": {
                                            "post": {
                                                "operationId": "webPageReader",
                                                "x-openai-isConsequential": false,
                                                "summary": "visit web page",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/visitWebPageRequest"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "OK",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/visitWebPageResponse"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Bad Request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/visitWebPageError"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/api/write": {
                                            "post": {
                                                "operationId": "longContentWriter",
                                                "x-openai-isConsequential": false,
                                                "summary": "generate a book",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/generateContentRequest"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "OK",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/generateContentResponse"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Bad Request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/generateContentError"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "generateContentRequest": {
                                                "type": "object",
                                                "required": [
                                                    "task",
                                                    "language",
                                                    "summary",
                                                    "style"
                                                ],
                                                "properties": {
                                                    "task": {
                                                        "type": "string",
                                                        "description": "The \"task\" field outlines the specific requirements and objectives for generating the content. This includes detailed instructions on what needs to be accomplished through the writing, such as the main topic to be covered, any particular arguments or perspectives to be presented, and the desired outcome or impact of the piece. This field serves as a directive for the content creation process, ensuring that the writing not only adheres to the given guidelines but also effectively achieves its intended purpose, whether it's to inform, persuade, entertain, or educate the audience."
                                                    },
                                                    "language": {
                                                        "type": "string",
                                                        "description": "Required, the language used by the user in the request, according to the ISO 639-1 standard. For Chinese, use zh-CN for Simplified Chinese and zh-TW for Traditional Chinese."
                                                    },
                                                    "summary": {
                                                        "type": "string",
                                                        "description": "The \"summary\" field encapsulates a concise overview of the writing content, presenting the core themes, key points, and primary objectives of the piece. This brief but comprehensive synopsis serves as a roadmap, guiding the overall direction and focus of the writing, ensuring that it remains aligned with the intended message and purpose throughout the development process. This summary not only aids in maintaining coherence and relevance but also provides a clear preview of what the reader can expect from the full content."
                                                    },
                                                    "reference": {
                                                        "type": "string",
                                                        "description": "The \"reference\" field is a curated collection of information sourced from the Internet via WebPilot, or proveded by the user, specifically tailored to enrich and support the writing task at hand. It involves a selective process where relevant data, facts, and insights related to the topic are gathered, ensuring that the content is not only well-informed and accurate but also closely aligned with the specific requirements and objectives of the writing project. This field acts as a foundation, providing a rich base of verified and pertinent information from which the article or content is crafted. This field would be long."
                                                    },
                                                    "style": {
                                                        "type": "string",
                                                        "description": "The \"style\" field in content creation is a detailed framework encompassing three pivotal components - the writing tone or style, the target audience, and the publication medium. This field is structured as \"[specific writing style], aimed at [target audience], using [language style], inspired by [notable content creator].\" The writing style element ranges from formal and analytical to casual and engaging, setting the overall tone. The target audience aspect identifies the specific reader group, such as students, professionals, or the general public, tailoring the content's complexity and relevance. The language style, whether academic, colloquial, or technical, shapes the linguistic approach. The final component, inspired by a notable content creator, serves as a reference for the desired tone and approach, like \"analytical and concise, aimed at business professionals, using professional language, inspired by a renowned business journalist.\" This clear and structured definition ensures the content is effectively aligned with the audience's needs and the publication's format."
                                                    }
                                                }
                                            },
                                            "generateContentResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "message": {
                                                        "type": "string",
                                                        "description": "Result message of the request"
                                                    }
                                                }
                                            },
                                            "generateContentError": {
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "type": "string",
                                                        "description": "error code"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "error message"
                                                    },
                                                    "detail": {
                                                        "type": "string",
                                                        "description": "error detail"
                                                    }
                                                }
                                            },
                                            "visitWebPageResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "title": {
                                                        "type": "string",
                                                        "description": "The title of this web page"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "description": "The content of the web page's url to be summarized"
                                                    },
                                                    "meta": {
                                                        "type": "object",
                                                        "description": "The Html meta info of the web page"
                                                    },
                                                    "links": {
                                                        "type": "array",
                                                        "description": "Some links in the web page",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "extra_search_results": {
                                                        "type": "array",
                                                        "description": "Additional Search results",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "description": "the title of this search result"
                                                                },
                                                                "link": {
                                                                    "type": "string",
                                                                    "description": "the link of this search result"
                                                                },
                                                                "snippet": {
                                                                    "type": "string",
                                                                    "description": "the snippet of this search result"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "todo": {
                                                        "type": "array",
                                                        "description": "what to do with the content",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "tips": {
                                                        "type": "array",
                                                        "description": "Tips placed at the end of the answer",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "rules": {
                                                        "description": "Adherence is required when outputting content.",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "visitWebPageRequest": {
                                                "type": "object",
                                                "required": [
                                                    "link",
                                                    "ur"
                                                ],
                                                "properties": {
                                                    "link": {
                                                        "type": "string",
                                                        "description": "Required, The web page's url to visit and retrieve content from."
                                                    },
                                                    "ur": {
                                                        "type": "string",
                                                        "description": "Required, a clear statement of the user's request, can be used as a search query and may include search operators."
                                                    },
                                                    "lp": {
                                                        "type": "boolean",
                                                        "description": "Required, Whether the link is directly provided by the user"
                                                    },
                                                    "rt": {
                                                        "type": "boolean",
                                                        "description": "If the last request doesn't meet user's need, set this to true when trying to retry another request."
                                                    },
                                                    "l": {
                                                        "type": "string",
                                                        "description": "Required, the language used by the user in the request, according to the ISO 639-1 standard. For Chinese, use zh-CN for Simplified Chinese and zh-TW for Traditional Chinese."
                                                    }
                                                }
                                            },
                                            "visitWebPageError": {
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "type": "string",
                                                        "description": "error code"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "error message"
                                                    },
                                                    "detail": {
                                                        "type": "string",
                                                        "description": "error detail"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://gpts.webpilot.ai/privacy_policy.html"
                            }
                        }
                    ],
                    "files": [
                        {
                            "id": "gzm_cnf_HLyY1Gd1c2dSPsBoOLIJxm2E~gzm_file_B4Kexs4Qdfcw90pEv5QMecfp",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_qIeDhE1E3xSionYE8F1kKP7N~gzm_file_6xMdjV3ZNpZxcbEXdksa0fVB",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_aOv9PAyL7HSMEmmD6R6ZRadq~gzm_file_cCedBEDOGL1wilscPMh9GYPh",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_Sz48tDrN6GX6Ym3TEfLyMa95~gzm_file_IvDV1TV0d0TXp1z5tBiFMCvJ",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_afyGToBtFcUaHx9rewYhpAhn~gzm_file_pISJMgj79X615zP4uZq2WPWv",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_ATqiFmpkVhayBKuRaqrxcmPx~gzm_file_X6JS5or9j2Ke9i85ejOjeEej",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_lNi2DQqsitbNVlmK0CWmIVLb~gzm_file_t4MJkFuHghziDOqA559mjKpg",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_lNi2DQqsitbNVlmK0CWmIVLb~gzm_file_uQ95yyRrRe7PLleNSsPJvMMK",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_HLyY1Gd1c2dSPsBoOLIJxm2E~gzm_file_8jljyuNn60csAW01Evb45Nmk",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-ruby",
                                "text/x-java",
                                "application/msword",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-tex",
                                "text/javascript",
                                "text/x-c",
                                "text/x-c++",
                                "application/pdf",
                                "application/json",
                                "text/html",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/x-csharp",
                                "text/x-script.python",
                                "text/x-php",
                                "text/x-sh",
                                "text/markdown",
                                "text/x-typescript",
                                "text/plain",
                                "application/x-latext"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/webp",
                                "image/jpeg"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-Uz8I8oK3R",
                        "organization_id": "org-IobrZlJS7Zq3jUoeBtsh9Mxi",
                        "short_url": "g-Uz8I8oK3R-unity-helper",
                        "author": {
                            "user_id": "user-PR4WSfhspaPdFPQbb8kKT7f8",
                            "display_name": "Jesus Angarita",
                            "link_to": null,
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Unity Helper",
                            "description": "Hi fellow developer! Ready to assist with your Unity coding and game design queries.",
                            "prompt_starters": [
                                "Can you help me optimize this Unity code?",
                                "What's a better way to write this function in Unity?",
                                "I'm stuck with a bug in Unity, can you help?",
                                "How can I refactor this Unity script for better readability?"
                            ],
                            "profile_pic_id": "file-SITDAnQoBaMdzS0RrguKfM0X",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-SITDAnQoBaMdzS0RrguKfM0X?se=2124-01-16T23%3A41%3A55Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DScreenshot%25202024-02-09%2520183803.png&sig=AHf51LIwkxayXhn9EvWic4q/yoLNsV0wbcSDpl0BX3A%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-15T14:50:50.716192+00:00",
                        "updated_at": "2024-02-21T16:54:55.391619+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-ruby",
                                "text/x-java",
                                "application/msword",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-tex",
                                "text/javascript",
                                "text/x-c",
                                "text/x-c++",
                                "application/pdf",
                                "application/json",
                                "text/html",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/x-csharp",
                                "text/x-script.python",
                                "text/x-php",
                                "text/x-sh",
                                "text/markdown",
                                "text/x-typescript",
                                "text/plain",
                                "application/x-latext"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/webp",
                                "image/jpeg"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-geVkN87vv",
                        "organization_id": "org-FttrSAw2PjCUTvnCI6JtRabF",
                        "short_url": "g-geVkN87vv-coding-expert",
                        "author": {
                            "user_id": "user-LPR4s2tvfzYWc4XsvP55msTG",
                            "display_name": "VILOMET",
                            "link_to": null,
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": null,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Coding Expert",
                            "description": "Coding expert for popular frameworks and languages",
                            "prompt_starters": [
                                "/context Javascript Vuetify Nuxt.js",
                                "/doc  center-active (v-slide-group)",
                                "/teach how to use expo with React native",
                                "/code a snake game in JS",
                                "How can I implement a modal dialog with Vuetify ? "
                            ],
                            "profile_pic_id": "file-Q7DzewDz0YCmOWnKOuwSa0RB",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-Q7DzewDz0YCmOWnKOuwSa0RB?se=2123-10-17T07%3A41%3A16Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Db6655615-71a0-47d7-ae4c-8e192c0dd31e.png&sig=ysA6l0L4qpXracKoceUaHXGccxML4HjME7COUe6/Kic%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-10T07:12:10.316813+00:00",
                        "updated_at": "2024-02-16T19:52:21.283938+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_FldISk9k6FHuws5d7EebFX0o~gzm_tool_Dy785GcufyeIeBupB3VKp4fc",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_FldISk9k6FHuws5d7EebFX0o~gzm_tool_XCmVcgTmTboVyljyfpDHajWt",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-ruby",
                                "text/x-java",
                                "application/msword",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-tex",
                                "text/javascript",
                                "text/x-c",
                                "text/x-c++",
                                "application/pdf",
                                "application/json",
                                "text/html",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/x-csharp",
                                "text/x-script.python",
                                "text/x-php",
                                "text/x-sh",
                                "text/markdown",
                                "text/x-typescript",
                                "text/plain",
                                "application/x-latext"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/png",
                                "image/webp",
                                "image/jpeg"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            }
        ],
        "cursor": null
    }
}