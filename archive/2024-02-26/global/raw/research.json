{
    "info": {
        "id": "research",
        "title": "Research & Analysis",
        "description": "Find, evaluate, interpret, and visualize information",
        "display_type": "ranked",
        "display_group": "Research & Analysis",
        "locale": "global"
    },
    "list": {
        "items": [
            {
                "resource": {
                    "gizmo": {
                        "id": "g-0S5FXLyFN",
                        "organization_id": "org-MiQaFvevLF7okpzszDxUPLVF",
                        "short_url": "g-0S5FXLyFN-wolfram",
                        "author": {
                            "user_id": "user-FlTb1ZArzBH5KVmoXXNvUyr8",
                            "display_name": "gpt.wolfram.com",
                            "link_to": "https://gpt.wolfram.com",
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Wolfram",
                            "description": "Access computation, math, curated knowledge & real-time data from Wolfram|Alpha and Wolfram Language; from the makers of Mathematica.",
                            "welcome_message": "",
                            "prompt_starters": [
                                "Plot the intersection of x^2+y^2<1 and y>x",
                                "When is the next solar eclipse visible from Chicago?",
                                "Show me recent earthquakes in Indonesia",
                                "How has the dollar-euro conversion changed recently?"
                            ],
                            "profile_pic_id": "file-fGE6EGZCQY73C76MJantfE0d",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-fGE6EGZCQY73C76MJantfE0d?se=2123-11-20T15%3A51%3A47Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DWolfram.png&sig=2QEsZQ5Kxa7XqcJ0uhOOHZMx0qjAhuN2H%2BsZR5p2GXo%3D",
                            "categories": [
                                "research"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-12-14T15:36:40.626116+00:00",
                        "updated_at": "2024-02-25T06:04:58.865276+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_AL7o3chF5EUUqwGMIv4XGcUq~gzm_tool_FYKykqoCA9AlLkAfTUWeiKc6",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-7046b54e994496ecf6922eb1f66b553532d0dc1f",
                                "domain": "chatgpt.wolframcloud.com",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.0",
                                    "info": {
                                        "title": "Wolfram Language API",
                                        "version": "1.0.0",
                                        "description": "API for evaluating Wolfram Language code and finding semantic Wolfram Language representations of natural language inputs."
                                    },
                                    "servers": [
                                        {
                                            "url": "https://chatgpt.wolframcloud.com/"
                                        }
                                    ],
                                    "paths": {
                                        "/wl/api/v1/eval-api": {
                                            "get": {
                                                "operationId": "getWolframCloudResults",
                                                "externalDocs": {
                                                    "description": "Get Wolfram Language documentation here",
                                                    "url": "https://reference.wolfram.com/language/"
                                                },
                                                "summary": "Evaluates Wolfram Language code only",
                                                "responses": {
                                                    "200": {
                                                        "description": "The result of the Wolfram Language evaluation",
                                                        "content": {
                                                            "text/plain": {}
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "The request is missing the 'input' parameter"
                                                    },
                                                    "403": {
                                                        "description": "Unauthorized"
                                                    },
                                                    "500": {
                                                        "description": "Wolfram Cloud was unable to generate a result"
                                                    },
                                                    "503": {
                                                        "description": "Service temporarily unavailable. This may be the result of too many requests."
                                                    }
                                                },
                                                "parameters": [
                                                    {
                                                        "name": "input",
                                                        "in": "query",
                                                        "description": "Wolfram Language code to be evaluated",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        "/obj/chatgpt-utilities/getSemanticInterpretationAPI": {
                                            "get": {
                                                "summary": "Get Semantic Interpretation",
                                                "operationId": "getSemanticInterpretationAPI",
                                                "description": "Interprets simplified natural language inputs as Wolfram Language entities, entity classes, or more complex reverse-lookups.",
                                                "parameters": [
                                                    {
                                                        "name": "input",
                                                        "in": "query",
                                                        "required": true,
                                                        "description": "Simplified natural language input to be interpreted.",
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful response with the interpreted Wolfram Language entity or entity class.",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "interpretation": {
                                                                            "type": "string",
                                                                            "description": "The interpreted Wolfram Language entity or entity class."
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Invalid request parameters."
                                                    }
                                                }
                                            }
                                        },
                                        "/obj/chatgpt-utilities/findEntityClassAPI": {
                                            "get": {
                                                "summary": "Find Wolfram Language EntityClass",
                                                "operationId": "findEntityClassAPI",
                                                "description": "Returns EntityClass interpretations for a specified type and input.",
                                                "parameters": [
                                                    {
                                                        "name": "type",
                                                        "in": "query",
                                                        "required": true,
                                                        "description": "The type of the Wolfram entity for EntityClass interpretation.",
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    {
                                                        "name": "name",
                                                        "in": "query",
                                                        "required": true,
                                                        "description": "The input for EntityClass interpretation.",
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful response with the EntityClass interpretation.",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "interpretation": {
                                                                            "type": "string",
                                                                            "description": "The EntityClass interpretation of the provided type and input."
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Invalid request parameters."
                                                    }
                                                }
                                            }
                                        },
                                        "/obj/chatgpt-utilities/findPropertyAPI": {
                                            "get": {
                                                "summary": "Find Wolfram Language EntityProperty",
                                                "operationId": "findPropertyAPI",
                                                "description": "Returns EntityProperty interpretations for a specified type and input.",
                                                "parameters": [
                                                    {
                                                        "name": "type",
                                                        "in": "query",
                                                        "required": true,
                                                        "description": "The type of the Wolfram entity for EntityProperty interpretation.",
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    {
                                                        "name": "name",
                                                        "in": "query",
                                                        "required": true,
                                                        "description": "The input for EntityProperty interpretation.",
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful response with the EntityProperty interpretation.",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "interpretation": {
                                                                            "type": "string",
                                                                            "description": "The EntityProperty interpretation of the provided type and input."
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Invalid request parameters."
                                                    }
                                                }
                                            }
                                        },
                                        "/obj/chatgpt-utilities/getDocumentationAPI": {
                                            "get": {
                                                "summary": "Get Wolfram Language Documentation",
                                                "operationId": "getDocumentationAPI",
                                                "description": "Returns usage information for Wolfram Language symbols.",
                                                "parameters": [
                                                    {
                                                        "name": "input",
                                                        "in": "query",
                                                        "required": true,
                                                        "description": "The Wolfram Language symbol for which to retrieve documentation.",
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful response with the usage information of the symbol.",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "documentation": {
                                                                            "type": "string",
                                                                            "description": "The usage information of the Wolfram Language symbol."
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Invalid request parameters."
                                                    }
                                                }
                                            }
                                        },
                                        "/obj/chatgpt-utilities/findEntityAPI": {
                                            "get": {
                                                "summary": "Find Wolfram Language Entity",
                                                "operationId": "findEntityAPI",
                                                "description": "Returns Wolfram Language interpretations of a specified entity.",
                                                "parameters": [
                                                    {
                                                        "name": "type",
                                                        "in": "query",
                                                        "required": true,
                                                        "description": "The type of the Wolfram entity (e.g., City, Country).",
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    {
                                                        "name": "name",
                                                        "in": "query",
                                                        "required": true,
                                                        "description": "The name of the entity to be interpreted in Wolfram Language.",
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful response with the Wolfram Language interpretation of the entity.",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "interpretation": {
                                                                            "type": "string",
                                                                            "description": "The Wolfram Language interpretation of the provided entity."
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Invalid request parameters."
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "service_http",
                                    "instructions": "",
                                    "authorization_type": "bearer",
                                    "verification_tokens": {},
                                    "custom_auth_header": ""
                                },
                                "privacy_policy_url": "https://www.wolfram.com/legal/privacy/wolfram/"
                            }
                        },
                        {
                            "id": "gzm_cnf_AL7o3chF5EUUqwGMIv4XGcUq~gzm_tool_tr84wvbsiAsF7gEQXezuICUj",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-b92fa2462d9db4b062923bb438a11bce0dce2097",
                                "domain": "www.wolframalpha.com",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.1.0",
                                    "info": {
                                        "title": "Wolfram",
                                        "version": "v0.1"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://www.wolframalpha.com",
                                            "description": "Wolfram Alpha API for LLMs."
                                        }
                                    ],
                                    "paths": {
                                        "/api/v1/llm-api": {
                                            "get": {
                                                "operationId": "getWolframAlphaResults",
                                                "externalDocs": {
                                                    "description": "Get API information here",
                                                    "url": "https://products.wolframalpha.com/api"
                                                },
                                                "summary": "Use Wolfram Alpha to interpret natural language queries and perform simple computations that do not require code",
                                                "responses": {
                                                    "200": {
                                                        "description": "The result of the Wolfram|Alpha query",
                                                        "content": {
                                                            "text/plain": {}
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "The request is missing the 'input' parameter"
                                                    },
                                                    "403": {
                                                        "description": "Unauthorized"
                                                    },
                                                    "500": {
                                                        "description": "Wolfram|Alpha was unable to generate a result"
                                                    },
                                                    "501": {
                                                        "description": "Wolfram|Alpha was unable to generate a result"
                                                    },
                                                    "503": {
                                                        "description": "Service temporarily unavailable. This may be the result of too many requests."
                                                    }
                                                },
                                                "parameters": [
                                                    {
                                                        "name": "input",
                                                        "in": "query",
                                                        "description": "Natural language input for Wolfram Alpha",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    {
                                                        "name": "assumption",
                                                        "in": "query",
                                                        "description": "the assumption to use, passed back from a previous query with the same input.",
                                                        "required": false,
                                                        "explode": true,
                                                        "style": "form",
                                                        "schema": {
                                                            "type": "array",
                                                            "items": {
                                                                "type": "string"
                                                            }
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "service_http",
                                    "instructions": "",
                                    "authorization_type": "bearer",
                                    "verification_tokens": {},
                                    "custom_auth_header": ""
                                },
                                "privacy_policy_url": "https://www.wolfram.com/legal/privacy/wolfram/"
                            }
                        }
                    ],
                    "files": [
                        {
                            "id": "gzm_cnf_cjGxQ0O6MTHVqn1NWa90PtaK~gzm_file_VXdQupa58fFHr9RdYSCllYuM",
                            "type": "text/plain",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_JCLnqbTFocXLbnfcCePxwDVF~gzm_file_9U3JzM8NsUXaSvTFq74p18as",
                            "type": "text/plain",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_EMQNI1XYKBtECyHxD9rJkP3o~gzm_file_wUMHw1pVb1dzgUKoQY1wlz2i",
                            "type": "text/plain",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_nw1TqgyHm2V5ZoxZfwRL636r~gzm_file_XwY1bqS46dkpEexv9zReA6OR",
                            "type": "text/plain",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-java",
                                "text/plain",
                                "text/x-script.python",
                                "application/pdf",
                                "text/x-sh",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/markdown",
                                "text/html",
                                "text/x-c++",
                                "text/x-c",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript",
                                "application/x-latext",
                                "application/json",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-php",
                                "text/x-csharp",
                                "text/x-tex",
                                "application/msword"
                            ],
                            "image_mime_types": [
                                "image/jpeg",
                                "image/png",
                                "image/webp",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-GrshPDvS3",
                        "organization_id": "org-uoxn0Z4VG7HfxDJE5qyehKZw",
                        "short_url": "g-GrshPDvS3-seo",
                        "author": {
                            "user_id": "user-pwXYTRW1ZWSrpKSSgownsWSR",
                            "display_name": "Orren Prunckun",
                            "link_to": "https://orrenprunckun.com",
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": [
                                {
                                    "id": "linkedinverify-4b97-9080-6c959845166a",
                                    "type": "linkedin",
                                    "display_name": "LinkedIn",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "YihTkKx3Pg",
                                        "username": "Orren Prunckun",
                                        "display_name": "Orren Prunckun",
                                        "type": "linkedin",
                                        "link_to": "https://linkedin.com/in/orrenprunckun"
                                    }
                                },
                                {
                                    "id": "twitterverify-43d2-b12a-bbe33d600487",
                                    "type": "twitter",
                                    "display_name": "X",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "255484352",
                                        "username": "@OrrenHimself",
                                        "type": "twitter",
                                        "link_to": "https://twitter.com/OrrenHimself"
                                    }
                                }
                            ]
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "SEO",
                            "description": "Enter any URL and keyword and get an On-Page SEO analysis & insights!",
                            "welcome_message": "Hello",
                            "prompt_starters": [
                                "Please analyze the SEO of my site: [YourURL.com].",
                                "What improvements can I make for [YourKeyword] on my page?",
                                "Check my site's load time and metadata for SEO efficiency.",
                                "Buy me a coffee"
                            ],
                            "profile_pic_id": null,
                            "profile_picture_url": "https://files.oaiusercontent.com/file-s5NcRVt5egnVXovMSBsfPYDM?se=2123-10-14T06%3A46%3A11Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dicon.png&sig=zJTfWBwlzX1jJYZ0vBbMaLTwcX/gHiYTLSrvijL%2BWDY%3D",
                            "categories": [
                                "research"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-07T06:28:41.942325+00:00",
                        "updated_at": "2024-02-26T06:03:03.238976+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_KMGav3n0S7zD4rJwCxR0rjJl~gzm_tool_ncwl4RaWvKF1rpc4fUkX39eK",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_doVdPaEOxbYXmXD7PHnmGDZG~gzm_tool_9vwfD14YvpvED1dBvHgv2oPI",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-0a51dd974f0ed13c9962546b9b8dc97d5c6a09f5",
                                "domain": "orrenprunckun.com",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.1.0",
                                    "info": {
                                        "title": "Access external data for your GPTs",
                                        "version": "v1.0.0"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://orrenprunckun.com/ai-copilot-ads"
                                        }
                                    ],
                                    "paths": {
                                        "/": {
                                            "get": {
                                                "description": "Data",
                                                "operationId": "data",
                                                "x-openai-isConsequential": false,
                                                "parameters": [
                                                    {
                                                        "name": "getAds",
                                                        "in": "query",
                                                        "description": "Get Ads parameter",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    }
                                                ],
                                                "deprecated": false,
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful response",
                                                        "content": {
                                                            "application/json": {
                                                                "example": {
                                                                    "message": "Data fetched successfully",
                                                                    "data": []
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {}
                                    }
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://orrenprunckun.com/privacy"
                            }
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-java",
                                "text/plain",
                                "text/x-script.python",
                                "application/pdf",
                                "text/x-sh",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/markdown",
                                "text/html",
                                "text/x-c++",
                                "text/x-c",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript",
                                "application/x-latext",
                                "application/json",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-php",
                                "text/x-csharp",
                                "text/x-tex",
                                "application/msword"
                            ],
                            "image_mime_types": [
                                "image/jpeg",
                                "image/png",
                                "image/webp",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-NgAcklHd8",
                        "organization_id": "org-CiZfptPvR9ybl7lGpqeCN9Am",
                        "short_url": "g-NgAcklHd8-scispace",
                        "author": {
                            "user_id": "user-QJ75wi1maLBx4VV4HbxHUSYV",
                            "display_name": "Scispace.com",
                            "link_to": "https://scispace.com",
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": [
                                {
                                    "id": "twitterverify-43d2-b12a-bbe33d600487",
                                    "type": "twitter",
                                    "display_name": "X",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "2873534552",
                                        "username": "@scispace_",
                                        "type": "twitter",
                                        "link_to": "https://twitter.com/scispace_"
                                    }
                                }
                            ]
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "SciSpace",
                            "description": "Do hours worth of research in minutes. Instantly access 200M+ papers, analyze papers at lightning speed, and effortlessly draft content with accurate citations.",
                            "welcome_message": "Welcome! Ready to find some research papers? Feel free to ask follow-up questions too.",
                            "prompt_starters": [
                                "Locate studies on neural network",
                                "Retrieve articles on dark matter and energy theories",
                                "Explore papers about higher-dimensional algebra",
                                "Papers on climate change's impact on biodiversity"
                            ],
                            "profile_pic_id": "file-c21dHgCzbVdnCvJ7a0JfsHAp",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-c21dHgCzbVdnCvJ7a0JfsHAp?se=2123-12-31T12%3A47%3A40Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DSciSpace-logoV%2521.png&sig=QEIzAFeekXOiJzFOPqKC4Ceu8%2BspwsRduav%2BuygqdU0%3D",
                            "categories": [
                                "research"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-15T08:30:58.669072+00:00",
                        "updated_at": "2024-02-24T14:26:20.485289+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_tORVnCG1HRZLmeMvOQX0j3uM~gzm_tool_aDXhTuRr1wfbd7RII8izsyuv",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-3a3451859bc0fac6ecdc745a13fa613c4887ee3a",
                                "domain": "researchgpt.typeset.io",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.3",
                                    "info": {
                                        "title": "SciSpace ResearchGPT",
                                        "version": "1.0.0",
                                        "description": "This is SciSpace ResearchGPT Project which has end points to get factual scientific information for various use cases."
                                    },
                                    "servers": [
                                        {
                                            "url": "https://researchgpt.typeset.io/"
                                        }
                                    ],
                                    "paths": {
                                        "/api/v1/paper/": {
                                            "get": {
                                                "operationId": "v1_paper_list",
                                                "description": "API to get search results for user query. Use this function when user wants to search papers or get answer to a question.",
                                                "parameters": [
                                                    {
                                                        "name": "search",
                                                        "required": true,
                                                        "in": "query",
                                                        "description": "A search term.",
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    }
                                                ],
                                                "tags": [
                                                    "v1"
                                                ],
                                                "security": [
                                                    {
                                                        "tokenAuth": []
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "$ref": "#/components/schemas/LitReviewResponse"
                                                                    }
                                                                }
                                                            }
                                                        },
                                                        "description": "List of all papers that can answer the asked question."
                                                    }
                                                }
                                            }
                                        },
                                        "/api/v1/paper/{id}/": {
                                            "get": {
                                                "operationId": "v1_paper_retrieve",
                                                "description": "Use this get answers for a paper specific query",
                                                "parameters": [
                                                    {
                                                        "in": "path",
                                                        "name": "id",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "required": true
                                                    },
                                                    {
                                                        "in": "query",
                                                        "name": "question",
                                                        "schema": {
                                                            "type": "string",
                                                            "minLength": 1
                                                        },
                                                        "required": true
                                                    }
                                                ],
                                                "tags": [
                                                    "v1"
                                                ],
                                                "security": [
                                                    {
                                                        "tokenAuth": []
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/PaperInfoResponse"
                                                                }
                                                            }
                                                        },
                                                        "description": ""
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "Author": {
                                                "type": "object",
                                                "properties": {
                                                    "display_name": {
                                                        "type": "string"
                                                    },
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "slug": {
                                                        "type": "string"
                                                    },
                                                    "unique_id": {
                                                        "type": "string"
                                                    },
                                                    "full_slug": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "display_name",
                                                    "full_slug",
                                                    "id",
                                                    "slug",
                                                    "unique_id"
                                                ]
                                            },
                                            "Journal": {
                                                "type": "object",
                                                "properties": {
                                                    "display_name": {
                                                        "type": "string"
                                                    },
                                                    "official_page": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    },
                                                    "issn": {
                                                        "type": "string"
                                                    },
                                                    "alias": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "slug": {
                                                        "type": "string"
                                                    },
                                                    "unique_id": {
                                                        "type": "string"
                                                    },
                                                    "full_slug": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "alias",
                                                    "display_name",
                                                    "full_slug",
                                                    "id",
                                                    "issn",
                                                    "official_page",
                                                    "slug",
                                                    "unique_id"
                                                ]
                                            },
                                            "LitReviewResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "fssConfig": {
                                                        "type": "object",
                                                        "additionalProperties": {}
                                                    },
                                                    "total": {
                                                        "type": "integer"
                                                    },
                                                    "data": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/Paper"
                                                        }
                                                    }
                                                },
                                                "required": [
                                                    "data",
                                                    "fssConfig",
                                                    "total"
                                                ]
                                            },
                                            "Paper": {
                                                "type": "object",
                                                "properties": {
                                                    "id": {
                                                        "type": "integer"
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "is_archived": {
                                                        "type": "boolean"
                                                    },
                                                    "full_slug": {
                                                        "type": "string"
                                                    },
                                                    "journal": {
                                                        "$ref": "#/components/schemas/Journal"
                                                    },
                                                    "conference_series": {
                                                        "type": "string",
                                                        "readOnly": true
                                                    },
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date-time"
                                                    },
                                                    "is_oa": {
                                                        "type": "boolean"
                                                    },
                                                    "publication_type": {
                                                        "type": "string"
                                                    },
                                                    "doi": {
                                                        "type": "string"
                                                    },
                                                    "authors": {
                                                        "type": "array",
                                                        "items": {
                                                            "$ref": "#/components/schemas/Author"
                                                        }
                                                    },
                                                    "affiliations": {
                                                        "type": "string",
                                                        "readOnly": true
                                                    },
                                                    "fulltext_url": {
                                                        "type": "string",
                                                        "format": "uri"
                                                    },
                                                    "fulltext_url_no_follow": {
                                                        "type": "boolean"
                                                    },
                                                    "paper_urls": {
                                                        "type": "string",
                                                        "readOnly": true
                                                    },
                                                    "metrics": {
                                                        "type": "string",
                                                        "readOnly": true
                                                    },
                                                    "is_bookmarked": {
                                                        "type": "boolean"
                                                    }
                                                },
                                                "required": [
                                                    "affiliations",
                                                    "authors",
                                                    "conference_series",
                                                    "date",
                                                    "doi",
                                                    "full_slug",
                                                    "fulltext_url",
                                                    "fulltext_url_no_follow",
                                                    "id",
                                                    "is_archived",
                                                    "is_bookmarked",
                                                    "is_oa",
                                                    "journal",
                                                    "metrics",
                                                    "paper_urls",
                                                    "publication_type",
                                                    "title"
                                                ]
                                            },
                                            "PaperInfoResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "paper_info": {
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "paper_info"
                                                ]
                                            }
                                        },
                                        "securitySchemes": {
                                            "tokenAuth": {
                                                "type": "apiKey",
                                                "in": "header",
                                                "name": "Authorization",
                                                "description": "Token-based authentication with required prefix \"Token\""
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "service_http",
                                    "instructions": "",
                                    "authorization_type": "custom",
                                    "verification_tokens": {},
                                    "custom_auth_header": "Authorization"
                                },
                                "privacy_policy_url": "https://typeset.io/t/security-commitment/"
                            }
                        },
                        {
                            "id": "gzm_cnf_Yd0V0pGKkpJXDDPRzZdbc3EM~gzm_tool_U7weRgnRrHYybF5p3LT0Xgui",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-java",
                                "text/plain",
                                "text/x-script.python",
                                "application/pdf",
                                "text/x-sh",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/markdown",
                                "text/html",
                                "text/x-c++",
                                "text/x-c",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript",
                                "application/x-latext",
                                "application/json",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-php",
                                "text/x-csharp",
                                "text/x-tex",
                                "application/msword"
                            ],
                            "image_mime_types": [
                                "image/jpeg",
                                "image/png",
                                "image/webp",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-rsuRKk1MX",
                        "organization_id": "org-LBgPBRpZmGcbdtr7sbDlC4Zx",
                        "short_url": "g-rsuRKk1MX-pdf-insight",
                        "author": {
                            "user_id": "user-ijOD0AlWVvNlQSngmVhLIdBX",
                            "display_name": "mjproductions.tech",
                            "link_to": "https://mjproductions.tech",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": null,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "PDF Insight",
                            "description": "I provide insights and summaries of PDF documents uploaded by users.",
                            "welcome_message": "Hello! Upload a PDF and I'll help you with insights or summaries.",
                            "prompt_starters": [
                                "Can you summarize this PDF for me?",
                                "What are the key points in this uploaded document?",
                                "Could you explain this section of the PDF?",
                                "I have a question about this part of the document."
                            ],
                            "profile_pic_id": "file-4IyR0QcEidgzHaOtqyfTJoq8",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-4IyR0QcEidgzHaOtqyfTJoq8?se=2123-10-24T12%3A09%3A26Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D4cacc427-acab-4f9c-9da2-e7fc8d533939.png&sig=bqQ/vVgJqrsuyj%2BNm2H9Gwp3isevguTlQ7p4ZCoVNTw%3D",
                            "categories": [
                                "research"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-17T12:07:05.200382+00:00",
                        "updated_at": "2024-02-25T06:01:32.472551+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_Z24ertPmEDOhfUflvOOkwaK6~gzm_tool_mOqukFqP1cimYdF7psNXlUbA",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-java",
                                "text/plain",
                                "text/x-script.python",
                                "application/pdf",
                                "text/x-sh",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/markdown",
                                "text/html",
                                "text/x-c++",
                                "text/x-c",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript",
                                "application/x-latext",
                                "application/json",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-php",
                                "text/x-csharp",
                                "text/x-tex",
                                "application/msword"
                            ],
                            "image_mime_types": [
                                "image/jpeg",
                                "image/png",
                                "image/webp",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-veSrMmasJ",
                        "organization_id": "org-ILglKVAiR6nf3gt4csyipfOi",
                        "short_url": "g-veSrMmasJ-keymate-ai-search-gpt",
                        "author": {
                            "user_id": "user-rSROYxux1E4CQYND8pQ0Z50Y",
                            "display_name": "Keymate AI Inc.",
                            "link_to": "https://keymate.ai",
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": [
                                {
                                    "id": "linkedinverify-4b97-9080-6c959845166a",
                                    "type": "linkedin",
                                    "display_name": "LinkedIn",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "j6yiIZIAJ6",
                                        "username": "Ozgur (Oscar) Ozkan",
                                        "display_name": "Ozgur (Oscar) Ozkan",
                                        "type": "linkedin",
                                        "link_to": "https://linkedin.com/in/oscar-ozkan"
                                    }
                                },
                                {
                                    "id": "githubverify-dff6-4871-860f-d61dfa7afa7f",
                                    "type": "github",
                                    "display_name": "GitHub",
                                    "verified": true,
                                    "verified_data": {
                                        "id": 3254799,
                                        "username": "ozgurozkan123",
                                        "type": "github",
                                        "link_to": "https://github.com/ozgurozkan123"
                                    }
                                },
                                {
                                    "id": "twitterverify-43d2-b12a-bbe33d600487",
                                    "type": "twitter",
                                    "display_name": "X",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "1722710992222609408",
                                        "username": "@KeymateAI",
                                        "type": "twitter",
                                        "link_to": "https://twitter.com/KeymateAI"
                                    }
                                }
                            ]
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Keymate.AI Search GPT",
                            "description": "All in one GPT: 10X Browsing Links with Google Search + multi PDF + AI Knowledge Memory + Academic (395M+ Up to Date Publications) + Hallucination Check + API and more",
                            "welcome_message": "Welcome to Keymate.AI GPT (Alpha)! How may I assist you with your search today?",
                            "prompt_starters": [
                                "Scan the news about $TSLA and check price",
                                "/academicsearch AI deep learning",
                                "Explain from full text paper w DOI 10.1016/j.respol.2012.03.008",
                                "/help and /list"
                            ],
                            "profile_pic_id": "file-6XfNfOxaKnIX5U9WLR2GqkWg",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-6XfNfOxaKnIX5U9WLR2GqkWg?se=2123-10-14T17%3A25%3A15Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DTransparentFavicon%2520-%2520Copy%2520%2528Custom%2529.png&sig=JE1A3o58i8M6/SOhRg01SraCEqqg4aXnL4bHujtOga8%3D",
                            "categories": [
                                "research"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-07T14:40:21.941971+00:00",
                        "updated_at": "2024-02-25T20:02:34.724690+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_JRKh0xyo747nmIX2tQjw6VQn~gzm_tool_t9SzzbJBuwXqfa44eucsdXIT",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-f82422cf5d8142501f19b8a0f3723c9a16f55a6f",
                                "domain": "searchweb.keymate.ai",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.3",
                                    "info": {
                                        "title": "Keymate.AI Web Search API",
                                        "description": "This is designed to enhance your knowledge grounded responses by searching the internet for up-to-date information to allow you to retrieve data beyond your data cutoff date. FALLBACK TO /searchgiant operation in case of an FUNCTION_INVOCATION_TIMEOUT or 504 or 500 error",
                                        "version": "1.0.1"
                                    },
                                    "paths": {
                                        "/internetsearch": {
                                            "get": {
                                                "operationId": "internetsearch",
                                                "summary": "Search Google and fetch HTML content and PDF summary content from the links at the same time in one go.",
                                                "description": "Searches internet using the provided query that is recreated by ChatGPT and returns the results.Retry the request by multiplying percentile field by 2 and multiplying numofpages by 2 if status 504 or 500 or ResponseTooLarge occurs.Cite link field.",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "Search query",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "python"
                                                    },
                                                    {
                                                        "name": "percentile",
                                                        "in": "query",
                                                        "description": "Start it as '1', increase to '6' if ResponseTooLarge occurs, only reduce to '3' or '4' if user requests it.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "1"
                                                    },
                                                    {
                                                        "name": "numofpages",
                                                        "in": "query",
                                                        "description": "Start it as '6'. Retry the request by decreasing only this one if 'ResponseTooLarge' occurs. Should be between 1 and 10.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "6"
                                                    },
                                                    {
                                                        "name": "inputwindowwords",
                                                        "in": "query",
                                                        "description": "Set it as '8000' first if responsetoolarge occurs reduce it to 1000.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "8000"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "results": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "title": {
                                                                                        "type": "string",
                                                                                        "description": "The title of the search result"
                                                                                    },
                                                                                    "link": {
                                                                                        "type": "string",
                                                                                        "format": "uri",
                                                                                        "description": "The URL of the search result"
                                                                                    },
                                                                                    "summary": {
                                                                                        "type": "string",
                                                                                        "description": "A summary of the HTML content of the search result (available for the first five results)"
                                                                                    },
                                                                                    "full_content": {
                                                                                        "type": "string",
                                                                                        "description": "The entire HTML content of the search result (available for the first three results)"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "rules": {
                                                                            "type": "string",
                                                                            "description": "The rules which recommend gpt to follow."
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "results": [
                                                                            {
                                                                                "title": "Welcome to Python.org",
                                                                                "link": "https://www.python.org/",
                                                                                "summary": "The official home of the Python Programming Language...",
                                                                                "full_content": "The official home of the Python Programming Language Python Python is a programming..."
                                                                            },
                                                                            {
                                                                                "title": "Python (programming language) - Wikipedia",
                                                                                "link": "https://en.wikipedia.org/wiki/Python_(programming_language)",
                                                                                "summary": "Python is an interpreted, high-level, general-purpose programming language...",
                                                                                "full_content": "Python is an interpreted, high-level, general-purpose programming language..."
                                                                            }
                                                                        ],
                                                                        "rules": "Follow the instructions provided."
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Bad request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "error": {
                                                                            "type": "string",
                                                                            "description": "Error message"
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "error": "No query provided"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "default": {
                                                        "description": "Error fetching search results",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "error": {
                                                                            "type": "string",
                                                                            "description": "Error message"
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "error": "Error fetching search results"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/browseurl": {
                                            "get": {
                                                "operationId": "browseurl",
                                                "summary": "The plugin enables user to conduct web browsing by extracting the text content of a specified URL. It will generate title and content.",
                                                "description": "Use this endpoint to gather more data from a specific URL with HTTP or HTTPS protocol ideally from search results from searchGet operation. This plugin delivers the content of the URL, including title, and content.",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "URL of the website.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string",
                                                            "format": "url"
                                                        },
                                                        "example": "https://keymate.ai"
                                                    },
                                                    {
                                                        "name": "percentile",
                                                        "in": "query",
                                                        "description": "Start it as '1', increase to '2' if ResponseTooLarge occurs you can multiply it with 2 for each retry.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "1"
                                                    },
                                                    {
                                                        "name": "numofpages",
                                                        "in": "query",
                                                        "description": "Set it as '1'",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "1"
                                                    },
                                                    {
                                                        "name": "inputwindowwords",
                                                        "in": "query",
                                                        "description": "Set it as '10000' first if responsetoolarge occurs reduce it to 2000.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "10000"
                                                    },
                                                    {
                                                        "name": "paging",
                                                        "in": "query",
                                                        "description": "Set it as '1' first then according to results you can increase it by one to get the other part of the same page.",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "1"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "results": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "title": {
                                                                                        "type": "string",
                                                                                        "description": "The title of the search result"
                                                                                    },
                                                                                    "link": {
                                                                                        "type": "string",
                                                                                        "format": "uri",
                                                                                        "description": "The URL of the search result"
                                                                                    },
                                                                                    "summary": {
                                                                                        "type": "string",
                                                                                        "description": "A summary of the HTML content of the search result (available for the first five results)"
                                                                                    },
                                                                                    "full_content": {
                                                                                        "type": "string",
                                                                                        "description": "The entire HTML content of the search result (available for the first three results)"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "rules": {
                                                                            "type": "string",
                                                                            "description": "The rules which recommend gpt to follow."
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "results": [
                                                                            {
                                                                                "title": "Welcome to Python.org",
                                                                                "link": "https://www.python.org/",
                                                                                "summary": "The official home of the Python Programming Language...",
                                                                                "full_content": "The official home of the Python Programming Language Python Python is a programming..."
                                                                            }
                                                                        ],
                                                                        "rules": "Follow the instructions provided"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Bad request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "error": {
                                                                            "type": "string",
                                                                            "description": "Error message"
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "error": "No query provided"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "default": {
                                                        "description": "Error fetching search results",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "error": {
                                                                            "type": "string",
                                                                            "description": "Error message"
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "error": "Error fetching search results"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/halloween": {
                                            "get": {
                                                "operationId": "halloween",
                                                "summary": "The plugin enables user to conduct web browsing by extracting the text content of a specified URL. It will generate title and content.",
                                                "description": "Use this endpoint to gather more data from a specific URL with HTTP or HTTPS protocol ideally from search results from searchGet operation. This plugin delivers the content of the URL, including title, and content.",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "URL of the website.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string",
                                                            "format": "url"
                                                        },
                                                        "example": "https://keymate.ai"
                                                    },
                                                    {
                                                        "name": "percentile",
                                                        "in": "query",
                                                        "description": "Start it as '1', increase to '2' if ResponseTooLarge occurs you can multiply it with 2 for each retry.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "1"
                                                    },
                                                    {
                                                        "name": "numofpages",
                                                        "in": "query",
                                                        "description": "Set it as '1'",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "1"
                                                    },
                                                    {
                                                        "name": "inputwindowwords",
                                                        "in": "query",
                                                        "description": "Set it as '10000' first if responsetoolarge occurs reduce it to 2000.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "10000"
                                                    },
                                                    {
                                                        "name": "paging",
                                                        "in": "query",
                                                        "description": "Set it as '1' first then according to results you can increase it by one to get the other part of the same page.",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "1"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "results": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "title": {
                                                                                        "type": "string",
                                                                                        "description": "The title of the search result"
                                                                                    },
                                                                                    "link": {
                                                                                        "type": "string",
                                                                                        "format": "uri",
                                                                                        "description": "The URL of the search result"
                                                                                    },
                                                                                    "summary": {
                                                                                        "type": "string",
                                                                                        "description": "A summary of the HTML content of the search result (available for the first five results)"
                                                                                    },
                                                                                    "full_content": {
                                                                                        "type": "string",
                                                                                        "description": "The entire HTML content of the search result (available for the first three results)"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "rules": {
                                                                            "type": "string",
                                                                            "description": "The rules which recommend gpt to follow."
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "results": [
                                                                            {
                                                                                "title": "Welcome to Python.org",
                                                                                "link": "https://www.python.org/",
                                                                                "summary": "The official home of the Python Programming Language...",
                                                                                "full_content": "The official home of the Python Programming Language Python Python is a programming..."
                                                                            }
                                                                        ],
                                                                        "rules": "Follow the instructions provided"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Bad request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "error": {
                                                                            "type": "string",
                                                                            "description": "Error message"
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "error": "No query provided"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "default": {
                                                        "description": "Error fetching search results",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "error": {
                                                                            "type": "string",
                                                                            "description": "Error message"
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "error": "Error fetching search results"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/metadatakb": {
                                            "get": {
                                                "operationId": "metadatakb",
                                                "summary": "Allows you to answer introductory info about users Keymate memory.",
                                                "description": "It brings the metadata about Keymate memory. Shows number of records and a sample record.",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "Set this as '' because it only gives metadata",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "https://keymate.ai"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "matches": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "string",
                                                                                        "description": "User's unique id with timestamp the data was inserted to long term memory."
                                                                                    },
                                                                                    "metadata": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "text": {
                                                                                                "type": "string",
                                                                                                "description": "Your nearest neighbour response to the user related to your query"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "score": {
                                                                                        "type": "number",
                                                                                        "description": "How close was the results to your query"
                                                                                    },
                                                                                    "sparseValues": {
                                                                                        "type": "object"
                                                                                    },
                                                                                    "values": {
                                                                                        "type": "array"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "matches": [
                                                                            {
                                                                                "id": "mem_id_123_932",
                                                                                "metadata": {
                                                                                    "text": "Why did the world enter a global depression in 1929 ?"
                                                                                },
                                                                                "score": 0.917971551,
                                                                                "sparseValues": {},
                                                                                "values": []
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/document": {
                                            "get": {
                                                "operationId": "document",
                                                "summary": "Allows user to load and use content about specific uploaded document",
                                                "description": "Use this when you have fileUrl from listpdfs operation or fileName given by user",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "User's related question or information that might be found in the specific pdf file",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "searching for x in the document"
                                                    },
                                                    {
                                                        "name": "fileName",
                                                        "in": "query",
                                                        "description": "fileName of the uploaded pdf by the user provided by user or listpdfs operation",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "something.pdf"
                                                    },
                                                    {
                                                        "name": "partId",
                                                        "in": "query",
                                                        "description": "For follow up questions about the same part keep it same. Set it as '1' according to results you can increase it by one to get the next part of the same pdf.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "1"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "matches": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "string",
                                                                                        "description": "User's unique id with timestamp the data was inserted to long term memory."
                                                                                    },
                                                                                    "metadata": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "text": {
                                                                                                "type": "string",
                                                                                                "description": "Your nearest neighbour response to the user related to your query"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "score": {
                                                                                        "type": "number",
                                                                                        "description": "How close was the results to your query"
                                                                                    },
                                                                                    "sparseValues": {
                                                                                        "type": "object"
                                                                                    },
                                                                                    "values": {
                                                                                        "type": "array"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "matches": [
                                                                            {
                                                                                "id": "mem_id_123_932",
                                                                                "metadata": {
                                                                                    "text": "Why did the world enter a global depression in 1929 ?"
                                                                                },
                                                                                "score": 0.917971551,
                                                                                "sparseValues": {},
                                                                                "values": []
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/pdfpro": {
                                            "get": {
                                                "operationId": "pdfpro",
                                                "summary": "Allows user to load and use content about specific uploaded pdf",
                                                "description": "Use this when you have fileUrl from listpdfs operation or fileName given by user",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "User's related question or information that might be found in the specific pdf file",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "https://keymate.ai"
                                                    },
                                                    {
                                                        "name": "fileName",
                                                        "in": "query",
                                                        "description": "fileName of the uploaded pdf by the user provided by user or listpdfs operation",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "https://keymate.ai"
                                                    },
                                                    {
                                                        "name": "partId",
                                                        "in": "query",
                                                        "description": "For follow up questions about the same part keep it same. Set it as '1' according to results you can increase it by one to get the next part of the same pdf.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "1"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "matches": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "string",
                                                                                        "description": "User's unique id with timestamp the data was inserted to long term memory."
                                                                                    },
                                                                                    "metadata": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "text": {
                                                                                                "type": "string",
                                                                                                "description": "Your nearest neighbour response to the user related to your query"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "score": {
                                                                                        "type": "number",
                                                                                        "description": "How close was the results to your query"
                                                                                    },
                                                                                    "sparseValues": {
                                                                                        "type": "object"
                                                                                    },
                                                                                    "values": {
                                                                                        "type": "array"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "matches": [
                                                                            {
                                                                                "id": "mem_id_123_932",
                                                                                "metadata": {
                                                                                    "text": "Why did the world enter a global depression in 1929 ?"
                                                                                },
                                                                                "score": 0.917971551,
                                                                                "sparseValues": {},
                                                                                "values": []
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/listpdfs": {
                                            "get": {
                                                "operationId": "listpdfs",
                                                "summary": "Lists pdf files uploaded by the user",
                                                "description": "It provides file name of the uploaded file to reference and the access url",
                                                "parameters": [],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "matches": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "string",
                                                                                        "description": "User's unique id with timestamp the data was inserted to long term memory."
                                                                                    },
                                                                                    "metadata": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "text": {
                                                                                                "type": "string",
                                                                                                "description": "Your nearest neighbour response to the user related to your query"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "score": {
                                                                                        "type": "number",
                                                                                        "description": "How close was the results to your query"
                                                                                    },
                                                                                    "sparseValues": {
                                                                                        "type": "object"
                                                                                    },
                                                                                    "values": {
                                                                                        "type": "array"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "matches": [
                                                                            {
                                                                                "id": "mem_id_123_932",
                                                                                "metadata": {
                                                                                    "text": "Why did the world enter a global depression in 1929 ?"
                                                                                },
                                                                                "score": 0.917971551,
                                                                                "sparseValues": {},
                                                                                "values": []
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/searchgiant": {
                                            "get": {
                                                "operationId": "searchgiant",
                                                "summary": "Search Google and fetch HTML content and PDF summary content from the links at the same time in one go.",
                                                "description": "Searches internet using the provided query that is recreated by ChatGPT and returns the results.Retry the request by multiplying percentile field by 2 and multiplying numofpages by 2 if status 504 or 500 or ResponseTooLarge occurs.Cite link field.",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "Search query",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "python"
                                                    },
                                                    {
                                                        "name": "percentile",
                                                        "in": "query",
                                                        "description": "Start it as '1', increase to '2' if ResponseTooLarge occurs, only reduce to '1' or '2' if user requests it.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "1"
                                                    },
                                                    {
                                                        "name": "numofpages",
                                                        "in": "query",
                                                        "description": "Start it as '10'. Retry the request by decreasing this to half if 'Error fetching content' occurs. Should be between 1 and 10.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "10"
                                                    },
                                                    {
                                                        "name": "inputwindowwords",
                                                        "in": "query",
                                                        "description": "Total number of words will return as a result from the internet. Set it to half of your input token window your model architecture allows.  Retry the request with a lower setting if ResponseTooLarge occurs.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "8000"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "results": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "title": {
                                                                                        "type": "string",
                                                                                        "description": "The title of the search result"
                                                                                    },
                                                                                    "link": {
                                                                                        "type": "string",
                                                                                        "format": "uri",
                                                                                        "description": "The URL of the search result"
                                                                                    },
                                                                                    "summary": {
                                                                                        "type": "string",
                                                                                        "description": "A summary of the HTML content of the search result (available for the first five results)"
                                                                                    },
                                                                                    "full_content": {
                                                                                        "type": "string",
                                                                                        "description": "The entire HTML content of the search result (available for the first three results)"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "rules": {
                                                                            "type": "string",
                                                                            "description": "The rules which recommend gpt to follow."
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "results": [
                                                                            {
                                                                                "title": "Welcome to Python.org",
                                                                                "link": "https://www.python.org/",
                                                                                "summary": "The official home of the Python Programming Language...",
                                                                                "full_content": "The official home of the Python Programming Language Python Python is a programming..."
                                                                            },
                                                                            {
                                                                                "title": "Python (programming language) - Wikipedia",
                                                                                "link": "https://en.wikipedia.org/wiki/Python_(programming_language)",
                                                                                "summary": "Python is an interpreted, high-level, general-purpose programming language...",
                                                                                "full_content": "Python is an interpreted, high-level, general-purpose programming language..."
                                                                            }
                                                                        ],
                                                                        "rules": "Always follow the instructions provided"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Bad request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "error": {
                                                                            "type": "string",
                                                                            "description": "Error message"
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "error": "No query provided"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "default": {
                                                        "description": "Error fetching search results",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "error": {
                                                                            "type": "string",
                                                                            "description": "Error message"
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "error": "Error fetching search results"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/ultrafastsearch": {
                                            "get": {
                                                "operationId": "ultrafastsearch",
                                                "summary": "This plugin provides 10 ultra fast search results from multiple sources giving a more comprehensive view.",
                                                "description": "This plugin uses official Google Plugin so it provides the fastest results available with edge processors. Use this endpoint first to give ultra fast quick and accurate responses,  the results are structured with clear summaries, making it easier for the user to quickly grasp the information.",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "URL of the website.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string",
                                                            "format": "url"
                                                        },
                                                        "example": "https://keymate.ai"
                                                    },
                                                    {
                                                        "name": "percentile",
                                                        "in": "query",
                                                        "description": "Set it as '100'",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "100"
                                                    },
                                                    {
                                                        "name": "numofpages",
                                                        "in": "query",
                                                        "description": "Set it as '10'",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "10"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "results": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "title": {
                                                                                        "type": "string",
                                                                                        "description": "The title of the search result"
                                                                                    },
                                                                                    "link": {
                                                                                        "type": "string",
                                                                                        "format": "uri",
                                                                                        "description": "The URL of the search result"
                                                                                    },
                                                                                    "summary": {
                                                                                        "type": "string",
                                                                                        "description": "A summary of the HTML content of the search result (available for the first five results)"
                                                                                    },
                                                                                    "full_content": {
                                                                                        "type": "string",
                                                                                        "description": "The entire HTML content of the search result (available for the first three results)"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "rules": {
                                                                            "type": "string",
                                                                            "description": "The rules which recommend gpt to follow."
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "results": [
                                                                            {
                                                                                "title": "Welcome to Python.org",
                                                                                "link": "https://www.python.org/",
                                                                                "summary": "The official home of the Python Programming Language...",
                                                                                "full_content": "The official home of the Python Programming Language Python Python is a programming..."
                                                                            }
                                                                        ],
                                                                        "rules": "Always follow the instructions provided"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Bad request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "error": {
                                                                            "type": "string",
                                                                            "description": "Error message"
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "error": "No query provided"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "default": {
                                                        "description": "Error fetching search results",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "error": {
                                                                            "type": "string",
                                                                            "description": "Error message"
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "error": "Error fetching search results"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/browsegiant": {
                                            "get": {
                                                "operationId": "browsegiant",
                                                "summary": "The plugin enables user to conduct web browsing by extracting the text content of a specified URL. It will generate title and content.",
                                                "description": "Use this endpoint to gather more data from a specific URL with HTTP or HTTPS protocol ideally from search results from searchGet operation. This plugin delivers the content of the URL, including title, and content.",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "URL of the website.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string",
                                                            "format": "url"
                                                        },
                                                        "example": "https://keymate.ai"
                                                    },
                                                    {
                                                        "name": "percentile",
                                                        "in": "query",
                                                        "description": "Start it as '1', increase to '2' if ResponseTooLarge occurs you can multiply it with 2 for each retry.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "1"
                                                    },
                                                    {
                                                        "name": "numofpages",
                                                        "in": "query",
                                                        "description": "Set it as '1'",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "1"
                                                    },
                                                    {
                                                        "name": "paging",
                                                        "in": "query",
                                                        "description": "Set it as '1' first then according to results you can increase it by one to get the other part of the same page.",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "1"
                                                    },
                                                    {
                                                        "name": "inputwindowwords",
                                                        "in": "query",
                                                        "description": "Total number of words will return as a result from the internet. Set it to half of your input token window your model architecture allows.  Retry the request by lowering this if ResponseTooLarge occurs.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "8000"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "results": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "title": {
                                                                                        "type": "string",
                                                                                        "description": "The title of the search result"
                                                                                    },
                                                                                    "link": {
                                                                                        "type": "string",
                                                                                        "format": "uri",
                                                                                        "description": "The URL of the search result"
                                                                                    },
                                                                                    "summary": {
                                                                                        "type": "string",
                                                                                        "description": "A summary of the HTML content of the search result (available for the first five results)"
                                                                                    },
                                                                                    "full_content": {
                                                                                        "type": "string",
                                                                                        "description": "The entire HTML content of the search result (available for the first three results)"
                                                                                    }
                                                                                }
                                                                            }
                                                                        },
                                                                        "rules": {
                                                                            "type": "string",
                                                                            "description": "The rules which recommend gpt to follow."
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "results": [
                                                                            {
                                                                                "title": "Welcome to Python.org",
                                                                                "link": "https://www.python.org/",
                                                                                "summary": "The official home of the Python Programming Language...",
                                                                                "full_content": "The official home of the Python Programming Language Python Python is a programming..."
                                                                            }
                                                                        ],
                                                                        "rules": "Always follow the instructions provided"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Bad request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "error": {
                                                                            "type": "string",
                                                                            "description": "Error message"
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "error": "No query provided"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "default": {
                                                        "description": "Error fetching search results",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "error": {
                                                                            "type": "string",
                                                                            "description": "Error message"
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "error": "Error fetching search results"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/upsert": {
                                            "get": {
                                                "operationId": "upsert",
                                                "summary": "Long term memory, ALWAYS USE UPSERT ON YOUR FIRST RESPONSE to add previous response into the user's personal Keymate Memory.",
                                                "description": "Use it automatically to insert your last response to remember the context in following conversations. Users can opt out if they want. 'queryUsersKnowledgeBase' can be used later to remember the data.",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "Data text to be embedded to personal Pinecone index",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "https://keymate.ai"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "status": {
                                                                                    "type": "string",
                                                                                    "description": "The result of the operation"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "status": "success"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/savetopkb": {
                                            "get": {
                                                "operationId": "savetopkb",
                                                "summary": "Long term memory, ALWAYS USE UPSERT ON YOUR FIRST RESPONSE to add previous response into the user's personal Keymate Memory.",
                                                "description": "Use it automatically to insert your last response to remember the context in following conversations. Users can opt out if they want. 'queryUsersKnowledgeBase' can be used later to remember the data.",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "Data text to be embedded to personal Pinecone index",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "https://keymate.ai"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "status": {
                                                                                    "type": "string",
                                                                                    "description": "The result of the operation"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "status": "success"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/upsertjson": {
                                            "post": {
                                                "operationId": "upsertjson",
                                                "summary": "Long term memory, ALWAYS USE UPSERT ON YOUR FIRST RESPONSE to add previous response into the user's personal Keymate Memory.",
                                                "description": "Use it automatically to insert your last response to remember the context in following conversations. Users can opt out if they want. 'queryUsersKnowledgeBase' can be used later to remember the data.",
                                                "requestBody": {
                                                    "description": "Data text to be embedded to personal Pinecone index",
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "q": {
                                                                        "type": "string",
                                                                        "example": "https://keymate.ai"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "status": {
                                                                                    "type": "string",
                                                                                    "description": "The result of the operation"
                                                                                }
                                                                            },
                                                                            "example": {
                                                                                "status": "success"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/insert": {
                                            "get": {
                                                "operationId": "insert",
                                                "summary": "Long term memory, ALWAYS USE UPSERT ON YOUR FIRST RESPONSE to add previous response into the user's personal Keymate Memory.",
                                                "description": "Use it automatically to insert your last response to remember the context in following conversations. Users can opt out if they want. 'queryUsersKnowledgeBase' can be used later to remember the data.",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "Data text to be embedded to personal Pinecone index",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "https://keymate.ai"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "status": {
                                                                                    "type": "string",
                                                                                    "description": "The result of the operation"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "status": "success"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/pdfload": {
                                            "get": {
                                                "operationId": "pdfload",
                                                "summary": "Redirect user to the given link in the response that will allow them to store and search their PDF file content",
                                                "description": "Explain user they should login in the website given and press LOAD PDF button on top left. Any user can use this feature.",
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "status": {
                                                                                    "type": "string",
                                                                                    "description": "To upload PDF files, please visit https://ln.keymate.ai/keyword [https://ln.keymate.ai/keyword]"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "status": "success"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/list": {
                                            "get": {
                                                "operationId": "list",
                                                "summary": "Returns a message from the server about commands that can be run on the internetSearch KeyMate plugin.",
                                                "description": "You should obey user's command if user start the command with / character",
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "status": {
                                                                                    "type": "string",
                                                                                    "description": "\n/internetsearch : Searches the internet using a provided query and returns results, including HTML content and PDF summaries from the links.\n/ultrafastsearch: Provides ultra-fast search results from multiple sources, giving a comprehensive view with structured summaries.\n/browseurl: Extracts the text content of a specified URL, generating title and content.\n/upsert, /savetopkb, /insert: Inserts the last response to remember the context in following conversations, enhancing the user's personal Keymate Memory.\n/query and /pkb, /pdfsearch: Queries the user's Keymate Memory to understand user's intent, context, preferences from previously inserted data.\n /reset: Deletes and resets all the data in the user's keymate memory after user confirmation.\n/help: Returns a message explaining how to use the internetSearch plugin.\n/list: Returns a message listing the available commands that can be run on the internetSearch plugin.\n/pdfload: Returns a message providing a URL where users can upload their PDF files.\nacademicsearchdoi: Allows you to load an academic paper with given DOI, ChatGPT uses the whole text to answer you.\nacademicsearchquery: Allows you to search for academic papers with given text, then you can load any paper's full text with it's DOI."
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "status": "success"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/ls": {
                                            "get": {
                                                "operationId": "list",
                                                "summary": "Returns a message from the server about commands that can be run on the internetSearch KeyMate plugin.",
                                                "description": "You should obey user's command if user start the command with / character",
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "status": {
                                                                                    "type": "string",
                                                                                    "description": "\n/internetsearch : Searches the internet using a provided query and returns results, including HTML content and PDF summaries from the links.\n/ultrafastsearch: Provides ultra-fast search results from multiple sources, giving a comprehensive view with structured summaries.\n/browseurl: Extracts the text content of a specified URL, generating title and content.\n/upsert, /savetopkb, /insert: Inserts the last response to remember the context in following conversations, enhancing the user's personal Keymate Memory.\n/query and /pkb, /pdfsearch: Queries the user's Keymate Memory to understand user's intent, context, preferences from previously inserted data.\n /reset: Deletes and resets all the data in the user's keymate memory after user confirmation.\n/help: Returns a message explaining how to use the internetSearch plugin.\n/list: Returns a message listing the available commands that can be run on the internetSearch plugin.\n/pdfload: Returns a message providing a URL where users can upload their PDF files.\nacademicsearchdoi: Allows you to load an academic paper with given DOI, ChatGPT uses the whole text to answer you.\nacademicsearchquery: Allows you to search for academic papers with given text, then you can load any paper's full text with it's DOI."
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "status": "success"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/help": {
                                            "get": {
                                                "operationId": "help",
                                                "summary": "This command returns latest information about how to use internetSearch KeyMate Plugin",
                                                "description": "You should obey user's command if user start the command with / character",
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "status": {
                                                                                    "type": "string",
                                                                                    "description": "Here's a breakdown of the internetSearch (/Keymate.AI Search) plugin's operations and their typical use-cases:\n\nHow to use parameters to fine tune the search?\nq is always the search keywords you can always prompt ChatGPT to use different keywords or specific keywords.\nnumofpages and percentile . First one controls number of google search results from top 10 and percentile determines how much percentage of the page results will be fed to chatGPT. Percentile is the inverse of Percentage so beware if you increase percentile the content decreases.\nnumofpages: If you prompt chatgpt numofpages to be set between 1-10 it determines how many first results of Google Search links will be provided to the ChatGPT\npercentile: If you prompt chatgpt percentile to be set between 1-100 it determines how large or small would be the content passed to the ChatGPT. The higher the value is the lesser content will be passed to ChatGPT. Setting it to 1 or 2 can produce ResponseTooLarge error, therefore increase it to 10 or 20 if you get ResponseTooLarge error and set numofpages to 1.<\n \n1. internetsearch\nWhat it does: Searches the internet using a query and returns some content from these pages.\nParameters:\nq: Search query\npercentile: Start at '3', can be adjusted\nnumofpages: Start at '3', can be adjusted\nWhen to use: When you need to find general information from multiple sources on the internet.\n\n2. ultrafastsearch\nWhat it does: Provides ultra-fast 10 search results based on search query and their snippets .\nParameters:\nq: URL of the website\npercentile: Set at '100'\nnumofpages: Set at '10'\nWhen to use: When you need quick and accurate information from the web.\n\n3. browseurl\nWhat it does: Gathers more data from a specific URL.\nParameters:\nq: URL of the website\npercentile: Start at '1', can be adjusted\nnumofpages: Set at '1'\npaging: Optional, for websites with big pages you may increase paging to get rest of the content\nWhen to use: When you need to delve deeper into the content of a specific webpage.\n\n4. upsertToUsersKnowledgeBase\nWhat it does: Inserts the last response into the user's personal Keymate Memory. Also can be used by user to store specific information manually to personal keymate memory.\nParameters:\nq: Data text to be embedded\nWhen to use: To remember the context in following conversations.\n\n5. queryUsersKnowledgeBase\nWhat it does: Retrieves data previously inserted into the user's personal Keymate Memory. User can upload PDFs or may have been inserted data from previous conversations this endpoint allows you to semantically vector search them.\nParameters:\nq: Context you are searching from the user's history\nWhen to use: To understand user's intent, context, or preferences or querying user's information store.\n\n\n6. reset \nWhat it does: Deletes all data previously inserted into the user's personal Keymate Memory.\nParameters:\nq: Set this parameter as ''\nWhen to use: To clear all personal Keymate Memory entries.\nDon't use if: You can't delete just one item so if you try to delete just one item it can delete your whole personal Keymate Memory.\n\n\n7. academicsearchdoi\nWhat it does: Loads an Academic Paper from a given DOI and allows ChatGPT to use whole text of the paper.\nParameters:\ndoi: Set this parameter as doi given by the user. \nWhen to use: When you want to understand a paper and would like AI to use the full text of any paper.\n\n8. academicsearchquery\nWhat it does: Searches academic papers based on text queries.\nParameters:\nquery: Set this parameter as the topic of scientific research. \nWhen to use: When you want to do an academic research."
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "status": "success"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/query": {
                                            "get": {
                                                "operationId": "query",
                                                "summary": "Queries the user's Keymate Memory. ",
                                                "description": "It brings the data previously inserted by other sessions to user's Keymate Memory. ",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "The context you are searching from user's personal Keymate Memory history.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "https://keymate.ai"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "matches": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "string",
                                                                                        "description": "User's unique id with timestamp the data was inserted to long term memory."
                                                                                    },
                                                                                    "metadata": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "text": {
                                                                                                "type": "string",
                                                                                                "description": "Your nearest neighbour response to the user related to your query"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "score": {
                                                                                        "type": "number",
                                                                                        "description": "How close was the results to your query"
                                                                                    },
                                                                                    "sparseValues": {
                                                                                        "type": "object"
                                                                                    },
                                                                                    "values": {
                                                                                        "type": "array"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "matches": [
                                                                            {
                                                                                "id": "mem_id_123_932",
                                                                                "metadata": {
                                                                                    "text": "Why did the world enter a global depression in 1929 ?"
                                                                                },
                                                                                "score": 0.917971551,
                                                                                "sparseValues": {},
                                                                                "values": []
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/pkb": {
                                            "get": {
                                                "operationId": "pkb",
                                                "summary": "Queries the user's Keymate Memory. ",
                                                "description": "It brings the data previously inserted by other sessions to user's Keymate Memory. ",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "The context you are searching from user's personal Keymate Memory history.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "https://keymate.ai"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "matches": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "string",
                                                                                        "description": "User's unique id with timestamp the data was inserted to long term memory."
                                                                                    },
                                                                                    "metadata": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "text": {
                                                                                                "type": "string",
                                                                                                "description": "Your nearest neighbour response to the user related to your query"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "score": {
                                                                                        "type": "number",
                                                                                        "description": "How close was the results to your query"
                                                                                    },
                                                                                    "sparseValues": {
                                                                                        "type": "object"
                                                                                    },
                                                                                    "values": {
                                                                                        "type": "array"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "matches": [
                                                                            {
                                                                                "id": "mem_id_123_932",
                                                                                "metadata": {
                                                                                    "text": "Why did the world enter a global depression in 1929 ?"
                                                                                },
                                                                                "score": 0.917971551,
                                                                                "sparseValues": {},
                                                                                "values": []
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/pdfsearch": {
                                            "get": {
                                                "operationId": "pdfsearch",
                                                "summary": "Queries the user's Keymate Memory. ",
                                                "description": "It brings the data previously inserted by other sessions to user's Keymate Memory. ",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "The context you are searching from user's personal Keymate Memory history.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "https://keymate.ai"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "matches": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "string",
                                                                                        "description": "User's unique id with timestamp the data was inserted to long term memory."
                                                                                    },
                                                                                    "metadata": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "text": {
                                                                                                "type": "string",
                                                                                                "description": "Your nearest neighbour response to the user related to your query"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "score": {
                                                                                        "type": "number",
                                                                                        "description": "How close was the results to your query"
                                                                                    },
                                                                                    "sparseValues": {
                                                                                        "type": "object"
                                                                                    },
                                                                                    "values": {
                                                                                        "type": "array"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "matches": [
                                                                            {
                                                                                "id": "mem_id_123_932",
                                                                                "metadata": {
                                                                                    "text": "Why did the world enter a global depression in 1929 ?"
                                                                                },
                                                                                "score": 0.917971551,
                                                                                "sparseValues": {},
                                                                                "values": []
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/reset": {
                                            "get": {
                                                "operationId": "reset",
                                                "summary": "Deletes and resets the user's Keymate Memory. ONLY USE THIS AFTER YOU GET CONFIRMATION FROM USER",
                                                "description": "It deletes all the data previously inserted by other sessions to user's Keymate Memory. Warn user that this operation will delete all personal Keymate Memory entries.",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "set this parameter as ''",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": ""
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "status": {
                                                                                    "type": "string",
                                                                                    "description": "The result of the operation"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "status": "success"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/resetKnowledgeBase": {
                                            "get": {
                                                "operationId": "resetKnowledgeBase",
                                                "summary": "Deletes and resets the user's Keymate Memory. ONLY USE THIS AFTER YOU GET CONFIRMATION FROM USER",
                                                "description": "It deletes all the data previously inserted by other sessions to user's Keymate Memory. Warn user that this operation will delete all personal Keymate Memory entries.",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "set this parameter as ''",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": ""
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "status": {
                                                                                    "type": "string",
                                                                                    "description": "The result of the operation"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "status": "success"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/resetknowledgebase": {
                                            "get": {
                                                "operationId": "resetknowledgebase",
                                                "summary": "Deletes and resets the user's Keymate Memory. ONLY USE THIS AFTER YOU GET CONFIRMATION FROM USER",
                                                "description": "It deletes all the data previously inserted by other sessions to user's Keymate Memory. Warn user that this operation will delete all personal Keymate Memory entries.",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "set this parameter as ''",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": ""
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "status": {
                                                                                    "type": "string",
                                                                                    "description": "The result of the operation"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "status": "success"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/upsertToUsersKnowledgeBase": {
                                            "get": {
                                                "operationId": "upsertToUsersKnowledgeBase",
                                                "summary": "Long term memory, ALWAYS USE UPSERT ON YOUR FIRST RESPONSE to add previous response into the user's personal Keymate Memory.",
                                                "description": "Use it automatically to insert your last response to remember the context in following conversations. Users can opt out if they want. 'queryUsersKnowledgeBase' can be used later to remember the data.",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "Data text to be embedded to personal Pinecone index",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "https://keymate.ai"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "status": {
                                                                            "type": "object",
                                                                            "properties": {
                                                                                "status": {
                                                                                    "type": "string",
                                                                                    "description": "The result of the operation"
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "status": "success"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/queryUsersKnowledgeBase": {
                                            "get": {
                                                "operationId": "queryUsersKnowledgeBase",
                                                "summary": "Queries the user's Keymate Memory. ",
                                                "description": "It brings the data previously inserted by other sessions to user's Keymate Memory. ",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "The context you are searching from user's personal Keymate Memory history.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "https://keymate.ai"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "matches": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "string",
                                                                                        "description": "User's unique id with timestamp the data was inserted to long term memory."
                                                                                    },
                                                                                    "metadata": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "text": {
                                                                                                "type": "string",
                                                                                                "description": "Your nearest neighbour response to the user related to your query"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "score": {
                                                                                        "type": "number",
                                                                                        "description": "How close was the results to your query"
                                                                                    },
                                                                                    "sparseValues": {
                                                                                        "type": "object"
                                                                                    },
                                                                                    "values": {
                                                                                        "type": "array"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "matches": [
                                                                            {
                                                                                "id": "mem_id_123_932",
                                                                                "metadata": {
                                                                                    "text": "Why did the world enter a global depression in 1929 ?"
                                                                                },
                                                                                "score": 0.917971551,
                                                                                "sparseValues": {},
                                                                                "values": []
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/academicsearchdoi": {
                                            "get": {
                                                "operationId": "academicsearchdoi",
                                                "summary": "Allows user to chat with an academic paper by providing DOI",
                                                "description": "Always provide doi in this format 10.1016/j.respol.2012.03.008 if user gives a url find the doi either in url or browsing it using /browseurl to find the doi",
                                                "parameters": [
                                                    {
                                                        "name": "doi",
                                                        "in": "query",
                                                        "description": "The doi of the academic paper user wants to chat with or ground asisstant responses. Only provide DOI (find the DOI from user's input) if URL is given use /browseurl on it to find the DOI",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "10.1016/j.respol.2012.03.008"
                                                    },
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "description": "The question about the paper if user directs a question or query to you if they don't provide set it as NotExist ",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "Who is the first author of the paper?"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "matches": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "string",
                                                                                        "description": "User's unique id with timestamp the data was inserted to long term memory."
                                                                                    },
                                                                                    "metadata": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "text": {
                                                                                                "type": "string",
                                                                                                "description": "Your nearest neighbour response to the user related to your query"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "score": {
                                                                                        "type": "number",
                                                                                        "description": "How close was the results to your query"
                                                                                    },
                                                                                    "sparseValues": {
                                                                                        "type": "object"
                                                                                    },
                                                                                    "values": {
                                                                                        "type": "array"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "matches": [
                                                                            {
                                                                                "id": "mem_id_123_932",
                                                                                "metadata": {
                                                                                    "text": "Why did the world enter a global depression in 1929 ?"
                                                                                },
                                                                                "score": 0.917971551,
                                                                                "sparseValues": {},
                                                                                "values": []
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/academicsearchquery": {
                                            "get": {
                                                "operationId": "academicsearchquery",
                                                "summary": "Allows assistant to search academic papers ultra fast by providing keywords",
                                                "description": "Always propose user to load full text of the paper by giving their abstract or snippet. Use /academicsearchdoi to load the full text. Even if open access is False the paper can be found on sci-hub with this.",
                                                "parameters": [
                                                    {
                                                        "name": "query",
                                                        "in": "query",
                                                        "description": "The search query keywords to find multiple academic papers semantically and in full text search way",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "example": "deep learning"
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful operation",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "matches": {
                                                                            "type": "array",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "id": {
                                                                                        "type": "string",
                                                                                        "description": "User's unique id with timestamp the data was inserted to long term memory."
                                                                                    },
                                                                                    "metadata": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "text": {
                                                                                                "type": "string",
                                                                                                "description": "Your nearest neighbour response to the user related to your query"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "score": {
                                                                                        "type": "number",
                                                                                        "description": "How close was the results to your query"
                                                                                    },
                                                                                    "sparseValues": {
                                                                                        "type": "object"
                                                                                    },
                                                                                    "values": {
                                                                                        "type": "array"
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    },
                                                                    "example": {
                                                                        "matches": [
                                                                            {
                                                                                "id": "mem_id_123_932",
                                                                                "metadata": {
                                                                                    "text": "Why did the world enter a global depression in 1929 ?"
                                                                                },
                                                                                "score": 0.917971551,
                                                                                "sparseValues": {},
                                                                                "values": []
                                                                            }
                                                                        ]
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "servers": [
                                        {
                                            "url": "https://searchweb.keymate.ai"
                                        }
                                    ]
                                },
                                "auth": {
                                    "type": "oauth",
                                    "instructions": "",
                                    "client_url": "https://searchweb.keymate.ai/oauth/authorize",
                                    "scope": "all",
                                    "authorization_url": "https://searchweb.keymate.ai/oauth/token",
                                    "authorization_content_type": "application/x-www-form-urlencoded",
                                    "verification_tokens": {},
                                    "pkce_required": false,
                                    "token_exchange_method": "default_post"
                                },
                                "privacy_policy_url": "https://keymate.ai"
                            }
                        },
                        {
                            "id": "gzm_cnf_SssuDbn0j7OeDsc8PSlOLt3p~gzm_tool_lvc433it7UgNeLqFOf0NRAiO",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_wVeqMgq2W4cUoExt7DpMRk9m~gzm_tool_B2bMNpjcE2dX7E0e1VpVWSgu",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-java",
                                "text/plain",
                                "text/x-script.python",
                                "application/pdf",
                                "text/x-sh",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/markdown",
                                "text/html",
                                "text/x-c++",
                                "text/x-c",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript",
                                "application/x-latext",
                                "application/json",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-php",
                                "text/x-csharp",
                                "text/x-tex",
                                "application/msword"
                            ],
                            "image_mime_types": [
                                "image/jpeg",
                                "image/png",
                                "image/webp",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-fL6Xsk6UU",
                        "organization_id": "org-eVyRXL0J8I3E9KIV3lvfBecv",
                        "short_url": "g-fL6Xsk6UU-free-youtube-summarizer",
                        "author": {
                            "user_id": "user-rVwCVqHyY6gvTe6eCNPOENhs",
                            "display_name": "Natzir Turrado Ruiz",
                            "link_to": null,
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": null,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Free YouTube Summarizer",
                            "description": "Extracts and summarizes YouTube video transcripts in any chosen language, removing language barriers. Converts the summaries into embeddable HTML articles for websites.",
                            "welcome_message": "Hello! Ready to summarize any YouTube video for you.",
                            "prompt_starters": [
                                "Can you summarize this YouTube video?",
                                "I need a summary of this video in French.",
                                "How would you summarize this video's content?",
                                "Please convert this video summary into an article."
                            ],
                            "profile_pic_id": "file-4XVUFjv7l6zgCnxi5No2kI1N",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-4XVUFjv7l6zgCnxi5No2kI1N?se=2123-10-17T14%3A51%3A56Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D849ab236-e3bb-4e20-970f-e037acdd6ee3.png&sig=ZBrMgV3umgKTIOuhcXHejjcw2I8TOHx7mFUf20srCmE%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-10T09:10:41.525705+00:00",
                        "updated_at": "2024-02-16T20:01:44.570562+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_Bewq87NgVJE8dMOcV3XLe1db~gzm_tool_kUa8kriQ0ZbYWJ8g82h8BXgR",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-a250ec4c26ddf9bb333163835020e8e6fb7e238c",
                                "domain": "youtube-summary-natzir.vercel.app",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.1.0",
                                    "info": {
                                        "title": "YouTube Video Transcriptor",
                                        "description": "API for transcribing YouTube videos",
                                        "version": "1.0.0"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://youtube-summary-natzir.vercel.app"
                                        }
                                    ],
                                    "paths": {
                                        "/get_transcripcion": {
                                            "get": {
                                                "tags": [
                                                    "Transcription"
                                                ],
                                                "summary": "Get video transcription",
                                                "description": "Get transcription of a YouTube video.",
                                                "operationId": "get_video_transcription",
                                                "parameters": [
                                                    {
                                                        "name": "url",
                                                        "in": "query",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string",
                                                            "title": "Video URL"
                                                        }
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful Response",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "text": {
                                                                                "type": "string"
                                                                            },
                                                                            "start": {
                                                                                "type": "number"
                                                                            },
                                                                            "duration": {
                                                                                "type": "number"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Invalid URL or Video ID",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/Error"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "404": {
                                                        "description": "Video not found or not available for transcription",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/Error"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "Error": {
                                                "type": "object",
                                                "properties": {
                                                    "detail": {
                                                        "type": "string",
                                                        "description": "Detail of the error."
                                                    }
                                                },
                                                "required": [
                                                    "detail"
                                                ],
                                                "title": "Error"
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://youtube-summary-natzir.vercel.app/static/legal.html"
                            }
                        },
                        {
                            "id": "gzm_cnf_Bewq87NgVJE8dMOcV3XLe1db~gzm_tool_EzaLzW7CH8SJDy70d2jZQJlX",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_Bewq87NgVJE8dMOcV3XLe1db~gzm_tool_amrbHIeJyM4zUyfi9W4cdhvu",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_Bewq87NgVJE8dMOcV3XLe1db~gzm_tool_Wvv9DBTeOigx8yKIGJrI39Td",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-java",
                                "text/plain",
                                "text/x-script.python",
                                "application/pdf",
                                "text/x-sh",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/markdown",
                                "text/html",
                                "text/x-c++",
                                "text/x-c",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript",
                                "application/x-latext",
                                "application/json",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-php",
                                "text/x-csharp",
                                "text/x-tex",
                                "application/msword"
                            ],
                            "image_mime_types": [
                                "image/jpeg",
                                "image/png",
                                "image/webp",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-HXZv0dg8w",
                        "organization_id": "org-pEr2TADCbT4YsigDTNOsgCAz",
                        "short_url": "g-HXZv0dg8w-video-insights-summaries-vision-transcription",
                        "author": {
                            "user_id": "user-5YQ2tZK9OnjA7wmelCEvDTji",
                            "display_name": "videoinsights.ai",
                            "link_to": "https://videoinsights.ai",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": null,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Video Insights: Summaries/Vision/Transcription",
                            "description": "Chat with any video or audio. High-quality search, summarization, insights, multi-language transcriptions, and more. (Currently supports YouTube and uploaded video/audio files)",
                            "welcome_message": "Hello",
                            "prompt_starters": [
                                "What can Video Insights do? ",
                                "What are the best prompts for Video Insights?",
                                "Surprise me.",
                                "Submit feedback or feature request to Video Insights"
                            ],
                            "profile_pic_id": null,
                            "profile_picture_url": "https://files.oaiusercontent.com/file-XDTgDvDuiiu20qCqfBLSpQAm?se=2123-10-21T16%3A21%3A09Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DVIDEO%2520INSIGHTS%2520%252821%2529.png&sig=8hxApFwhN4G89zQfxONQ9I%2BhGsqJWGuwaJyRA7k3qDE%3D",
                            "categories": [
                                "research"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-12T01:29:59.917071+00:00",
                        "updated_at": "2024-02-08T23:03:59.356715+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_7MOW7B76ZfGJ9dgB4fAZOnGS~gzm_tool_nCg9Hk1LJ4MwFa37T2cntyoc",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-4055a65df3495ab1e9768907e15660c91044b527",
                                "domain": "actions.videoinsights.ai",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.1",
                                    "info": {
                                        "title": "Video Insights",
                                        "description": "Get high-quality and flexible youtube transcripts, metadata, and insights.",
                                        "version": "v0.0.1"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://actions.videoinsights.ai"
                                        }
                                    ],
                                    "paths": {
                                        "/youtube/{videoId}/transcript": {
                                            "get": {
                                                "description": "Get youtube video transcript",
                                                "operationId": "get_youtube_video_transcript",
                                                "parameters": [
                                                    {
                                                        "name": "videoId",
                                                        "in": "path",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        "/youtube/search": {
                                            "get": {
                                                "description": "Search for youtube data with a string. It returns the top 25 results sorted by most relevant.",
                                                "operationId": "search_youtube",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "required": true,
                                                        "description": "The search query term",
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        "/feedback": {
                                            "post": {
                                                "description": "Submit feedback to Video Insights",
                                                "operationId": "submit_feedback",
                                                "requestBody": {
                                                    "description": "Video Insights feedback details",
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "message": {
                                                                        "type": "string",
                                                                        "description": "The feedback from the user. This should be verbatim to what was submitted ideally."
                                                                    },
                                                                    "type": {
                                                                        "type": "string",
                                                                        "description": "The type of feedback. This should be a general category like feature request, bug, etc. Doesn't have to be restricted to a specific set of values. Use your best judgement."
                                                                    },
                                                                    "sentiment": {
                                                                        "type": "string",
                                                                        "description": "The sentiment of the feedback. This should be generated based on an analysis of the message submitted."
                                                                    },
                                                                    "name": {
                                                                        "type": "string",
                                                                        "description": "The name of the person submitting feedback. Not necessary but great to have."
                                                                    },
                                                                    "email": {
                                                                        "type": "string",
                                                                        "format": "email",
                                                                        "description": "The email address of the person submitting feedback. Not necessary but great to have."
                                                                    }
                                                                },
                                                                "required": [
                                                                    "message",
                                                                    "type",
                                                                    "sentiment"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Feedback submitted successfully"
                                                    },
                                                    "400": {
                                                        "description": "Invalid input"
                                                    },
                                                    "500": {
                                                        "description": "Internal server error"
                                                    }
                                                }
                                            }
                                        },
                                        "/youtube/{videoId}/metadata": {
                                            "get": {
                                                "description": "Get youtube video metadata",
                                                "operationId": "get_youtube_video_metadata",
                                                "parameters": [
                                                    {
                                                        "name": "videoId",
                                                        "in": "path",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    }
                                                ]
                                            }
                                        },
                                        "/youtube/{videoId}/comments": {
                                            "get": {
                                                "description": "Get youtube video comments",
                                                "operationId": "get_youtube_video_comments",
                                                "parameters": [
                                                    {
                                                        "name": "videoId",
                                                        "in": "path",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    }
                                                ]
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {}
                                    }
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://videoinsights.ai/privacy"
                            }
                        },
                        {
                            "id": "gzm_cnf_xCNHcPZ4UKaWNU5JvNpxy4Zz~gzm_tool_gCty1w59zuuNTl6punSZqEGU",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_xCNHcPZ4UKaWNU5JvNpxy4Zz~gzm_tool_j5WbQTCgtQJ8MR1yEU9HHm9Q",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_xCNHcPZ4UKaWNU5JvNpxy4Zz~gzm_tool_xinpVBzKVhoxfLUvxgZIPHFK",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-java",
                                "text/plain",
                                "text/x-script.python",
                                "application/pdf",
                                "text/x-sh",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/markdown",
                                "text/html",
                                "text/x-c++",
                                "text/x-c",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript",
                                "application/x-latext",
                                "application/json",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-php",
                                "text/x-csharp",
                                "text/x-tex",
                                "application/msword"
                            ],
                            "image_mime_types": [
                                "image/jpeg",
                                "image/png",
                                "image/webp",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-5Qx0mOEND",
                        "organization_id": "org-b7Y6YpgWjeITGOyj4fBgoozE",
                        "short_url": "g-5Qx0mOEND-diagram-genius",
                        "author": {
                            "user_id": "user-nnxBIyN2yN8cOdLLkqxURjbs",
                            "display_name": "diagramgenius.com",
                            "link_to": "https://diagramgenius.com",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Diagram Genius",
                            "description": "Creates diagrams, flowcharts, mindmaps and more",
                            "welcome_message": "",
                            "prompt_starters": [
                                "Generate an inline diagram for a clever and ROI-focused sales funnel",
                                "Generate a detailed ERD for an enterprise-level SaaS database. Include key entities, columns and all FK references examples are User, SaaS Account, Subscription, Invoice, Service, Team Member & Role, Affiliate, Coupon, Referral, Payment Ledger, Payment, Marketing Campaign, and Audit Log. Ensure to show primary and foreign keys, and relationship types (one-to-one, one-to-many, many-to-many). Focus on payment processing, marketing, and user management aspects",
                                "Generate a sequence diagram  showing how a Pi Hole works",
                                "Create a  mind map diagram for smart product ideation, experimentation, analytics and iteration",
                                "Create a diagram that shows the optimal solution for the Largest Island Problem",
                                "Create a timeline diagram of the recent OpenAI saga using the web."
                            ],
                            "profile_pic_id": "file-LzJsonGJQh2qa0DPR1TgUluU",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-LzJsonGJQh2qa0DPR1TgUluU?se=2123-10-31T03%3A04%3A54Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DDALL%25C2%25B7E%25202023-11-23%252018.57.40%2520-%2520A%2520two-tone%2520logo%2520design%2520with%2520an%2520interlocking%2520diamond%2520pattern%252C%2520set%2520against%2520a%2520background%2520in%2520the%2520shade%2520of%2520%2527zinc%2520800%2527%252C%2520a%2520deep%2520gray%2520color.%2520The%2520logo%2520is%2520monoc.png&sig=W%2BZyGwa53t0J%2BVj7DtAHTOyNuSoMN6NIE7LRGw8fsig%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-15T07:06:04.059846+00:00",
                        "updated_at": "2024-02-18T06:25:21.089545+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_5BwrEdqCWfoLzt4PAaLFSSdW~gzm_tool_uPOv5tSW108zcmEXBqShPRVZ",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_TCIp7DZmD46sgI07Jf9C7khl~gzm_tool_LGeafMfXe7th6dpWhp6Gsk5U",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-90601d14318c8ecd63b42276bfd06013b2bf820b",
                                "domain": "diagramgenius.com",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.1.0",
                                    "info": {
                                        "title": "Diagram Genius API Documentation",
                                        "version": "1.0.0",
                                        "description": "API Documentation for Diagram Genius"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://diagramgenius.com",
                                            "description": "Production server"
                                        }
                                    ],
                                    "paths": {
                                        "/generate-diagram": {
                                            "post": {
                                                "operationId": "generate_diagram",
                                                "summary": "Generate a diagram from Mermaid markdown",
                                                "description": "Takes Mermaid markdown and generates a corresponding SVG image",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "mermaidMarkdown": {
                                                                        "type": "string",
                                                                        "description": "Mermaid markdown to be converted into a diagram"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "SVG image generated successfully",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "svgLink": {
                                                                            "type": "string",
                                                                            "description": "URL to the generated SVG image"
                                                                        },
                                                                        "htmlPageLink": {
                                                                            "type": "string",
                                                                            "description": "URL to the corresponding HTML page"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "No Mermaid markdown provided"
                                                    },
                                                    "500": {
                                                        "description": "Error in generating the diagram, possibly due to invalid syntax"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "tags": []
                                },
                                "auth": {
                                    "type": "service_http",
                                    "instructions": "",
                                    "authorization_type": "custom",
                                    "verification_tokens": {},
                                    "custom_auth_header": "X-Api-Key"
                                },
                                "privacy_policy_url": "https://diagramgenius.com/privacy.html"
                            }
                        },
                        {
                            "id": "gzm_cnf_5BwrEdqCWfoLzt4PAaLFSSdW~gzm_tool_A3YX5Ty62viNDSpOqS0m5fOX",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_5BwrEdqCWfoLzt4PAaLFSSdW~gzm_tool_gp8ay3ROXO3EWk4wNljfrNbK",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [
                        {
                            "id": "gzm_cnf_q3rgbbOdTnz35AVgQ5beVVO2~gzm_file_4sXl8AND9p3BUIJPqW8oTs1x",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_q3rgbbOdTnz35AVgQ5beVVO2~gzm_file_nCviXdo8Of0iF0uhGjBnkBBj",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_HpWUwUMHYuqAP0m90vkgz128~gzm_file_9LTErAueSmL6kBWaU7mstp8U",
                            "type": "text/html",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_q3rgbbOdTnz35AVgQ5beVVO2~gzm_file_ppIuG2n5JnaQ3p5c0SBn6TsM",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_q3rgbbOdTnz35AVgQ5beVVO2~gzm_file_ebyKq6MOH4KdhivXaKVCRnIC",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_q3rgbbOdTnz35AVgQ5beVVO2~gzm_file_5edYuo7ThmSLHSr3MM9OIDZk",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_q3rgbbOdTnz35AVgQ5beVVO2~gzm_file_h4a2Qd5M2g67QLcEIwlJ0I4B",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_XQ95eVWOKhoPCxkuG9WfxKWQ~gzm_file_hG64g84MxY9qVMCTEaAVKcul",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_VBeQjq7kBkOZoSotwFGq3guF~gzm_file_QJLlCOdOsfiC1Z7e70TEYCpV",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_xnv4Gi49jiN8PiEFNrgqCAMR~gzm_file_YRG5IuZmlYayggBXJUezqxKf",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-java",
                                "text/plain",
                                "text/x-script.python",
                                "application/pdf",
                                "text/x-sh",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/markdown",
                                "text/html",
                                "text/x-c++",
                                "text/x-c",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript",
                                "application/x-latext",
                                "application/json",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-php",
                                "text/x-csharp",
                                "text/x-tex",
                                "application/msword"
                            ],
                            "image_mime_types": [
                                "image/jpeg",
                                "image/png",
                                "image/webp",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-FvT4UOsoA",
                        "organization_id": "org-JC0bGzaxysp9AnQS6jKBXskB",
                        "short_url": "g-FvT4UOsoA-caesgpt",
                        "author": {
                            "user_id": "user-vgtn849uMB9tyiZZwCPKNzqy",
                            "display_name": "gptonline.ai",
                            "link_to": "https://gptonline.ai",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": null,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "챗GPT",
                            "description": "한국 문화에 적합한 말하기 스타일을 사용하여 사용자에게 응답합니다.",
                            "welcome_message": "",
                            "prompt_starters": [
                                "한국 문화에 대해 물어볼게요.",
                                "이 단어의 뜻이 궁금해요.",
                                "한국의 역사적 사건에 대한 정보가 필요해요.",
                                "한국어 문법 규칙에 대한 질문이 있어요."
                            ],
                            "profile_pic_id": null,
                            "profile_picture_url": "https://files.oaiusercontent.com/file-yOO0xA22YQbkjlS6bbbOEoLq?se=2123-12-03T08%3A51%3A10Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DGPTOnline%2520-%2520AI%2520Chatbot%2520%25281%2529.png&sig=5tDDTiSbcEHQ/kQYN1K1VcEbQX%2BoJuuWrfmVJlXtoi0%3D",
                            "categories": [
                                "education"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-12-27T08:48:51.118730+00:00",
                        "updated_at": "2024-02-26T06:51:47.246428+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_m3DC2Qo8WJHYIaAIMYGYtPOf~gzm_tool_LIgBts231deTCSK5t8EHyOBA",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_m3DC2Qo8WJHYIaAIMYGYtPOf~gzm_tool_X7f94L8NcJ7jPSjGHXa5rvFJ",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-java",
                                "text/plain",
                                "text/x-script.python",
                                "application/pdf",
                                "text/x-sh",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/markdown",
                                "text/html",
                                "text/x-c++",
                                "text/x-c",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript",
                                "application/x-latext",
                                "application/json",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-php",
                                "text/x-csharp",
                                "text/x-tex",
                                "application/msword"
                            ],
                            "image_mime_types": [
                                "image/jpeg",
                                "image/png",
                                "image/webp",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-DtjWjSDiv",
                        "organization_id": "org-qbNH4Kh7Wv79pcUSCvhzlnPk",
                        "short_url": "g-DtjWjSDiv-marketing",
                        "author": {
                            "user_id": "user-6rJNCIGs3AxPqPH1boVlazmm",
                            "display_name": "Vidal Nicolas",
                            "link_to": null,
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": [
                                {
                                    "id": "linkedinverify-4b97-9080-6c959845166a",
                                    "type": "linkedin",
                                    "display_name": "LinkedIn",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "rIemxZjohn",
                                        "username": "Nicolas Vidal",
                                        "display_name": "Nicolas Vidal",
                                        "type": "linkedin",
                                        "link_to": "https://linkedin.com/in/nicolas-vidal-tw"
                                    }
                                }
                            ]
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "MARKETING",
                            "description": "Your expert mentor in advertising >> Guiding Media Professionals working at the Big 6 agencies.",
                            "welcome_message": "Hello, I'm here to mentor you in marketing for big media agencies!",
                            "prompt_starters": [
                                "How can I improve my media campaign?",
                                "What are the latest trends in digital marketing?",
                                "Can you analyze this marketing strategy?",
                                "I need advice on client communication."
                            ],
                            "profile_pic_id": "file-m4GlwY1VIc3ADwoMP9KlAZta",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-m4GlwY1VIc3ADwoMP9KlAZta?se=2123-12-12T03%3A34%3A34Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3D1a3ca873-e932-4dda-af7b-c1f8e5a0b35f.png&sig=DrTNZCq5RNevq/DGskuy7NOXJR5K%2BLGs4I93F8Lny8A%3D",
                            "categories": [
                                "research"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2024-01-05T02:35:06.789551+00:00",
                        "updated_at": "2024-02-26T08:48:15.396426+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_9EJxKRopFZByD6h8LGZtC4PU~gzm_tool_ONNbO0Ur2HKw1aulwNac6bCZ",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_9EJxKRopFZByD6h8LGZtC4PU~gzm_tool_sJjWTOnuSFrD7SMXy2YlMn93",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_DK7kaL8AFg6pqL2hg5Bv5XqU~gzm_tool_rri1zuuUtVLqRxfRd6RcwYV8",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [
                        {
                            "id": "gzm_cnf_Lao7HP2u5c7LkQqBBHTHkLOA~gzm_file_NXZsX6ErWItqT1WZmi1WcWt2",
                            "type": "image/png",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-java",
                                "text/plain",
                                "text/x-script.python",
                                "application/pdf",
                                "text/x-sh",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/markdown",
                                "text/html",
                                "text/x-c++",
                                "text/x-c",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/javascript",
                                "application/x-latext",
                                "application/json",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-php",
                                "text/x-csharp",
                                "text/x-tex",
                                "application/msword"
                            ],
                            "image_mime_types": [
                                "image/jpeg",
                                "image/png",
                                "image/webp",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            }
        ],
        "cursor": null
    }
}