{
    "info": {
        "id": "productivity",
        "title": "Productivity",
        "description": "Increase your efficiency",
        "display_type": "ranked",
        "display_group": "Productivity",
        "locale": "en"
    },
    "list": {
        "items": [
            {
                "resource": {
                    "gizmo": {
                        "id": "g-Vklr0BddT",
                        "organization_id": "org-SYqj9TQFQ88iTqHixWNBlu2l",
                        "short_url": "g-Vklr0BddT-slide-maker-powerpoints-presentations",
                        "author": {
                            "user_id": "user-t0D9RBPCtvLGuZUnv2qKGobB",
                            "display_name": "aidocmaker.com",
                            "link_to": "https://aidocmaker.com",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Slide Maker: PowerPoints, Presentations",
                            "description": "Create engaging PowerPoint slides and presentations with Slide Maker GPT!",
                            "prompt_starters": [
                                "Legal presentation on current AI regulations in EU.",
                                "Board presentation for AI digital marketing strategy.",
                                "Sales presentation for NVIDIA H100 GPU chips.",
                                "Investment presentation on NVIDIA from 2010-2020."
                            ],
                            "profile_pic_id": "file-7wucSlKrcCoipKRoTaxydYsv",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-7wucSlKrcCoipKRoTaxydYsv?se=2123-10-18T01%3A57%3A11Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dlogo.png&sig=b8skgReALrhw4frzasMMf/5yY148%2B5pjmi9YtngLHkA%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-11T01:55:08.362247+00:00",
                        "updated_at": "2024-08-04T09:10:06.415217+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "uses_function_calls",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "yn46mkPKTNxiO9gZWUOPCrHQ",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-3cd5991795c9ff3913ae6a6032fa756a582c3861",
                                "domain": "gpt.slides.aidocmaker.com",
                                "raw_spec": null,
                                "json_schema": {
                                    "components": {
                                        "schemas": {
                                            "CreateDocumentIndirectlyWithGptRequestV2": {
                                                "properties": {
                                                    "language": {
                                                        "default": "en",
                                                        "description": "The two-digit ISO 639-1 code representing the expected human language for the document content.",
                                                        "title": "Language",
                                                        "type": "string"
                                                    },
                                                    "openaiFileIdRefs": {
                                                        "default": [],
                                                        "description": "List of files to use during document generation, such as images or PDF / DOCX / PPTX files for downstream GPT to use for writing document. Each object contains: `name` - name of the file; `id` - identifier for the file; `mime_type` - mime type of the file; `download_link` - the URL to fetch the file.",
                                                        "items": {},
                                                        "title": "Openaifileidrefs",
                                                        "type": "array"
                                                    },
                                                    "pageCount": {
                                                        "default": 5,
                                                        "description": "The number of document pages (or number of presentation slides) to generate.",
                                                        "title": "Pagecount",
                                                        "type": "integer"
                                                    },
                                                    "prompt": {
                                                        "description": "Instructions that will be used by a GPT-3.5 model to create the document. The instructions should be detailed and contain important information.",
                                                        "title": "Prompt",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "prompt"
                                                ],
                                                "title": "CreateDocumentIndirectlyWithGptRequestV2",
                                                "type": "object"
                                            },
                                            "HTTPValidationError": {
                                                "properties": {
                                                    "detail": {
                                                        "items": {
                                                            "$ref": "#/components/schemas/ValidationError"
                                                        },
                                                        "title": "Detail",
                                                        "type": "array"
                                                    }
                                                },
                                                "title": "HTTPValidationError",
                                                "type": "object"
                                            },
                                            "ValidationError": {
                                                "properties": {
                                                    "loc": {
                                                        "items": {
                                                            "anyOf": [
                                                                {
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "type": "integer"
                                                                }
                                                            ]
                                                        },
                                                        "title": "Location",
                                                        "type": "array"
                                                    },
                                                    "msg": {
                                                        "title": "Message",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "title": "Error Type",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "loc",
                                                    "msg",
                                                    "type"
                                                ],
                                                "title": "ValidationError",
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "info": {
                                        "description": "A GPT that allows the user to create a presentation.",
                                        "title": "Slide Maker GPT",
                                        "version": "v1"
                                    },
                                    "openapi": "3.1.0",
                                    "paths": {
                                        "/create_pptx_indirectly_with_gpt": {
                                            "post": {
                                                "description": "Create a presentation indirectly by prompting a GPT model specialized for generating long presentations",
                                                "operationId": "create_pptx_indirectly_with_gpt",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CreateDocumentIndirectlyWithGptRequestV2"
                                                            }
                                                        }
                                                    },
                                                    "required": true
                                                },
                                                "responses": {
                                                    "200": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        },
                                                        "description": "Successful Response"
                                                    },
                                                    "422": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        },
                                                        "description": "Validation Error"
                                                    }
                                                },
                                                "summary": "Create a presentation indirectly by prompting a GPT model specialized for generating long presentations",
                                                "x-openai-isConsequential": false
                                            }
                                        }
                                    },
                                    "servers": [
                                        {
                                            "url": "https://gpt.slides.aidocmaker.com"
                                        }
                                    ]
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://www.aidocmaker.com/privacy-policy"
                            }
                        },
                        {
                            "id": "gzm_cnf_no05oO7UnTZzz5E9f19jLSYr~gzm_tool_WwAMq8m2N7ibfrpZoBTdkrbx",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-csharp",
                                "text/plain",
                                "application/x-powershell",
                                "text/x-lisp",
                                "text/x-diff",
                                "text/x-ruby",
                                "text/xml",
                                "text/html",
                                "text/x-tex",
                                "text/x-c++",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/vnd.oasis.opendocument.text",
                                "text/vbscript",
                                "text/x-java",
                                "text/x-c",
                                "text/javascript",
                                "application/vnd.apple.keynote",
                                "text/x-shellscript",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/css",
                                "application/javascript",
                                "application/json",
                                "message/rfc822",
                                "text/markdown",
                                "application/x-yaml",
                                "text/x-typescript",
                                "application/pdf",
                                "text/x-vcard",
                                "text/x-sh",
                                "text/x-rst",
                                "application/vnd.apple.pages",
                                "application/x-scala",
                                "text/calendar",
                                "text/x-python",
                                "application/x-rust",
                                "text/x-php",
                                "application/msword",
                                "application/vnd.ms-powerpoint",
                                "text/rtf",
                                "application/rtf",
                                "application/x-sql",
                                "text/x-script.python",
                                "text/x-asm",
                                "text/x-makefile"
                            ],
                            "image_mime_types": [
                                "image/webp",
                                "image/gif",
                                "image/jpeg",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-h8l4uLHFQ",
                        "organization_id": "org-EjquXjWT0E066HTE6gv2ti9g",
                        "short_url": "g-h8l4uLHFQ-video-ai",
                        "author": {
                            "user_id": "user-M64bxYAIRX4KL5kKyb60nPiu",
                            "display_name": "invideo AI",
                            "link_to": "https://invideo.io",
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Video AI",
                            "description": "4.2 ★ - AI video maker GPT - generate engaging videos with voiceovers in any language!",
                            "prompt_starters": [
                                "Let's create a youtube shorts video!",
                                "Let's create a marketing video.",
                                "Let's create an explainer video.",
                                "Let's start by creating a script..."
                            ],
                            "profile_pic_id": "file-Y5VfZYtGbbkXhPTzqGn8mhGW",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-Y5VfZYtGbbkXhPTzqGn8mhGW?se=2123-12-24T13%3A42%3A16Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DVideoMaker-blue%25402x.png&sig=m4ZiA/1bZnp56z2D3IlEnQkwD3NlK2E333ss%2B%2B7Y16w%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-24T12:04:19.281443+00:00",
                        "updated_at": "2024-08-04T09:09:55.122390+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "uses_function_calls",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "6XVHxVXD2lDMHCeHtd5VnfWz",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-f609946e70a4277fbc2fba02a811f0251b0e2625",
                                "domain": "video-ai.invideo.io",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.1",
                                    "info": {
                                        "title": "invideo AI",
                                        "description": "Plugin for crafting narrated videos from text prompts and scripts.",
                                        "version": "v1"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://video-ai.invideo.io"
                                        }
                                    ],
                                    "paths": {
                                        "/api/copilot/request/chatgpt-new-from-brief": {
                                            "post": {
                                                "operationId": "generateVideoFromBrief",
                                                "summary": "Generate video from a detailed brief.",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/VideoFromBriefInput"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "OK",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/VideoResponse"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/api/copilot/request/chatgpt-new-from-script": {
                                            "post": {
                                                "operationId": "generateVideoFromScript",
                                                "summary": "Generate video from a script.",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/VideoFromScriptInput"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "OK",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/VideoResponse"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "VideoFromBriefInput": {
                                                "type": "object",
                                                "properties": {
                                                    "brief": {
                                                        "type": "string",
                                                        "description": "Plain english text starting with \"Create a video\" or \"Create a [platform] video\""
                                                    },
                                                    "settings": {
                                                        "type": "string",
                                                        "description": "Plain english text covering instructions such as gender and accent of the voiceover, tone of the background music. Can be left empty."
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "platforms": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "suggest three platforms this video would be ideal for"
                                                    },
                                                    "audiences": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "suggest three audiences this video would be ideal for"
                                                    },
                                                    "length_in_minutes": {
                                                        "type": "number",
                                                        "description": "suggest the length of the video in minutes"
                                                    },
                                                    "openaiFileIdRefs": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "list of images to include in the video. These should be created by DALL·E or uploaded by the user. JPG, WEBP, and PNG are supported"
                                                    }
                                                },
                                                "required": [
                                                    "title",
                                                    "description",
                                                    "platforms",
                                                    "audiences",
                                                    "length_in_minutes",
                                                    "brief",
                                                    "settings"
                                                ]
                                            },
                                            "VideoFromScriptInput": {
                                                "type": "object",
                                                "properties": {
                                                    "script": {
                                                        "type": "string",
                                                        "description": "plain english text that is the script of the video"
                                                    },
                                                    "settings": {
                                                        "type": "string",
                                                        "description": "Plain english text covering instructions such as gender and accent of the voiceover, tone of the background music. Can be left empty."
                                                    },
                                                    "title": {
                                                        "type": "string"
                                                    },
                                                    "description": {
                                                        "type": "string"
                                                    },
                                                    "platforms": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "suggest three platforms this video would be ideal for"
                                                    },
                                                    "audiences": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "suggest three audiences this video would be ideal for"
                                                    },
                                                    "length_in_minutes": {
                                                        "type": "number",
                                                        "description": "suggest the length of the video in minutes"
                                                    },
                                                    "openaiFileIdRefs": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "description": "list of images to include in the video. These should be created by DALL·E or uploaded by the user. JPG, WEBP, and PNG are supported"
                                                    }
                                                },
                                                "required": [
                                                    "title",
                                                    "description",
                                                    "platforms",
                                                    "audiences",
                                                    "length_in_minutes",
                                                    "script",
                                                    "settings"
                                                ]
                                            },
                                            "VideoResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "video_url": {
                                                        "type": "string",
                                                        "description": "Show title as markdown link and say click here: [video_title](video_url)"
                                                    },
                                                    "thumbnail_url": {
                                                        "type": "string"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://pro-api.invideo.io/legal.html"
                            }
                        },
                        {
                            "id": "gzm_cnf_FrmpO8n3sI67b9ONLixutJTV~gzm_tool_fx08woct4a7jiweI5hhMzbNx",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_wHmuSawSGzImZTMQmqnQSMr5~gzm_tool_YxxnimmBHrrg3oZQFsnuHcEM",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_FrmpO8n3sI67b9ONLixutJTV~gzm_tool_JuJ6DG5KORNTa1i2UsdZolyc",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-csharp",
                                "text/plain",
                                "application/x-powershell",
                                "text/x-lisp",
                                "text/x-diff",
                                "text/x-ruby",
                                "text/xml",
                                "text/html",
                                "text/x-tex",
                                "text/x-c++",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/vnd.oasis.opendocument.text",
                                "text/vbscript",
                                "text/x-java",
                                "text/x-c",
                                "text/javascript",
                                "application/vnd.apple.keynote",
                                "text/x-shellscript",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/css",
                                "application/javascript",
                                "application/json",
                                "message/rfc822",
                                "text/markdown",
                                "application/x-yaml",
                                "text/x-typescript",
                                "application/pdf",
                                "text/x-vcard",
                                "text/x-sh",
                                "text/x-rst",
                                "application/vnd.apple.pages",
                                "application/x-scala",
                                "text/calendar",
                                "text/x-python",
                                "application/x-rust",
                                "text/x-php",
                                "application/msword",
                                "application/vnd.ms-powerpoint",
                                "text/rtf",
                                "application/rtf",
                                "application/x-sql",
                                "text/x-script.python",
                                "text/x-asm",
                                "text/x-makefile"
                            ],
                            "image_mime_types": [
                                "image/webp",
                                "image/gif",
                                "image/jpeg",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-pNWGgUYqS",
                        "organization_id": "org-qqBm9uftX8eDJ6X4s5PWt8tv",
                        "short_url": "g-pNWGgUYqS-webpilot",
                        "author": {
                            "user_id": "user-H6oKEgOlrNwORingNRbr9llz",
                            "display_name": "gpts.webpilot.ai",
                            "link_to": "https://gpts.webpilot.ai",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": true,
                            "display_socials": [
                                {
                                    "id": "githubverify-dff6-4871-860f-d61dfa7afa7f",
                                    "type": "github",
                                    "display_name": "GitHub",
                                    "verified": true,
                                    "verified_data": {
                                        "id": 6043666,
                                        "username": "CocoSgt",
                                        "type": "github",
                                        "link_to": "https://github.com/CocoSgt"
                                    }
                                },
                                {
                                    "id": "twitterverify-43d2-b12a-bbe33d600487",
                                    "type": "twitter",
                                    "display_name": "X",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "553334373",
                                        "username": "@CocoSgt_twt",
                                        "type": "twitter",
                                        "link_to": "https://twitter.com/CocoSgt_twt"
                                    }
                                }
                            ]
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "WebPilot",
                            "description": "Search, Browse, Write & Agent. Action & API Offering",
                            "prompt_starters": [
                                "BTC price now",
                                "What can you do?",
                                "WebPilot Open-source Extension",
                                "WebPilot Action & API"
                            ],
                            "profile_pic_id": "file-WCpXavrnVzievanNCKCQBSHC",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-WCpXavrnVzievanNCKCQBSHC?se=2123-12-25T04%3A39%3A21Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DWebPilot_Logo.jpg&sig=srB2//6MMMj0T%2BNRuDljzYjCsYYMngBRcaSN%2BpX6tIs%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-07T04:51:43.805735+00:00",
                        "updated_at": "2024-08-04T09:10:35.291236+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "uses_function_calls",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "vv1mz3Hx4HbxrhGu9QKaNrou",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-d1c60cb29984ceeea9e9b88999c70f62f02fb2db",
                                "domain": "gpts.webpilot.ai",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.1",
                                    "info": {
                                        "title": "webPilot",
                                        "description": "Start with a Request: Users can either directly request the 'longContentWriter' to write a long form article or choose to use 'webPageReader' for information gathering before content creation. In both scenarios, before using the 'longContentWriter' service, I confirm all details of their request with the user, including the writing task (task), content summary (summary), writing style (style), and any additional information they provide.\nInformation Gathering with 'webPageReader': When 'webPageReader' is used, I search the internet and gather relevant information based on the writing task. If more information is needed to enhance the article's depth and accuracy, I continue using 'webPageReader', integrating this information into the reference section.\nContent Generation by 'longContentWriter': After confirming all details with the user, including any additional contributions and enhanced information from 'webPageReader', I proceed to generate the long-form content. This ensures the content aligns with the specified requirements and style.\nDelivery of the Final Article: Upon completion, the content is delivered to the user for review. They can request revisions or additional information if necessary.\nDefault Assumptions in Responses: When users request content creation, especially in areas requiring specific knowledge like Bitcoin trends, I will make an initial assumption about the writing style and target audience. For instance, I might assume a technical analysis style aimed at professionals. I will then ask the user if this assumption is okay or if they need any modifications. This approach helps streamline the content creation process.",
                                        "version": "v1.1"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://gpts.webpilot.ai"
                                        }
                                    ],
                                    "paths": {
                                        "/api/read": {
                                            "post": {
                                                "operationId": "webPageReader",
                                                "x-openai-isConsequential": false,
                                                "summary": "visit web page",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/visitWebPageRequest"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "OK",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/visitWebPageResponse"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Bad Request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/visitWebPageError"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/api/write": {
                                            "post": {
                                                "operationId": "longContentWriter",
                                                "x-openai-isConsequential": false,
                                                "summary": "generate a book",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/generateContentRequest"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "OK",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/generateContentResponse"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Bad Request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/generateContentError"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "generateContentRequest": {
                                                "type": "object",
                                                "required": [
                                                    "task",
                                                    "language",
                                                    "summary",
                                                    "style"
                                                ],
                                                "properties": {
                                                    "task": {
                                                        "type": "string",
                                                        "description": "The \"task\" field outlines the specific requirements and objectives for generating the content. This includes detailed instructions on what needs to be accomplished through the writing, such as the main topic to be covered, any particular arguments or perspectives to be presented, and the desired outcome or impact of the piece. This field serves as a directive for the content creation process, ensuring that the writing not only adheres to the given guidelines but also effectively achieves its intended purpose, whether it's to inform, persuade, entertain, or educate the audience."
                                                    },
                                                    "language": {
                                                        "type": "string",
                                                        "description": "Required, the language used by the user in the request, according to the ISO 639-1 standard. For Chinese, use zh-CN for Simplified Chinese and zh-TW for Traditional Chinese."
                                                    },
                                                    "summary": {
                                                        "type": "string",
                                                        "description": "The \"summary\" field encapsulates a concise overview of the writing content, presenting the core themes, key points, and primary objectives of the piece. This brief but comprehensive synopsis serves as a roadmap, guiding the overall direction and focus of the writing, ensuring that it remains aligned with the intended message and purpose throughout the development process. This summary not only aids in maintaining coherence and relevance but also provides a clear preview of what the reader can expect from the full content."
                                                    },
                                                    "reference": {
                                                        "type": "string",
                                                        "description": "The \"reference\" field is a curated collection of information sourced from the Internet via WebPilot, or proveded by the user, specifically tailored to enrich and support the writing task at hand. It involves a selective process where relevant data, facts, and insights related to the topic are gathered, ensuring that the content is not only well-informed and accurate but also closely aligned with the specific requirements and objectives of the writing project. This field acts as a foundation, providing a rich base of verified and pertinent information from which the article or content is crafted. This field would be long."
                                                    },
                                                    "style": {
                                                        "type": "string",
                                                        "description": "The \"style\" field in content creation is a comprehensive framework that includes four essential components - the writing tone or style, the target audience, the language style, and inspiration from a notable content creator. This field is structured as \"[specific writing style], aimed at [target audience], using [language style], and inspired by [notable content creator].\" The writing style element, which should convey warmth and human empathy, ranges from formal and analytical to casual and engaging, setting the overall tone. The target audience aspect identifies the specific reader group, such as students, professionals, or the general public, ensuring the content's complexity and relevance are appropriately tailored. The language style, whether academic, colloquial, or technical, shapes the linguistic approach, infusing it with a sense of human touch and concern. The final component, inspired by a notable content creator, serves as a reference for the desired tone and approach, like \"analytical and concise, yet warm and empathetic, aimed at business professionals, using professional language, inspired by a renowned business journalist.\" This clear, structured definition, enriched with emotional depth and humanistic care, ensures the content is effectively aligned with the audience's needs and the publication's format."
                                                    }
                                                }
                                            },
                                            "generateContentResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "message": {
                                                        "type": "string",
                                                        "description": "Result message of the request"
                                                    }
                                                }
                                            },
                                            "generateContentError": {
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "type": "string",
                                                        "description": "error code"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "error message"
                                                    },
                                                    "detail": {
                                                        "type": "string",
                                                        "description": "error detail"
                                                    }
                                                }
                                            },
                                            "visitWebPageResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "title": {
                                                        "type": "string",
                                                        "description": "The title of this web page"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "description": "The content of the web page's url to be summarized"
                                                    },
                                                    "meta": {
                                                        "type": "object",
                                                        "description": "The Html meta info of the web page"
                                                    },
                                                    "links": {
                                                        "type": "array",
                                                        "description": "Some links in the web page",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "extra_search_results": {
                                                        "type": "array",
                                                        "description": "Additional Search results",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "description": "the title of this search result"
                                                                },
                                                                "link": {
                                                                    "type": "string",
                                                                    "description": "the link of this search result"
                                                                },
                                                                "snippet": {
                                                                    "type": "string",
                                                                    "description": "the snippet of this search result"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "todo": {
                                                        "type": "array",
                                                        "description": "what to do with the content",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "tips": {
                                                        "type": "array",
                                                        "description": "Tips placed at the end of the answer",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "rules": {
                                                        "description": "Adherence is required when outputting content.",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "visitWebPageRequest": {
                                                "type": "object",
                                                "required": [
                                                    "link",
                                                    "ur"
                                                ],
                                                "properties": {
                                                    "link": {
                                                        "type": "string",
                                                        "description": "Required, The web page's url to visit and retrieve content from."
                                                    },
                                                    "ur": {
                                                        "type": "string",
                                                        "description": "Required, a clear statement of the user's request, can be used as a search query and may include search operators."
                                                    },
                                                    "lp": {
                                                        "type": "boolean",
                                                        "description": "Required, Whether the link is directly provided by the user"
                                                    },
                                                    "rt": {
                                                        "type": "boolean",
                                                        "description": "If the last request doesn't meet user's need, set this to true when trying to retry another request."
                                                    },
                                                    "l": {
                                                        "type": "string",
                                                        "description": "Required, the language used by the user in the request, according to the ISO 639-1 standard. For Chinese, use zh-CN for Simplified Chinese and zh-TW for Traditional Chinese."
                                                    }
                                                }
                                            },
                                            "visitWebPageError": {
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "type": "string",
                                                        "description": "error code"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "error message"
                                                    },
                                                    "detail": {
                                                        "type": "string",
                                                        "description": "error detail"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://gpts.webpilot.ai/privacy_policy.html"
                            }
                        },
                        {
                            "id": "gzm_cnf_oJa2gkGBM0P6mDX9SdG1yby1~gzm_tool_0CHl1DzyqCjytegKLhQwjx6M",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_oJa2gkGBM0P6mDX9SdG1yby1~gzm_tool_Ov6TzSRCIdbVCY0jYPUVGhlw",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-csharp",
                                "text/plain",
                                "application/x-powershell",
                                "text/x-lisp",
                                "text/x-diff",
                                "text/x-ruby",
                                "text/xml",
                                "text/html",
                                "text/x-tex",
                                "text/x-c++",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/vnd.oasis.opendocument.text",
                                "text/vbscript",
                                "text/x-java",
                                "text/x-c",
                                "text/javascript",
                                "application/vnd.apple.keynote",
                                "text/x-shellscript",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/css",
                                "application/javascript",
                                "application/json",
                                "message/rfc822",
                                "text/markdown",
                                "application/x-yaml",
                                "text/x-typescript",
                                "application/pdf",
                                "text/x-vcard",
                                "text/x-sh",
                                "text/x-rst",
                                "application/vnd.apple.pages",
                                "application/x-scala",
                                "text/calendar",
                                "text/x-python",
                                "application/x-rust",
                                "text/x-php",
                                "application/msword",
                                "application/vnd.ms-powerpoint",
                                "text/rtf",
                                "application/rtf",
                                "application/x-sql",
                                "text/x-script.python",
                                "text/x-asm",
                                "text/x-makefile"
                            ],
                            "image_mime_types": [
                                "image/webp",
                                "image/gif",
                                "image/jpeg",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-MrgKnTZbc",
                        "organization_id": "org-lgpfb8y4pwLxgsMJQVpVtWvc",
                        "short_url": "g-MrgKnTZbc-resume",
                        "author": {
                            "user_id": "user-P0ihRV0AwwvEfbwIvIHOrN8M",
                            "display_name": "jobright.ai",
                            "link_to": "https://jobright.ai",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Resume",
                            "description": "By combining the expertise of top resume writers with advanced AI, we assist in diagnosing and enhancing your resume | ATS Compatible | Tailor Your Resume for a Specific Job | We value your experience, please contact support@jobright.ai if you need support❤️!",
                            "prompt_starters": [
                                "Can you help me analyze my resume?",
                                "Can you help me tailor my resume with this job?",
                                "Find jobs that fit with my background?",
                                "How to make my resume ATS compatible? "
                            ],
                            "profile_pic_id": "file-0tpK8Pe8mMuE8HB8KKPcyoRn",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-0tpK8Pe8mMuE8HB8KKPcyoRn?se=2123-12-21T20%3A47%3A14Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DScreenshot%25202024-01-14%2520at%252012.33.34%25E2%2580%25AFPM.png&sig=xiF%2Bmn%2B4uHhqgzWNSOA8F0aMnaxWguZ%2BsMb%2Bj1NYwFc%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2024-01-14T05:48:30.102508+00:00",
                        "updated_at": "2024-08-04T09:10:11.798428+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "uses_function_calls",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "i1ch5AlpbHtH0xCQF5eh8HpW",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-658ef1b58f5cace5a786bdf29ca3645995d342dc",
                                "domain": "swan-api.jobright.ai",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.1.0",
                                    "info": {
                                        "title": "Job Search and Query Parsing API",
                                        "description": "APIs for parsing search queries and searching jobs",
                                        "version": "v1.0.0"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://swan-api.jobright.ai"
                                        }
                                    ],
                                    "components": {
                                        "schemas": {
                                            "FilterCondition": {
                                                "type": "object",
                                                "properties": {
                                                    "jobTitle": {
                                                        "type": "string"
                                                    },
                                                    "jobTypes": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "seniority": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "companyCategory": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "annualSalaryMinimum": {
                                                        "type": "integer",
                                                        "nullable": true
                                                    },
                                                    "isH1BOnly": {
                                                        "type": "boolean"
                                                    },
                                                    "roleType": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "skills": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "companyStages": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "workModel": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "radiusRange": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "daysAgo": {
                                                        "type": "integer",
                                                        "description": "default to 3, represents jobs within 3 day (72 hours)",
                                                        "default": 3
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "paths": {
                                        "/swan/gpts/oneline/parse": {
                                            "post": {
                                                "description": "Parse user's search preference",
                                                "operationId": "ParseSearchPreference",
                                                "x-openai-isConsequential": false,
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "oneLineInput": {
                                                                        "type": "string",
                                                                        "description": "One sentence input from user to describe the job search preference"
                                                                    },
                                                                    "visitId": {
                                                                        "type": "string",
                                                                        "description": "An ID to identify user's identity, can hardcode to '4096' for now"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful response",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "success": {
                                                                            "type": "boolean",
                                                                            "description": "Indicates if the request was successful"
                                                                        },
                                                                        "errorCode": {
                                                                            "type": "integer",
                                                                            "description": "Error code, 10000 for success"
                                                                        },
                                                                        "errorMsg": {
                                                                            "type": "string",
                                                                            "description": "Error message if applicable"
                                                                        },
                                                                        "result": {
                                                                            "type": "object",
                                                                            "description": "Filter conditions returned by the server",
                                                                            "properties": {
                                                                                "filterResult": {
                                                                                    "$ref": "#/components/schemas/FilterCondition"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/swan/gpts/job/search": {
                                            "post": {
                                                "description": "Search for jobs based on various filters",
                                                "operationId": "JobSearch",
                                                "x-openai-isConsequential": false,
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "startPos": {
                                                                        "type": "integer",
                                                                        "description": "The starting position for the search results. This parameter could be for simple pagination, for example, if user has seen 20 jobs, you can set startPos to 20 for next batch of jobs."
                                                                    },
                                                                    "sortCondition": {
                                                                        "type": "string",
                                                                        "description": "The condition used for sorting the search results. RELEVANCE is the default value which means sort by relevance, FRESHNESS is sorting by fresheness so that fresh jobs will go first."
                                                                    },
                                                                    "filterCondition": {
                                                                        "$ref": "#/components/schemas/FilterCondition"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful job search response",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "results": {
                                                                            "type": "array",
                                                                            "description": "array of jobs",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "jobResult": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "jobId": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "jobTitle": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "jobSeniority": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "jobLocation": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "isRemote": {
                                                                                                "type": "boolean"
                                                                                            },
                                                                                            "workModel": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "publishTime": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "publishTimeDesc": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "salaryDesc": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "employmentType": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "jobSummary": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "requirements": {
                                                                                                "type": "array",
                                                                                                "description": "List of requirements or qualifications of the job",
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "url": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "applyLink": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "h1BStatus": {
                                                                                                "type": "string",
                                                                                                "description": "Either Past Sponsorship or Explicit mentioned"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "companyResult": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "companyName": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "companySize": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "companyDesc": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "companyCategories": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "companyURL": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "fundraisingCurrentStage": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "fundraisingTotalFunding": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "grating": {
                                                                                                "type": "object",
                                                                                                "description": "glassdoor rating"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "service_http",
                                    "instructions": "",
                                    "authorization_type": "bearer",
                                    "verification_tokens": {},
                                    "custom_auth_header": ""
                                },
                                "privacy_policy_url": "https://jobright.ai/legal/privacy"
                            }
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-csharp",
                                "text/plain",
                                "application/x-powershell",
                                "text/x-lisp",
                                "text/x-diff",
                                "text/x-ruby",
                                "text/xml",
                                "text/html",
                                "text/x-tex",
                                "text/x-c++",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/vnd.oasis.opendocument.text",
                                "text/vbscript",
                                "text/x-java",
                                "text/x-c",
                                "text/javascript",
                                "application/vnd.apple.keynote",
                                "text/x-shellscript",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/css",
                                "application/javascript",
                                "application/json",
                                "message/rfc822",
                                "text/markdown",
                                "application/x-yaml",
                                "text/x-typescript",
                                "application/pdf",
                                "text/x-vcard",
                                "text/x-sh",
                                "text/x-rst",
                                "application/vnd.apple.pages",
                                "application/x-scala",
                                "text/calendar",
                                "text/x-python",
                                "application/x-rust",
                                "text/x-php",
                                "application/msword",
                                "application/vnd.ms-powerpoint",
                                "text/rtf",
                                "application/rtf",
                                "application/x-sql",
                                "text/x-script.python",
                                "text/x-asm",
                                "text/x-makefile"
                            ],
                            "image_mime_types": [
                                "image/webp",
                                "image/gif",
                                "image/jpeg",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-vI2kaiM9N",
                        "organization_id": "org-xXGsaF1XYpjpwUCEMUdGi7Ct",
                        "short_url": "g-vI2kaiM9N-whimsical-diagrams",
                        "author": {
                            "user_id": "user-eVKpydNkxr0zraI4tNzN06Hc__0b550cd7-f738-4fa9-9fb2-07e154d4754b",
                            "display_name": "whimsical.com",
                            "link_to": "https://whimsical.com",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": "0b550cd7-f738-4fa9-9fb2-07e154d4754b",
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Whimsical Diagrams",
                            "description": "Explains and visualizes concepts with flowcharts, mindmaps and sequence diagrams.",
                            "prompt_starters": [
                                "Show escalation process flowchart.",
                                "Sequence diagram for OAuth 2.0 flow.",
                                "Generate sitemap for a food delivery company.",
                                "Visualize ChatGPT architecture."
                            ],
                            "profile_pic_id": "file-w1wRg58ZPtZgXXTQJqiEwJ4H",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-w1wRg58ZPtZgXXTQJqiEwJ4H?se=2124-01-06T16%3A22%3A56Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DWhite%2520Icon%2520on%2520Gradient%2520SQ%25402x.png&sig=9eaJvzM4CZfWuo08Mik5OfaxwqRbEfZl0J333af9dRo%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-25T04:06:45.916593+00:00",
                        "updated_at": "2024-08-04T09:10:40.656323+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "uses_function_calls",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_vIzYveYwBHTHdHmpkSgHdqVu~gzm_tool_EPL8UC6CEpKCKgfbjNWBtOug",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-541e0dd102c47aa14303c711c2636762f84c0ae6",
                                "domain": "whimsical.com",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.0",
                                    "info": {
                                        "version": "1.0.0",
                                        "title": "Diagram to Image API",
                                        "description": "A simple API to generate flowchart, mindmap, or sequence diagram images."
                                    },
                                    "servers": [
                                        {
                                            "url": "https://whimsical.com/api"
                                        }
                                    ],
                                    "paths": {
                                        "/ai.chatgpt.render-flowchart": {
                                            "post": {
                                                "operationId": "postRenderFlowchart",
                                                "x-openai-isConsequential": false,
                                                "summary": "Renders a flowchart",
                                                "description": "Accepts a string describing a flowchart and returns a URL to a rendered image",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/FlowchartRequest"
                                                            }
                                                        }
                                                    },
                                                    "required": true
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "URL to the rendered image",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/FlowchartResponse"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Invalid flowchart syntax provided",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/Error"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "500": {
                                                        "description": "Unexpected error",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/Error"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/ai.chatgpt.render-mindmap": {
                                            "post": {
                                                "operationId": "postRenderMindmap",
                                                "x-openai-isConsequential": false,
                                                "summary": "Render markdown bullet list as a mindmap",
                                                "description": "Accepts a markdown bullet list and returns a URL to a rendered image",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/MindmapRequest"
                                                            }
                                                        }
                                                    },
                                                    "required": true
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "URL to the rendered image",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/MindmapResponse"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Invalid markdown string provided",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/Error"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "500": {
                                                        "description": "Unexpected error",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/Error"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/ai.chatgpt.render-sequence-diagram": {
                                            "post": {
                                                "operationId": "postRenderSequenceDiagram",
                                                "x-openai-isConsequential": false,
                                                "summary": "Render a sequence diagram",
                                                "description": "Accepts a string describing a sequence diagram and returns a URL to a rendered image",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/SequenceDiagramRequest"
                                                            }
                                                        }
                                                    },
                                                    "required": true
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "URL to the rendered image",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/SequenceDiagramResponse"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Invalid sequence diagram syntax provided",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/Error"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "500": {
                                                        "description": "Unexpected error",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/Error"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "FlowchartRequest": {
                                                "type": "object",
                                                "properties": {
                                                    "mermaid": {
                                                        "type": "string",
                                                        "description": "Flowchart to be rendered, in Mermaid syntax"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "description": "Title of the flowchart"
                                                    }
                                                },
                                                "required": [
                                                    "mermaid"
                                                ]
                                            },
                                            "FlowchartResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "imageURL": {
                                                        "type": "string",
                                                        "description": "URL of the rendered image"
                                                    },
                                                    "fileURL": {
                                                        "type": "string",
                                                        "description": "URL of the file in Whimsical"
                                                    }
                                                }
                                            },
                                            "MindmapRequest": {
                                                "type": "object",
                                                "properties": {
                                                    "markdown": {
                                                        "type": "string",
                                                        "description": "Indented, markdown bullet list of mindmap nodes"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "description": "Title of the mindmap"
                                                    }
                                                },
                                                "required": [
                                                    "markdown"
                                                ]
                                            },
                                            "MindmapResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "imageURL": {
                                                        "type": "string",
                                                        "description": "URL of the rendered image"
                                                    },
                                                    "fileURL": {
                                                        "type": "string",
                                                        "description": "URL of the file in Whimsical"
                                                    }
                                                }
                                            },
                                            "SequenceDiagramRequest": {
                                                "type": "object",
                                                "properties": {
                                                    "diagram": {
                                                        "type": "string",
                                                        "description": "Sequence diagram to be rendered"
                                                    },
                                                    "title": {
                                                        "type": "string",
                                                        "description": "Title of the sequence diagram"
                                                    }
                                                },
                                                "required": [
                                                    "diagram"
                                                ]
                                            },
                                            "SequenceDiagramResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "imageURL": {
                                                        "type": "string",
                                                        "description": "URL of the rendered image"
                                                    },
                                                    "fileURL": {
                                                        "type": "string",
                                                        "description": "URL of the file in Whimsical"
                                                    }
                                                }
                                            },
                                            "Error": {
                                                "type": "object",
                                                "properties": {
                                                    "message": {
                                                        "type": "string",
                                                        "description": "Error message"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://whimsical.com/terms/privacy"
                            }
                        },
                        {
                            "id": "gzm_cnf_zhrBFt3ZjybGNls6WxGkZPYd~gzm_tool_bFjBRAidYijMJhupZbgf3Jet",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_zhrBFt3ZjybGNls6WxGkZPYd~gzm_tool_k7adYw2GnCqM9cfmaVnf2ty5",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_zhrBFt3ZjybGNls6WxGkZPYd~gzm_tool_XNQlU19JB9qQQbEAUWjuFu4z",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-csharp",
                                "text/plain",
                                "application/x-powershell",
                                "text/x-lisp",
                                "text/x-diff",
                                "text/x-ruby",
                                "text/xml",
                                "text/html",
                                "text/x-tex",
                                "text/x-c++",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/vnd.oasis.opendocument.text",
                                "text/vbscript",
                                "text/x-java",
                                "text/x-c",
                                "text/javascript",
                                "application/vnd.apple.keynote",
                                "text/x-shellscript",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/css",
                                "application/javascript",
                                "application/json",
                                "message/rfc822",
                                "text/markdown",
                                "application/x-yaml",
                                "text/x-typescript",
                                "application/pdf",
                                "text/x-vcard",
                                "text/x-sh",
                                "text/x-rst",
                                "application/vnd.apple.pages",
                                "application/x-scala",
                                "text/calendar",
                                "text/x-python",
                                "application/x-rust",
                                "text/x-php",
                                "application/msword",
                                "application/vnd.ms-powerpoint",
                                "text/rtf",
                                "application/rtf",
                                "application/x-sql",
                                "text/x-script.python",
                                "text/x-asm",
                                "text/x-makefile"
                            ],
                            "image_mime_types": [
                                "image/webp",
                                "image/gif",
                                "image/jpeg",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-MJYELDDFg",
                        "organization_id": "org-SYqj9TQFQ88iTqHixWNBlu2l",
                        "short_url": "g-MJYELDDFg-ai-voice-generator-text-to-speech",
                        "author": {
                            "user_id": "user-t0D9RBPCtvLGuZUnv2qKGobB",
                            "display_name": "aidocmaker.com",
                            "link_to": "https://aidocmaker.com",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "AI Voice Generator: Text to Speech",
                            "description": "Prompt to create high quality AI voiceovers.",
                            "prompt_starters": [
                                "What can this GPT do?",
                                "Generate a pleasant bed time story audio",
                                "Create an exciting start-up pitch for space elevators",
                                "Create an inspirational speech for a sales team"
                            ],
                            "profile_pic_id": "file-jZdxKrU81ovtMXHPsQBGpMrJ",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-jZdxKrU81ovtMXHPsQBGpMrJ?se=2124-01-24T19%3A41%3A44Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3Dlogo.png&sig=DbtNOAdy9HDPLwMIFbGHjidlJQ9et1M5G2ZUDmBQ1fw%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2024-01-12T05:16:56.477963+00:00",
                        "updated_at": "2024-08-04T09:10:41.146463+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "uses_function_calls",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_VrOjeF7lil0kztIo7n94FHs9~gzm_tool_zDdZcSVKEr0Pbvzw24mGlnJ8",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_QRQYYlqzdUARiulF5qzLSH38~gzm_tool_LdW5AtA3or7LXrVBICwa3pye",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_VrOjeF7lil0kztIo7n94FHs9~gzm_tool_GbAo0fU4ff7UXFloSsltOMQ5",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "kmonvJMIbZrX2uM37Fm4QW4U",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-8f53e4be47896081b3438896086a0a07953a25aa",
                                "domain": "gpt.voice.aidocmaker.com",
                                "raw_spec": null,
                                "json_schema": {
                                    "components": {
                                        "schemas": {
                                            "CreateAudioFileRequest": {
                                                "properties": {
                                                    "transcript": {
                                                        "description": "Text that will be used to generate the audio file",
                                                        "title": "Transcript",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "transcript"
                                                ],
                                                "title": "CreateAudioFileRequest",
                                                "type": "object"
                                            },
                                            "HTTPValidationError": {
                                                "properties": {
                                                    "detail": {
                                                        "items": {
                                                            "$ref": "#/components/schemas/ValidationError"
                                                        },
                                                        "title": "Detail",
                                                        "type": "array"
                                                    }
                                                },
                                                "title": "HTTPValidationError",
                                                "type": "object"
                                            },
                                            "ValidationError": {
                                                "properties": {
                                                    "loc": {
                                                        "items": {
                                                            "anyOf": [
                                                                {
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "type": "integer"
                                                                }
                                                            ]
                                                        },
                                                        "title": "Location",
                                                        "type": "array"
                                                    },
                                                    "msg": {
                                                        "title": "Message",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "title": "Error Type",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "loc",
                                                    "msg",
                                                    "type"
                                                ],
                                                "title": "ValidationError",
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "info": {
                                        "description": "A GPT that allows users to create AI voiceovers.",
                                        "title": "AI Voice Generator GPT",
                                        "version": "v1"
                                    },
                                    "openapi": "3.1.0",
                                    "paths": {
                                        "/create_audio": {
                                            "post": {
                                                "operationId": "create_audio",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CreateAudioFileRequest"
                                                            }
                                                        }
                                                    },
                                                    "required": true
                                                },
                                                "responses": {
                                                    "200": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        },
                                                        "description": "Successful Response"
                                                    },
                                                    "422": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        },
                                                        "description": "Validation Error"
                                                    }
                                                },
                                                "summary": "Create an audio file that can be downloaded via URL",
                                                "x-openai-isConsequential": false
                                            }
                                        }
                                    },
                                    "servers": [
                                        {
                                            "url": "https://gpt.voice.aidocmaker.com"
                                        }
                                    ]
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://www.aidocmaker.com/privacy-policy"
                            }
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-csharp",
                                "text/plain",
                                "application/x-powershell",
                                "text/x-lisp",
                                "text/x-diff",
                                "text/x-ruby",
                                "text/xml",
                                "text/html",
                                "text/x-tex",
                                "text/x-c++",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/vnd.oasis.opendocument.text",
                                "text/vbscript",
                                "text/x-java",
                                "text/x-c",
                                "text/javascript",
                                "application/vnd.apple.keynote",
                                "text/x-shellscript",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/css",
                                "application/javascript",
                                "application/json",
                                "message/rfc822",
                                "text/markdown",
                                "application/x-yaml",
                                "text/x-typescript",
                                "application/pdf",
                                "text/x-vcard",
                                "text/x-sh",
                                "text/x-rst",
                                "application/vnd.apple.pages",
                                "application/x-scala",
                                "text/calendar",
                                "text/x-python",
                                "application/x-rust",
                                "text/x-php",
                                "application/msword",
                                "application/vnd.ms-powerpoint",
                                "text/rtf",
                                "application/rtf",
                                "application/x-sql",
                                "text/x-script.python",
                                "text/x-asm",
                                "text/x-makefile"
                            ],
                            "image_mime_types": [
                                "image/webp",
                                "image/gif",
                                "image/jpeg",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-Mc1tBt7gp",
                        "organization_id": "org-8GCtBtAd2p5H39EgRGVisehE",
                        "short_url": "g-Mc1tBt7gp-turboscribe-transcription-transcribe-audio",
                        "author": {
                            "user_id": "user-zFI6vR1dbT4xp4Qv9WvWIZCq",
                            "display_name": "TurboScribe",
                            "link_to": "https://turboscribe.ai",
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "TurboScribe Transcription — Transcribe Audio",
                            "description": "Transcribe, summarize, and chat with audio and video files. Upload at turboscribe.ai, then chat here! Transcription powered by AI.",
                            "prompt_starters": [
                                "I'd like to transcribe an audio or video file.",
                                "What is TurboScribe?",
                                "Provide a detailed summary of my most recent transcript.",
                                "List all the transcripts in my account."
                            ],
                            "profile_pic_id": "file-lixBushANPhCimrj1EEKSBDK",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-lixBushANPhCimrj1EEKSBDK?se=2123-12-19T04%3A25%3A04Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3Dfavicon_gradient_square.png&sig=F6ttD5x1bPGearDoWy/jJ1QLMW2/ji6m6HoD03ox7d8%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2024-01-11T07:08:44.260853+00:00",
                        "updated_at": "2024-08-04T09:10:07.480314+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "uses_function_calls",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "ABQREMaKuTZwRB2ZwIWHgybu",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "ERoTlyN0GA8dTqVjxaApRvgD",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-868236e40b7ef353071dfdc5bff2ccfd781af176",
                                "domain": "turboscribe.ai",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.1.0",
                                    "info": {
                                        "title": "Get weather data",
                                        "description": "Retrieves current weather data for a location.",
                                        "version": "v1.0.0"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://turboscribe.ai"
                                        }
                                    ],
                                    "paths": {
                                        "/_chatgpt/v1/transcripts/recent": {
                                            "get": {
                                                "description": "Lists recent transcripts for a user. Always sorted in descending order (by time created). Returns a list of transcripts. Might return a next_page token, which can be passed back to this operation to continue paginating through the user's recent transcripts.",
                                                "operationId": "ListRecentTranscripts",
                                                "parameters": [
                                                    {
                                                        "name": "limit",
                                                        "in": "query",
                                                        "description": "The number of recent transcripts to fetch. Must be between 1 and 1000. 100 is a good place to start to ensure you have a good overview of the user's transcripts.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    {
                                                        "name": "next_page",
                                                        "in": "query",
                                                        "description": "If provided on subsequent calls, the results will pick up with the next set of items.",
                                                        "required": false,
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    }
                                                ],
                                                "deprecated": false
                                            }
                                        },
                                        "/_chatgpt/v1/transcript/{transcriptId}/metadata": {
                                            "get": {
                                                "description": "Gets the metadata (filename, duration, creation time, transcription status) of a transcript.",
                                                "operationId": "GetTranscriptMetadata",
                                                "parameters": [
                                                    {
                                                        "name": "transcriptId",
                                                        "in": "path",
                                                        "description": "The transcript ID for the transcript you'd like to fetch. Usually obtained from ListRecentTranscripts or a transcript URL provided by the user.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    }
                                                ],
                                                "deprecated": false
                                            }
                                        },
                                        "/_chatgpt/v1/transcript/{transcriptId}/txt": {
                                            "get": {
                                                "description": "Gets the contents of a transcript as plain text content. If you experience size related errors, you should always try to re-fetch the transcript content again with remove_stopwords set to true. If that is still too big, you can re-fetch a final time with remove_timestamps set to true.",
                                                "operationId": "GetTranscriptTextContent",
                                                "parameters": [
                                                    {
                                                        "name": "transcriptId",
                                                        "in": "path",
                                                        "description": "The transcript ID for the transcript you'd like to fetch. Usually obtained from ListRecentTranscripts or a transcript URL provided by the user.",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    {
                                                        "name": "remove_stopwords",
                                                        "in": "query",
                                                        "description": "Removes 'stop words' from the response, shrinking down the size of the transcript.",
                                                        "required": false,
                                                        "schema": {
                                                            "type": "boolean"
                                                        }
                                                    },
                                                    {
                                                        "name": "remove_timestamps",
                                                        "in": "query",
                                                        "description": "Removes timestamps from the response, shrinking down the size of the transcript.",
                                                        "required": false,
                                                        "schema": {
                                                            "type": "boolean"
                                                        }
                                                    }
                                                ],
                                                "deprecated": false
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {}
                                    }
                                },
                                "auth": {
                                    "type": "oauth",
                                    "instructions": "",
                                    "client_url": "https://turboscribe.ai/oauth2/authorize",
                                    "scope": "chatgpt",
                                    "authorization_url": "https://turboscribe.ai/oauth2/token",
                                    "authorization_content_type": "application/x-www-form-urlencoded",
                                    "verification_tokens": {},
                                    "pkce_required": false,
                                    "token_exchange_method": "default_post"
                                },
                                "privacy_policy_url": "https://turboscribe.ai/privacy"
                            }
                        },
                        {
                            "id": "jU1ytUtxQdNw9sHLrMGsLMuQ",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-csharp",
                                "text/plain",
                                "application/x-powershell",
                                "text/x-lisp",
                                "text/x-diff",
                                "text/x-ruby",
                                "text/xml",
                                "text/html",
                                "text/x-tex",
                                "text/x-c++",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/vnd.oasis.opendocument.text",
                                "text/vbscript",
                                "text/x-java",
                                "text/x-c",
                                "text/javascript",
                                "application/vnd.apple.keynote",
                                "text/x-shellscript",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/css",
                                "application/javascript",
                                "application/json",
                                "message/rfc822",
                                "text/markdown",
                                "application/x-yaml",
                                "text/x-typescript",
                                "application/pdf",
                                "text/x-vcard",
                                "text/x-sh",
                                "text/x-rst",
                                "application/vnd.apple.pages",
                                "application/x-scala",
                                "text/calendar",
                                "text/x-python",
                                "application/x-rust",
                                "text/x-php",
                                "application/msword",
                                "application/vnd.ms-powerpoint",
                                "text/rtf",
                                "application/rtf",
                                "application/x-sql",
                                "text/x-script.python",
                                "text/x-asm",
                                "text/x-makefile"
                            ],
                            "image_mime_types": [
                                "image/webp",
                                "image/gif",
                                "image/jpeg",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-pcoHeADVw",
                        "organization_id": "org-7G6v5HaOvL9M5U21KBhLZzTR",
                        "short_url": "g-pcoHeADVw-adobe-express",
                        "author": {
                            "user_id": "user-t2unphXGYhiXyOtM2a6ZyBjj",
                            "display_name": "adobe.com",
                            "link_to": "https://adobe.com",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Adobe Express",
                            "description": "Quickly create social posts, videos, flyers, and more with Adobe Express, your all-in-one content creation GPT. Your use of Adobe Express GPT is acceptance of our terms of use (https://adobe.ly/legal), privacy policy (https://adobe.ly/privacy) and AI guidelines (https://adobe.ly/ai-guidelines).",
                            "prompt_starters": [
                                "Make a flyer to promote my yoga studio grand opening",
                                "Design a Facebook post for my gluten-free donut shop",
                                "Create a TikTok of my morning skincare routine",
                                "I need an Instagram post for our business leadership webinar"
                            ],
                            "profile_pic_id": "file-IlI6vrSO28C206NqM5KGUpkm",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-IlI6vrSO28C206NqM5KGUpkm?se=2124-02-24T04%3A01%3A24Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DIMG_2132.jpg&sig=5/G9vp4SGYDV%2BJxQjU7JAeyiAuQJy/aWMWSwZ2TJNdI%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2024-02-20T17:37:28.120713+00:00",
                        "updated_at": "2024-08-04T09:09:43.449507+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "uses_function_calls",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "TqFbjrKboNl4UX7QlSfp7WwR",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-36a95336c40cc354e9bd8b614058c398215b0f9a",
                                "domain": "express.adobe.io",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.1.0",
                                    "info": {
                                        "title": "Adobe Express Create and Edit Design GPT",
                                        "description": "This GPT enables users to generate personalized design templates using Adobe Express, specifically tailored to their needs, such as logos for coffee shops. Users can specify their search query, template type, and other parameters to find the most suitable designs.",
                                        "version": "1.0.0"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://express.adobe.io",
                                            "description": "Server url to access Adobe Express GPT's action's API is hosted"
                                        }
                                    ],
                                    "tags": [
                                        {
                                            "name": "Adobe Express",
                                            "description": "Access to Adobe Express templates"
                                        }
                                    ],
                                    "paths": {
                                        "/express/templates": {
                                            "post": {
                                                "security": [
                                                    {
                                                        "BearerAuth": []
                                                    }
                                                ],
                                                "tags": [
                                                    "Adobe Express"
                                                ],
                                                "operationId": "GetTemplates",
                                                "x-openai-isConsequential": false,
                                                "summary": "Retrieve design templates from Adobe Express",
                                                "description": "This endpoint allows users to search for specific types of design templates in Adobe Express or generate personalized templates. Users can specify a search query, template type, and additional behaviors to find templates that best suit their requirements.",
                                                "parameters": [
                                                    {
                                                        "in": "query",
                                                        "name": "api_key",
                                                        "schema": {
                                                            "type": "string",
                                                            "enum": [
                                                                "CoPilotPlugin"
                                                            ]
                                                        },
                                                        "required": true
                                                    }
                                                ],
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/GetTemplatesRequest"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "A list of design templates matching the search criteria",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/GetTemplatesResponse"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "4XX": {
                                                        "$ref": "#/components/responses/4XXResponseCode"
                                                    },
                                                    "5XX": {
                                                        "$ref": "#/components/responses/5XXResponseCode"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "securitySchemes": {
                                            "BearerAuth": {
                                                "type": "http",
                                                "scheme": "bearer"
                                            }
                                        },
                                        "schemas": {
                                            "GetTemplatesRequest": {
                                                "type": "object",
                                                "required": [
                                                    "searchQuery",
                                                    "queryTopic"
                                                ],
                                                "properties": {
                                                    "searchQuery": {
                                                        "type": "string",
                                                        "description": "This is a required field. This is the user query containing complete information and complete context that the user has provided including the query filters, do not miss any information. "
                                                    },
                                                    "queryTopic": {
                                                        "type": "string",
                                                        "description": "This is a required field. This specifies the overall theme or purpose of the design, extracted from the query without personalized details. The contains all the information regarding the topic of the design except mood, colour, style or any personalised details like name, age, number etc."
                                                    },
                                                    "queryFilters": {
                                                        "type": "object",
                                                        "description": "Search Query filters. This is optional field and pass this information if user has provided any filters in the query.",
                                                        "properties": {
                                                            "color": {
                                                                "type": "string",
                                                                "description": "The color filter to search for templates. This information may come in user's query.",
                                                                "example": "Brown"
                                                            },
                                                            "style": {
                                                                "type": "string",
                                                                "description": "The style filter to search for templates. This information may come in user's query.",
                                                                "enum": [
                                                                    "Abstract",
                                                                    "Avant garde",
                                                                    "Bohemian",
                                                                    "Bold",
                                                                    "Bright",
                                                                    "Classic",
                                                                    "Contemporary",
                                                                    "Corporate",
                                                                    "Edgy",
                                                                    "Elegant",
                                                                    "Fresh",
                                                                    "Geometric",
                                                                    "Gothic",
                                                                    "Gritty",
                                                                    "Grunge",
                                                                    "Handmade",
                                                                    "Industrial",
                                                                    "Minimal",
                                                                    "Modern",
                                                                    "Natural",
                                                                    "Organic",
                                                                    "Polished",
                                                                    "Pop Art",
                                                                    "Professional",
                                                                    "Psychedelic",
                                                                    "Retro",
                                                                    "Rustic",
                                                                    "Simple",
                                                                    "Sophisticated",
                                                                    "Timeless",
                                                                    "Vintage"
                                                                ],
                                                                "example": "Vintage"
                                                            },
                                                            "mood": {
                                                                "type": "string",
                                                                "description": "The mood filter to search for templates. This information may come in user's query.",
                                                                "enum": [
                                                                    "Dark",
                                                                    "Dramatic",
                                                                    "Dreamy",
                                                                    "Gritty",
                                                                    "Groovy",
                                                                    "Happy",
                                                                    "Joyful",
                                                                    "Mellow",
                                                                    "Mysterious",
                                                                    "Neutral",
                                                                    "Nostalgic",
                                                                    "Playful",
                                                                    "Powerful",
                                                                    "Quirky",
                                                                    "Relaxing",
                                                                    "Romantic",
                                                                    "Sad",
                                                                    "Scary",
                                                                    "Stormy"
                                                                ],
                                                                "example": "Mellow"
                                                            }
                                                        }
                                                    },
                                                    "isRequestForTemplateGeneration": {
                                                        "type": "boolean",
                                                        "description": "This is a mandatory boolean field which specifies if the request is for template generation."
                                                    },
                                                    "templateType": {
                                                        "type": "string",
                                                        "enum": [
                                                            "brochure",
                                                            "business-card",
                                                            "card-greeting",
                                                            "facebook-post",
                                                            "facebook-story",
                                                            "facebook-profile-cover",
                                                            "flyer",
                                                            "graphic-organizer",
                                                            "infographic",
                                                            "instagram-carousel",
                                                            "instagram-reel",
                                                            "instagram-square-post",
                                                            "instagram-story",
                                                            "invitation",
                                                            "invoice",
                                                            "linkedin-profile-cover",
                                                            "linkedin-post",
                                                            "logo",
                                                            "meme",
                                                            "menu",
                                                            "mobile-video",
                                                            "newsletter",
                                                            "photo-book",
                                                            "poster",
                                                            "presentation",
                                                            "resume",
                                                            "tiktok-video",
                                                            "video",
                                                            "youtube-thumbnail",
                                                            "youtube-video",
                                                            "wallpaper-desktop",
                                                            "line-ad-small",
                                                            "line-ad-square",
                                                            "line-ad-vertical",
                                                            "line-rich-menu-large",
                                                            "line-rich-menu-small",
                                                            "line-rich-message",
                                                            "line-ad-square-image",
                                                            "line-ad-square-video",
                                                            "note-header-image",
                                                            "worksheet",
                                                            "youtube-profile-photo"
                                                        ],
                                                        "description": "The type of template to search for.",
                                                        "example": "logo"
                                                    },
                                                    "limit": {
                                                        "type": "integer",
                                                        "description": "Specifies the count of templates to return. This information may come in user's query.",
                                                        "default": 5
                                                    },
                                                    "start": {
                                                        "type": "integer",
                                                        "description": "Specifies the index of the first template to return. This information may come in user's query.",
                                                        "default": 0
                                                    }
                                                }
                                            },
                                            "GetTemplatesResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "matching": {
                                                        "templateRespMessage": {
                                                            "type": "string",
                                                            "description": "Heading of the response to inform the user about the templates returned in response."
                                                        },
                                                        "items": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/Template"
                                                            }
                                                        }
                                                    },
                                                    "related": {
                                                        "templateRespMessage": {
                                                            "type": "string",
                                                            "description": "Heading of the response to inform the user about the templates returned in response."
                                                        },
                                                        "items": {
                                                            "type": "array",
                                                            "items": {
                                                                "$ref": "#/components/schemas/Template"
                                                            }
                                                        }
                                                    },
                                                    "isGenerated": {
                                                        "type": "boolean",
                                                        "description": "Specifies if the templates returned are generated or static templates."
                                                    },
                                                    "isRequestForTemplateGeneration": {
                                                        "type": "boolean",
                                                        "description": "Specifies if the request is for template generation."
                                                    },
                                                    "reportAbuseUrl": {
                                                        "type": "string",
                                                        "description": "URL to report abuse for the generated templates."
                                                    }
                                                }
                                            },
                                            "Template": {
                                                "type": "object",
                                                "properties": {
                                                    "title": {
                                                        "type": "string",
                                                        "description": "Title of the template."
                                                    },
                                                    "editorUrl": {
                                                        "type": "string",
                                                        "description": "URL to edit the template in Adobe Express with preloaded template."
                                                    },
                                                    "rendition": {
                                                        "$ref": "#/components/schemas/Rendition"
                                                    }
                                                }
                                            },
                                            "Rendition": {
                                                "type": "object",
                                                "description": "Specifies the clickable rendition image of template/design",
                                                "properties": {
                                                    "src": {
                                                        "type": "string",
                                                        "description": "URL of the template image."
                                                    },
                                                    "height": {
                                                        "type": "integer",
                                                        "description": "Height of the template image."
                                                    },
                                                    "width": {
                                                        "type": "integer",
                                                        "description": "Width of the template image"
                                                    }
                                                }
                                            }
                                        },
                                        "responses": {
                                            "4XXResponseCode": {
                                                "description": "Client Error"
                                            },
                                            "5XXResponseCode": {
                                                "description": "Server Error"
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "service_http",
                                    "instructions": "",
                                    "authorization_type": "bearer",
                                    "verification_tokens": {},
                                    "custom_auth_header": "Authorization"
                                },
                                "privacy_policy_url": "https://www.adobe.com/privacy.html"
                            }
                        },
                        {
                            "id": "gzm_cnf_TCzqniNA9UdOysIEkDfBGKuY~gzm_tool_4xQ4kXlpu0F0VYZjmEClwfZK",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [
                        {
                            "file_response_type": "live_file_response",
                            "id": "Ig6GSDpbeRp0BGSYhTvIjJck",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "file_response_type": "live_file_response",
                            "id": "gzm_cnf_TmS52Pyg89qXQ7nRNMBWVUu9~gzm_file_bB7VqZgUdyUrmilzLLP5hYyc",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-csharp",
                                "text/plain",
                                "application/x-powershell",
                                "text/x-lisp",
                                "text/x-diff",
                                "text/x-ruby",
                                "text/xml",
                                "text/html",
                                "text/x-tex",
                                "text/x-c++",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/vnd.oasis.opendocument.text",
                                "text/vbscript",
                                "text/x-java",
                                "text/x-c",
                                "text/javascript",
                                "application/vnd.apple.keynote",
                                "text/x-shellscript",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/css",
                                "application/javascript",
                                "application/json",
                                "message/rfc822",
                                "text/markdown",
                                "application/x-yaml",
                                "text/x-typescript",
                                "application/pdf",
                                "text/x-vcard",
                                "text/x-sh",
                                "text/x-rst",
                                "application/vnd.apple.pages",
                                "application/x-scala",
                                "text/calendar",
                                "text/x-python",
                                "application/x-rust",
                                "text/x-php",
                                "application/msword",
                                "application/vnd.ms-powerpoint",
                                "text/rtf",
                                "application/rtf",
                                "application/x-sql",
                                "text/x-script.python",
                                "text/x-asm",
                                "text/x-makefile"
                            ],
                            "image_mime_types": [
                                "image/webp",
                                "image/gif",
                                "image/jpeg",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-Hdq2AC858",
                        "organization_id": "org-z7KOLLcbs1dciYxXlGVjPMbA",
                        "short_url": "g-Hdq2AC858-link-reader",
                        "author": {
                            "user_id": "user-lbw7FZKix6BcSpXnoADmKeq4__ac6e7eb5-08d1-4033-97d8-2b51b8e4115d",
                            "display_name": null,
                            "link_to": null,
                            "is_verified": false,
                            "selected_display": "name",
                            "will_receive_support_emails": false,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": "ac6e7eb5-08d1-4033-97d8-2b51b8e4115d",
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Link Reader",
                            "description": "Read any links: webpage, youtube, PDF, PPT, image, Word doc etc; OCR image; Search & browse web.",
                            "prompt_starters": [
                                " Discover the latest developments from OpenAI! (Search for news using the keyword \"OpenAI.\")",
                                "What recent investment news deserves attention?",
                                "Find PDF documents about \"artificial intelligence\" and \"teaching\"",
                                "Search for some cute pet pictures."
                            ],
                            "profile_pic_id": "file-HDiyTU3MExop1kNthbpEECiF",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-HDiyTU3MExop1kNthbpEECiF?se=2123-11-04T06%3A06%3A53Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dlogo.png&sig=jLZY533NXohqL7DEn2wmkfuEM8HIHEWICem74GnGqw4%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-11T06:58:48.874790+00:00",
                        "updated_at": "2024-08-04T09:08:09.825134+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "uses_function_calls",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "s2ob6aaqE60xDK849WFEy1Ml",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-661106a797e72ab252b7491302f5536f804cd1a3",
                                "domain": "actions.sider.ai",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.1",
                                    "info": {
                                        "title": "Link Reader",
                                        "description": "A plugin capable of searching and reading link content, featuring a search interface similar to Google. It can access and return content from links, supporting platforms like YouTube, PDF, PPT, Google Drive, and more.",
                                        "version": "v1"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://actions.sider.ai/search"
                                        }
                                    ],
                                    "paths": {
                                        "/api/get": {
                                            "get": {
                                                "operationId": "getContent",
                                                "summary": "Get the content of any url, including web page URL,  PDF,  PPT, image, word, pages, numbers, excel and any other document URLs, google drive, google docs, google spreadsheet, youtube links, etc.",
                                                "parameters": [
                                                    {
                                                        "name": "url",
                                                        "in": "query",
                                                        "description": "The url to get the content from",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string",
                                                            "format": "uri"
                                                        }
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "OK",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/getContentResponse"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/api/search": {
                                            "get": {
                                                "operationId": "apiSearch",
                                                "summary": "Search Google and fetch JSON data",
                                                "parameters": [
                                                    {
                                                        "name": "q",
                                                        "in": "query",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "required": true,
                                                        "description": "The query you want to search."
                                                    },
                                                    {
                                                        "name": "gl",
                                                        "in": "query",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "The country to use for the Google search (e.g., us for the United States, uk for United Kingdom, or fr for France)."
                                                    },
                                                    {
                                                        "name": "hl",
                                                        "in": "query",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "The language to use for the Google search. It's a two-letter language code. (e.g., en for English, es for Spanish, or fr for French)."
                                                    },
                                                    {
                                                        "name": "tbm",
                                                        "in": "query",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "The \"tbm\" parameter enables you to define your preferred search type, including regular Google Search (no tbm parameter), image search (\"isch\"), or news search (\"nws\")."
                                                    },
                                                    {
                                                        "name": "start",
                                                        "in": "query",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "The result offset. It skips the given number of results. It's used for pagination."
                                                    },
                                                    {
                                                        "name": "num",
                                                        "in": "query",
                                                        "schema": {
                                                            "type": "string"
                                                        },
                                                        "description": "The maximum number of results to return. (e.g., 10 (minimum) returns 10 results)."
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "OK",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/apiSearchResponse"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "getContentResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "content": {
                                                        "type": "string",
                                                        "description": "The content of the url"
                                                    },
                                                    "statusCode": {
                                                        "type": "integer",
                                                        "description": "The status code of the request"
                                                    },
                                                    "statusText": {
                                                        "type": "string",
                                                        "description": "The status text of the request"
                                                    },
                                                    "headers": {
                                                        "type": "object",
                                                        "properties": {
                                                            "content-type": {
                                                                "type": "string",
                                                                "description": "The content type of the request"
                                                            },
                                                            "content-length": {
                                                                "type": "integer",
                                                                "description": "The content length of the request"
                                                            },
                                                            "date": {
                                                                "type": "string",
                                                                "description": "The date of the request"
                                                            },
                                                            "server": {
                                                                "type": "string",
                                                                "description": "The server of the request"
                                                            },
                                                            "last-modified": {
                                                                "type": "string",
                                                                "description": "The last modified date of the request"
                                                            }
                                                        }
                                                    },
                                                    "meta": {
                                                        "type": "object",
                                                        "properties": {
                                                            "og:title": {
                                                                "type": "string",
                                                                "description": "The title of the url"
                                                            },
                                                            "og:description": {
                                                                "type": "string",
                                                                "description": "The description of the url"
                                                            },
                                                            "og:image": {
                                                                "type": "string",
                                                                "description": "The main image of the url"
                                                            },
                                                            "og:type": {
                                                                "type": "string",
                                                                "description": "The type of the url"
                                                            }
                                                        }
                                                    }
                                                }
                                            },
                                            "apiSearchResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "answer_box": {
                                                        "type": "object",
                                                        "properties": {
                                                            "title": {
                                                                "type": "string",
                                                                "description": "The title of the answer box"
                                                            },
                                                            "link": {
                                                                "type": "string",
                                                                "description": "The link of the answer box"
                                                            },
                                                            "snippet": {
                                                                "type": "string",
                                                                "description": "The snippet of the answer box"
                                                            },
                                                            "images": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "description": "The image links of the answer box"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "knowledge_graph": {
                                                        "type": "object",
                                                        "properties": {
                                                            "title": {
                                                                "type": "string",
                                                                "description": "The title of the knowledge graph"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "description": "The type of entity in the knowledge graph"
                                                            },
                                                            "kgmid": {
                                                                "type": "string",
                                                                "description": "The unique identifier of the entity in the knowledge graph"
                                                            },
                                                            "description": {
                                                                "type": "string",
                                                                "description": "The description of the entity in the knowledge graph"
                                                            },
                                                            "source": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "name": {
                                                                        "type": "string",
                                                                        "description": "The name of the source"
                                                                    },
                                                                    "link": {
                                                                        "type": "string",
                                                                        "description": "The link to the source"
                                                                    }
                                                                }
                                                            },
                                                            "images": {
                                                                "type": "array",
                                                                "items": {
                                                                    "type": "string",
                                                                    "description": "The image links of the knowledge graph entity"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "organic_results": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "description": "The title of the organic result"
                                                                },
                                                                "link": {
                                                                    "type": "string",
                                                                    "description": "The link to the organic result"
                                                                },
                                                                "snippet": {
                                                                    "type": "string",
                                                                    "description": "The snippet of the organic result"
                                                                },
                                                                "source": {
                                                                    "type": "string",
                                                                    "description": "The source of the organic result"
                                                                },
                                                                "images": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "string",
                                                                        "description": "The image links of the organic result"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "video_results": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "description": "The title of the video result"
                                                                },
                                                                "link": {
                                                                    "type": "string",
                                                                    "description": "The link to the video result"
                                                                },
                                                                "snippet": {
                                                                    "type": "string",
                                                                    "description": "The snippet of the video result"
                                                                },
                                                                "thumbnail": {
                                                                    "type": "string",
                                                                    "description": "The link to the thumbnail of the video result"
                                                                },
                                                                "source": {
                                                                    "type": "string",
                                                                    "description": "The source of the video result"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "news_results": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "description": "The title of the news result"
                                                                },
                                                                "link": {
                                                                    "type": "string",
                                                                    "description": "The link to the news result"
                                                                },
                                                                "date": {
                                                                    "type": "string",
                                                                    "format": "date-time",
                                                                    "description": "The publication date of the news result"
                                                                },
                                                                "snippet": {
                                                                    "type": "string",
                                                                    "description": "The snippet of the news result"
                                                                },
                                                                "category": {
                                                                    "type": "string",
                                                                    "description": "The category of the news result"
                                                                },
                                                                "thumbnail": {
                                                                    "type": "string",
                                                                    "description": "The link to the thumbnail of the news result"
                                                                },
                                                                "source": {
                                                                    "type": "string",
                                                                    "description": "The source of the news result"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "images_results": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "description": "The title of the image result"
                                                                },
                                                                "original": {
                                                                    "type": "string",
                                                                    "description": "The original source url of the image"
                                                                },
                                                                "link": {
                                                                    "type": "string",
                                                                    "description": "The link to the result page"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "pagination": {
                                                        "type": "object",
                                                        "properties": {
                                                            "current": {
                                                                "type": "integer",
                                                                "description": "The current page number"
                                                            },
                                                            "next": {
                                                                "type": "string",
                                                                "description": "The query parameters for the next page"
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://gochitchat.ai/policies.html"
                            }
                        },
                        {
                            "id": "gzm_cnf_326FReveCYlY4hBHNmocwHoT~gzm_tool_OpsqtFxIReiILT4IfWT439rq",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_326FReveCYlY4hBHNmocwHoT~gzm_tool_pyGWr2FS23euQorzw95oo7Dc",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-csharp",
                                "text/plain",
                                "application/x-powershell",
                                "text/x-lisp",
                                "text/x-diff",
                                "text/x-ruby",
                                "text/xml",
                                "text/html",
                                "text/x-tex",
                                "text/x-c++",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/vnd.oasis.opendocument.text",
                                "text/vbscript",
                                "text/x-java",
                                "text/x-c",
                                "text/javascript",
                                "application/vnd.apple.keynote",
                                "text/x-shellscript",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/css",
                                "application/javascript",
                                "application/json",
                                "message/rfc822",
                                "text/markdown",
                                "application/x-yaml",
                                "text/x-typescript",
                                "application/pdf",
                                "text/x-vcard",
                                "text/x-sh",
                                "text/x-rst",
                                "application/vnd.apple.pages",
                                "application/x-scala",
                                "text/calendar",
                                "text/x-python",
                                "application/x-rust",
                                "text/x-php",
                                "application/msword",
                                "application/vnd.ms-powerpoint",
                                "text/rtf",
                                "application/rtf",
                                "application/x-sql",
                                "text/x-script.python",
                                "text/x-asm",
                                "text/x-makefile"
                            ],
                            "image_mime_types": [
                                "image/webp",
                                "image/gif",
                                "image/jpeg",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-0QDef4GiE",
                        "organization_id": "org-gSUSgYAnx3RkmtRpdFctKU8d",
                        "short_url": "g-0QDef4GiE-prompt-perfect",
                        "author": {
                            "user_id": "user-glMHuK5wnoF9nvBlgHGkftiK",
                            "display_name": "promptperfect.xyz",
                            "link_to": "https://promptperfect.xyz",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": true,
                            "display_socials": [
                                {
                                    "id": "twitterverify-43d2-b12a-bbe33d600487",
                                    "type": "twitter",
                                    "display_name": "X",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "1657153891564154885",
                                        "username": "@Prompt_Perfect",
                                        "type": "twitter",
                                        "link_to": "https://twitter.com/Prompt_Perfect"
                                    }
                                }
                            ]
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Prompt Perfect",
                            "description": "Automatically enhance your prompts with detail and clarity for fast, accurate results.",
                            "prompt_starters": [
                                "How does this work?",
                                " Explain taxes. I'm a novice.",
                                "Search for the latest announcements in AI",
                                "Make an image of a historical figure if they were Gen Z"
                            ],
                            "profile_pic_id": "file-5uWtQ9BjAaY5Bo2ueh3B7jYe",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-5uWtQ9BjAaY5Bo2ueh3B7jYe?se=2123-12-26T01%3A56%3A17Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3Dprompt_perfect_logo.png&sig=OpoR5yd6Qo/YbkdQALQpfniPGcLHyOSEaUO8UfQYWYw%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-06T21:15:45.276171+00:00",
                        "updated_at": "2024-08-04T09:09:16.764888+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "unreviewable",
                            "public",
                            "reportable",
                            "uses_function_calls",
                            "interactions_disabled"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null,
                        "current_user_permission": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_TvLnNN3rM9wNnVUwTvDNDfSw~gzm_tool_nfiStQ053swOqWfNuVK64wnj",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_TvLnNN3rM9wNnVUwTvDNDfSw~gzm_tool_5OghSFRJyu7d6WUgoo5htETl",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_TvLnNN3rM9wNnVUwTvDNDfSw~gzm_tool_PkriD43aui65MDTb2YSn1J4j",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "uhbouwkcwJOd7FnoEv9dbZy1",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-71fc4f8f180393d1c7d681330015577aa4dc22aa",
                                "domain": "plugin.promptperfect.xyz",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.1",
                                    "info": {
                                        "title": "Prompt Perfect",
                                        "description": "A plugin that rephrases prompts deemed unclear, overly brief, or missing necessary information into clearer, more specific, and contextual prompts.",
                                        "version": "v1"
                                    },
                                    "paths": {
                                        "/rephrase": {
                                            "post": {
                                                "operationId": "rephrasePrompt",
                                                "summary": "Rephrase the given prompt",
                                                "x-openai-isConsequential": false,
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/Prompt"
                                                            },
                                                            "example": {
                                                                "text": "Write a tweet"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "OK",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/RephrasedPrompt"
                                                                },
                                                                "example": {
                                                                    "text": "Compose a highly detailed and engaging tweet. Keep the tweet within the 280-character limit"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "Prompt": {
                                                "type": "object",
                                                "properties": {
                                                    "conversation_id": {
                                                        "type": "string",
                                                        "description": "The conversation ID."
                                                    },
                                                    "text": {
                                                        "type": "string",
                                                        "description": "The prompt text to be rephrased."
                                                    }
                                                }
                                            },
                                            "RephrasedPrompt": {
                                                "type": "object",
                                                "properties": {
                                                    "conversation_id": {
                                                        "type": "string",
                                                        "description": "The conversation ID."
                                                    },
                                                    "rephrased": {
                                                        "type": "object",
                                                        "properties": {
                                                            "text": {
                                                                "type": "string",
                                                                "description": "The rephrased prompt text."
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "servers": [
                                        {
                                            "url": "https://plugin.promptperfect.xyz"
                                        }
                                    ]
                                },
                                "auth": {
                                    "type": "oauth",
                                    "instructions": "",
                                    "client_url": "https://plugin.promptperfect.xyz/oauth/authorize",
                                    "scope": "all",
                                    "authorization_url": "https://plugin.promptperfect.xyz/oauth/token",
                                    "authorization_content_type": "application/x-www-form-urlencoded",
                                    "verification_tokens": {},
                                    "pkce_required": false,
                                    "token_exchange_method": "default_post"
                                },
                                "privacy_policy_url": "https://promptperfect.xyz/static/privacy.html"
                            }
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/x-csharp",
                                "text/plain",
                                "application/x-powershell",
                                "text/x-lisp",
                                "text/x-diff",
                                "text/x-ruby",
                                "text/xml",
                                "text/html",
                                "text/x-tex",
                                "text/x-c++",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/vnd.oasis.opendocument.text",
                                "text/vbscript",
                                "text/x-java",
                                "text/x-c",
                                "text/javascript",
                                "application/vnd.apple.keynote",
                                "text/x-shellscript",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/css",
                                "application/javascript",
                                "application/json",
                                "message/rfc822",
                                "text/markdown",
                                "application/x-yaml",
                                "text/x-typescript",
                                "application/pdf",
                                "text/x-vcard",
                                "text/x-sh",
                                "text/x-rst",
                                "application/vnd.apple.pages",
                                "application/x-scala",
                                "text/calendar",
                                "text/x-python",
                                "application/x-rust",
                                "text/x-php",
                                "application/msword",
                                "application/vnd.ms-powerpoint",
                                "text/rtf",
                                "application/rtf",
                                "application/x-sql",
                                "text/x-script.python",
                                "text/x-asm",
                                "text/x-makefile"
                            ],
                            "image_mime_types": [
                                "image/webp",
                                "image/gif",
                                "image/jpeg",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            }
        ],
        "cursor": null
    }
}