{
    "info": {
        "id": "programming",
        "title": "Programming",
        "description": "Write code, debug, test, and learn",
        "display_type": "ranked",
        "display_group": "Programming",
        "locale": "en"
    },
    "list": {
        "items": [
            {
                "resource": {
                    "gizmo": {
                        "id": "g-jBdvgesNC",
                        "organization_id": "org-Q1sNHSCUqwEjWNY5mF5CsQO5",
                        "short_url": "g-jBdvgesNC-mindmapdiagram-chart-pro-builder-free",
                        "author": {
                            "user_id": "user-G4p1yJeaaveeVcqU3SOAhKEe",
                            "display_name": "pyxl.ai",
                            "link_to": "https://pyxl.ai",
                            "selected_display": "website",
                            "is_verified": true,
                            "will_receive_support_emails": true,
                            "socials": {}
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "MindmapðŸ“ŠDiagram ðŸ“ˆChart- PRO BUILDER-âš¡FREEâš¡",
                            "description": "Visualize Code&Databases, Create Flowcharts, Charts & Sequences. Drag-N-Drop Edit.",
                            "welcome_message": "",
                            "prompt_starters": [
                                "MINDMAP DEMO: Create a mindmap about Social Media post types for a product. Come up with stuff as needed",
                                "DATABASE DEMO: Create a diagram to illustrate the structure of some database. Come up with stuff as needed for a demo",
                                "DATA FLOW DEMO: create an illustration for a complicated in app data transfers",
                                "Create a visualization of..."
                            ],
                            "profile_pic_id": "file-xKCtSgOygqqxyCe6UsPU8lGn",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-xKCtSgOygqqxyCe6UsPU8lGn?se=2124-01-05T08%3A56%3A25Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DDALL%25C2%25B7E%25202024-01-29%252000.13.10%2520-%2520Design%2520a%2520square%2520app%2520icon%2520featuring%2520the%2520simplest%2520database%2520schema_%2520a%2520bright%2520database%2520connected%2520with%2520arrows%2520to%25203%2520small%2520bright%2520squares%252C%2520using%2520bright%2520prima.png&sig=4tkQKGgSyxmHuE23AJLmtRQN/tB794hh2JvbI2wzyFQ%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2024-01-10T23:20:32.477425+00:00",
                        "updated_at": "2024-02-03T06:30:19.073798+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_cgHhcu8zAfU7QT1dDNH3aVdd~gzm_tool_P0Q7SYOHHabOIBN2BaZTjKS1",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-14bea02a6075254d94b6833c95c12cced4c2e0cd",
                                "domain": "www.drafty.pro",
                                "raw_spec": "{\n  \"openapi\": \"3.1.0\",\n  \"info\": {\n    \"title\": \"GPT Companion\",\n    \"version\": \"1.0\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://www.drafty.pro\",\n      \"description\": \"Development server\"\n    }\n  ],\n  \"components\": {\n    \"schemas\": {},\n    \"parameters\": {}\n  },\n  \"paths\": {\n    \"/api/gpt/getGuides\": {\n      \"post\": {\n        \"summary\": \"Endpoint to get guides to create diagram\",\n        \"x-openai-isConsequential\": false,\n        \"operationId\": \"post_GetGuides\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"graph\",\n                      \"class\",\n                      \"sequence\",\n                      \"mindmap\",\n                      \"timeline\",\n                      \"entity-relationship\",\n                      \"pie-chart\",\n                      \"drafty-database\"\n                    ],\n                    \"description\": \"Type of the diagram\",\n                    \"example\": \"graph\"\n                  }\n                },\n                \"required\": [\n                  \"type\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Guides for creating this type of diagrams\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"guide\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\n                    \"guide\"\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/api/gpt/renderDiagram\": {\n      \"post\": {\n        \"summary\": \"\",\n        \"x-openai-isConsequential\": false,\n        \"operationId\": \"post_RenderDiagram\",\n        \"requestBody\": {\n          \"content\": {\n            \"application/json\": {\n              \"schema\": {\n                \"type\": \"object\",\n                \"properties\": {\n                  \"type\": {\n                    \"type\": \"string\",\n                    \"enum\": [\n                      \"graph\",\n                      \"class\",\n                      \"sequence\",\n                      \"mindmap\",\n                      \"timeline\",\n                      \"entity-relationship\",\n                      \"pie-chart\",\n                      \"drafty-database\"\n                    ],\n                    \"description\": \"Type of the diagram\",\n                    \"example\": \"graph\"\n                  },\n                  \"diagramString\": {\n                    \"type\": \"string\",\n                    \"description\": \"The string for the chart rendering\"\n                  },\n                  \"documentName\": {\n                    \"type\": \"string\",\n                    \"description\": \"The name of the document in which the diagram will be placed\"\n                  },\n                  \"diagramTags\": {\n                    \"type\": \"string\",\n                    \"description\": \"For your diagram, include a total of 10 tags, written with commas in between. The first tag should be the primary one, characterizing the overall purpose of the diagram, such as #SMS for a social media marketing diagram or #Database for a database structure. The subsequent tags should provide additional details about the content, tools, focus, and key elements of the diagram, enhancing its searchability and identification.\",\n                    \"example\": \"#Database, #DataModeling, #ERDiagram, #SQL, #Normalization, #DataStructure, #SchemaDesign, #RelationalDB, #DataIntegrity, #QueryOptimization\"\n                  },\n                  \"isContainsPrivateInfo\": {\n                    \"type\": \"boolean\",\n                    \"description\": \"If you notice the user input includes personal details such as their full name, email address, phone number, home address, company name, or any other identifiable information, then set this flag to true.\"\n                  }\n                },\n                \"required\": [\n                  \"type\",\n                  \"diagramString\",\n                  \"documentName\",\n                  \"diagramTags\",\n                  \"isContainsPrivateInfo\"\n                ]\n              }\n            }\n          }\n        },\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Diagram successfully rendered\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"link\": {\n                      \"type\": \"string\",\n                      \"description\": \"Link to edit diagram, show after rendering the preview. and write If you wish to save the diagram in SVG format or modify it, please follow the link.\"\n                    },\n                    \"previewLink\": {\n                      \"type\": \"string\",\n                      \"description\": \"link to the preview of the presentation, you should render it in line using markdown ![alt text](link)\"\n                    }\n                  }\n                }\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Error while rendering the diagram\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"type\": \"object\",\n                  \"properties\": {\n                    \"errorMessage\": {\n                      \"type\": \"string\"\n                    }\n                  },\n                  \"required\": [\n                    \"errorMessage\"\n                  ]\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"webhooks\": {}\n}",
                                "json_schema": null,
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://www.drafty.pro/policy"
                            }
                        },
                        {
                            "id": "gzm_cnf_1hkokj4bWLVLozhPnFDcuASy~gzm_tool_gkSGvY0fN7kj4vNAvjIZAdBD",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_k44Q0IaYt7ct0ofWqNBdAqlQ~gzm_tool_QnoE8Ngs4gkd4MV2r8hGnn4U",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_1hkokj4bWLVLozhPnFDcuASy~gzm_tool_KHQGsX3FSPACoO6y22E5AM5j",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/markdown",
                                "text/x-ruby",
                                "application/msword",
                                "text/x-csharp",
                                "text/javascript",
                                "application/x-latext",
                                "text/x-sh",
                                "text/x-c++",
                                "text/x-php",
                                "text/html",
                                "application/pdf",
                                "application/json",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-c",
                                "text/x-java",
                                "text/x-tex",
                                "text/plain",
                                "text/x-typescript",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/jpeg",
                                "image/webp",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-2DQzU5UZl",
                        "organization_id": "org-JYIjv71VrRxSi7ON7eyQnBbd",
                        "short_url": "g-2DQzU5UZl-code-copilot",
                        "author": {
                            "user_id": "user-6aFDZhDCRHmM3i0cFMPreja8",
                            "display_name": "promptspellsmith.com",
                            "link_to": "https://promptspellsmith.com",
                            "selected_display": "website",
                            "is_verified": true,
                            "will_receive_support_emails": true,
                            "socials": {}
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Code Copilot",
                            "description": "Code Smarter, Build Fasterâ€”With the Expertise of a 10x Programmer by Your Side.",
                            "welcome_message": "Hello",
                            "prompt_starters": [
                                "/start python",
                                "/search ln -s",
                                "/fix",
                                "/readme"
                            ],
                            "profile_pic_id": "file-rPvmtaeOjKELh5SjSJIoC2bn",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-rPvmtaeOjKELh5SjSJIoC2bn?se=2123-12-21T14%3A52%3A47Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3Dfile-UQLX4c22Xf5n5sxQqAnvnIzS.png&sig=v6T1iw/Xv54UzVzflRcKYJfB73LMBzFC4qTOdC68H1E%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-07T01:00:36.878445+00:00",
                        "updated_at": "2024-02-05T04:42:27.165681+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_Q5xenVVRggXomhbe90xgLcbU~gzm_tool_60B6cSC6hTzOhgPXVvCVrMwi",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_Q5xenVVRggXomhbe90xgLcbU~gzm_tool_3CRytLrqQsX3rCLeB8BGz0KA",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [
                        {
                            "id": "gzm_cnf_kOuHhc5aVXp1aGjecUSzNRSr~gzm_file_4afV41ju25h37WlLXaIWLS11",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_Mwd4HDucEsRvKBszwzIJcZcg~gzm_file_nHBbtblvEaUgc0YvA0iqP4qD",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/markdown",
                                "text/x-ruby",
                                "application/msword",
                                "text/x-csharp",
                                "text/javascript",
                                "application/x-latext",
                                "text/x-sh",
                                "text/x-c++",
                                "text/x-php",
                                "text/html",
                                "application/pdf",
                                "application/json",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-c",
                                "text/x-java",
                                "text/x-tex",
                                "text/plain",
                                "text/x-typescript",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/jpeg",
                                "image/webp",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-qqTuUWsBY",
                        "organization_id": "org-hZRtglLxBYvAvvtxhca6Qoso",
                        "short_url": "g-qqTuUWsBY-crewai-assistant",
                        "author": {
                            "user_id": "user-Z7G4wMLazxqvC5wjYAAaoCfz",
                            "display_name": "JOAO M DURAES MOURA",
                            "link_to": null,
                            "selected_display": "name",
                            "is_verified": true,
                            "will_receive_support_emails": true,
                            "socials": {}
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "CrewAI Assistant",
                            "description": "CrewAI Python expert.",
                            "welcome_message": "Hello! Whether you're new or experienced, let's tackle CrewAI in Python together.",
                            "prompt_starters": [
                                "Help me create a crew for a use case",
                                "What are some advanced CrewAI features?",
                                "How can I set up a Crew myself?",
                                "Explain CrewAI for me"
                            ],
                            "profile_pic_id": null,
                            "profile_picture_url": "https://files.oaiusercontent.com/file-SGuuFVdt9o6aEisoJqE6jKCS?se=2123-10-21T20%3A17%3A56Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D672061c4-217c-48c7-adf7-eab1db1e6dc8.png&sig=COYTkk8ZnC68RFZvgrPwuGt/q1TDqrEbXEY2CSTLSq4%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-14T18:42:24.210719+00:00",
                        "updated_at": "2024-01-31T06:43:54.585521+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_8BuqghMQSyKxTyyu3tq42PiJ~gzm_tool_WKGxuXyHbeOEHG3QTxWNGfxC",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_8BuqghMQSyKxTyyu3tq42PiJ~gzm_tool_RE324Ho8tAfzR0RLdsQCo0qL",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_8BuqghMQSyKxTyyu3tq42PiJ~gzm_tool_EPFrUVqlCSD73dx840iGAXOX",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_hUw3agpVQlLiuxjYdA0M70J5~gzm_tool_cJolbshlUUkN6LXQhOnRJD93",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-a8591873eda85280314c1bf13acf1d254c803d0d",
                                "domain": "crew-ai-custom-gpt-crewai.replit.app",
                                "raw_spec": "{\n  \"openapi\": \"3.1.0\",\n  \"info\": {\n    \"title\": \"crewAI custom GPT API\",\n    \"description\": \"API for supporting crewAI GPT\",\n    \"version\": \"0.1\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://crew-ai-custom-gpt-crewai.replit.app\",\n      \"description\": \"Main API server\"\n    }\n  ],\n  \"paths\": {\n    \"/read_crewai_code/{code_class}\": {\n      \"get\": {\n        \"summary\": \"Read Code\",\n        \"operationId\": \"read_code_read_crewai_code__code_class__get\",\n        \"parameters\": [\n          {\n            \"name\": \"code_class\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"title\": \"Code Class\",\n              \"enum\": [\n                \"agent\",\n                \"task\",\n                \"crew\",\n                \"process\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/agent_examples/{type}\": {\n      \"get\": {\n        \"summary\": \"Agent Examples\",\n        \"operationId\": \"agent_examples_agent_examples__type__get\",\n        \"parameters\": [\n          {\n            \"name\": \"type\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"title\": \"Type\",\n              \"enum\": [\n                \"travel_related_examples\",\n                \"financial_related_examples\",\n                \"landing_page_generation_related_examples\",\n                \"marketing_related_examples\",\n                \"game_generation_related_examples\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    },\n    \"/task_examples/{type}\": {\n      \"get\": {\n        \"summary\": \"Task Examples\",\n        \"operationId\": \"task_examples_task_examples__type__get\",\n        \"parameters\": [\n          {\n            \"name\": \"type\",\n            \"in\": \"path\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\",\n              \"title\": \"Type\",\n              \"enum\": [\n                \"travel_related_examples\",\n                \"financial_related_examples\",\n                \"marketing_related_examples\",\n                \"game_generation_related_examples\"\n              ]\n            }\n          }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"Successful Response\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {}\n              }\n            }\n          },\n          \"422\": {\n            \"description\": \"Validation Error\",\n            \"content\": {\n              \"application/json\": {\n                \"schema\": {\n                  \"$ref\": \"#/components/schemas/HTTPValidationError\"\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  },\n  \"components\": {\n    \"schemas\": {\n      \"HTTPValidationError\": {\n        \"properties\": {\n          \"detail\": {\n            \"items\": {\n              \"$ref\": \"#/components/schemas/ValidationError\"\n            },\n            \"type\": \"array\",\n            \"title\": \"Detail\"\n          }\n        },\n        \"type\": \"object\",\n        \"title\": \"HTTPValidationError\"\n      },\n      \"ValidationError\": {\n        \"properties\": {\n          \"loc\": {\n            \"items\": {\n              \"anyOf\": [\n                {\n                  \"type\": \"string\"\n                },\n                {\n                  \"type\": \"integer\"\n                }\n              ]\n            },\n            \"type\": \"array\",\n            \"title\": \"Location\"\n          },\n          \"msg\": {\n            \"type\": \"string\",\n            \"title\": \"Message\"\n          },\n          \"type\": {\n            \"type\": \"string\",\n            \"title\": \"Error Type\"\n          }\n        },\n        \"type\": \"object\",\n        \"required\": [\n          \"loc\",\n          \"msg\",\n          \"type\"\n        ],\n        \"title\": \"ValidationError\"\n      }\n    }\n  }\n}",
                                "json_schema": null,
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://crew-ai-custom-gpt-crewai.replit.app/privacy"
                            }
                        }
                    ],
                    "files": [
                        {
                            "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_7TVmiiDI9RL6lxqU7inLCjAS",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_z9dPtIoYgQQ3pRQEGSq9hblg",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_6Uxy0KXk3dKj0pjxgRZWoqW5",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_EpD5Tpg9zpqRl9Ai3ahcKpDu",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_29l4SDlLX9h98Y8r1f7ii9e1",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_n1jhKtZJA5ti73MAKsQrqjwM",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_dhgJGS8hgYnW5BciyRIyMTW2",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_bqJ6UncnwiHyqXAwLzW77Mm7~gzm_file_smAqCtPQPdLH3778p40hRTF5",
                            "type": "application/zip",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_K3IDp7FlLGe2yCKXpYZHdEnd~gzm_file_QZdR7klO6lpxHw8pyrYuVoZY",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_qQBILWLi7AXr3Uo45ZCaSB6v~gzm_file_R6tKe1luQPazWovGf7uf4VEj",
                            "type": "",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/markdown",
                                "text/x-ruby",
                                "application/msword",
                                "text/x-csharp",
                                "text/javascript",
                                "application/x-latext",
                                "text/x-sh",
                                "text/x-c++",
                                "text/x-php",
                                "text/html",
                                "application/pdf",
                                "application/json",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-c",
                                "text/x-java",
                                "text/x-tex",
                                "text/plain",
                                "text/x-typescript",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/jpeg",
                                "image/webp",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-3s6SJ5V7S",
                        "organization_id": "org-mlOwKwxqA3vR6M4sREuIZXu5",
                        "short_url": "g-3s6SJ5V7S-askthecode",
                        "author": {
                            "user_id": "user-8cru96dnXZrsPTbKYqeTQgVj",
                            "display_name": "docs.askthecode.ai",
                            "link_to": "https://docs.askthecode.ai",
                            "selected_display": "website",
                            "is_verified": true,
                            "will_receive_support_emails": true,
                            "socials": {}
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "AskTheCode",
                            "description": "Provide a GitHub repository URL and ask about any aspect of the code.",
                            "welcome_message": "Hello",
                            "prompt_starters": [
                                "How to use the AskTheCode GPT?",
                                "Please give me an example of how to use the repository https://github.com/langchain-ai/langchainjs",
                                "Please give an overview of the issue https://github.com/langchain-ai/langchain/issues/1358",
                                "Please describe the changes made in  the commit https://github.com/microsoft/semantic-kernel/commit/b346353bfba45f54461a3abb889925d9f353ad43",
                                "Please search for the Qdrant store implementation in https://github.com/microsoft/semantic-kernel"
                            ],
                            "profile_pic_id": "file-aWCgLB79dBX0EDbdex69ke2u",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-aWCgLB79dBX0EDbdex69ke2u?se=2123-10-13T22%3A19%3A16Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dlogo.jpg&sig=CNuXkZEhlT4xOvQLD1Ck8DVuHBAFElHoABiE1WuyX1U%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-06T21:44:57.429149+00:00",
                        "updated_at": "2024-02-04T04:33:24.362462+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_axkp8c3xg3XXtFzzSr8BkWBY~gzm_tool_YxDgvAwF6dwkN6T2wt8d9jh9",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-78baf1f03e18805d542716fa4c7d5ea110c417fe",
                                "domain": "pluginlab.askthecode.dsomok.online",
                                "raw_spec": "openapi: 3.0.1\ninfo:\n  title: AskTheCode Plugin\n  description: Plugin to explain the code from Github and assist with its usage. Works with the provided Github file link.\n  version: v1\nservers:\n  - url: https://pluginlab.askthecode.dsomok.online\npaths:\n  /api/repository/structure:\n    post:\n      tags:\n        - Repository\n      summary: 'Retrieves the Github repository file structure to analyze it and be able to query only relevant files. If the provided URL contains specific branch and directory information, prioritize using that over querying the entire repository structure.'\n      operationId: GetRepositoryStructure\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/StructureRequestDto'\n      responses:\n        '200':\n          description: Returns the github repository structure\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/StructureResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: false\n  /api/repository/content:\n    post:\n      tags:\n        - Repository\n      summary: 'Retrieves github repository file contents, possibly filtered by file names. NEVER query this endpoint without previously querying GetRepositoryStructure endpoint and when the next step is set to GetRepositoryStructure.'\n      operationId: GetRepositoryContent\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ContentRequestDto'\n      responses:\n        '200':\n          description: Returns the contents of the requested files\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/RepositoryContentResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: false\n  /api/repository/branch/list:\n    post:\n      tags:\n        - RepositoryBranch\n      summary: Retrieves the list of branches in the repository\n      operationId: ListRepositoryBranches\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/ListRepositoryBranchesRequestDto'\n      responses:\n        '200':\n          description: Returns the list of repository branches\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/ListRepositoryBranchesResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: false\n  /api/repository/branch/create:\n    post:\n      tags:\n        - RepositoryBranch\n      summary: Creates new repository branch\n      operationId: CreateRepositoryBranch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateRepositoryBranchRequestDto'\n      responses:\n        '200':\n          description: Returns the result of the branch creation\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateRepositoryBranchResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: true\n  /api/repository/branch/delete:\n    post:\n      tags:\n        - RepositoryBranch\n      summary: Deletes repository branch\n      operationId: DeleteRepositoryBranch\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteRepositoryBranchRequestDto'\n      responses:\n        '200':\n          description: Returns the result of the branch deletion\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteRepositoryBranchResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: true\n  /api/repository/commit/history:\n    post:\n      tags:\n        - RepositoryCommits\n      summary: Retrieves commit history for a specific file\n      operationId: GetRepositoryCommitHistory\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CommitHistoryRequestDto'\n      responses:\n        '200':\n          description: Returns the commits history for the specific file\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommitHistoryResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: false\n  /api/repository/commit/overview:\n    post:\n      tags:\n        - RepositoryCommits\n      summary: Retrieves commit overview by the commit SHA\n      operationId: GetRepositoryCommitOverview\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CommitOverviewRequestDto'\n      responses:\n        '200':\n          description: Returns the commit overview\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommitOverviewResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: false\n  /api/repository/commit/changes:\n    post:\n      tags:\n        - RepositoryCommits\n      summary: Retrieves commit file changes by the commit SHA\n      operationId: GetRepositoryCommitChanges\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CommitChangesRequestDto'\n      responses:\n        '200':\n          description: Returns the commit overview\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CommitChangesResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: false\n  /api/repository/file/update/checkout:\n    post:\n      tags:\n        - RepositoryFile\n      summary: Checkouts file for update and retrieves github repository file content for edit and update. This content should be used when using the UpdateRepositoryFile endpoint for updating the file content.\n      operationId: CheckoutRepositoryFileForUpdate\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CheckoutRepositoryFileRequestDto'\n      responses:\n        '200':\n          description: 'Returns the content of the file for updating. The response contains line numbers, never show them to the end user.'\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CheckoutRepositoryFileResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: false\n  /api/repository/file/create:\n    post:\n      tags:\n        - RepositoryFile\n      summary: Creates repository file. You MUST always print the code block with the content of the change you are going to send prior invoking this endpoint\n      operationId: CreateRepositoryFile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/CreateRepositoryFileRequestDto'\n      responses:\n        '200':\n          description: Returns the github repository file creation result.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/CreateRepositoryFileResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: true\n  /api/repository/file/update:\n    post:\n      tags:\n        - RepositoryFile\n      summary: Updates repository file. Never use this endpoint before checking the file out for edit using the CheckoutRepositoryFileForEdit endpoint. You MUST always print the code block with the content of the change you are going to send prior invoking this endpoint\n      operationId: UpdateRepositoryFile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/UpdateRepositoryFileRequestDto'\n      responses:\n        '200':\n          description: Returns the github repository file update result.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/UpdateRepositoryFileResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: true\n  /api/repository/file/delete:\n    post:\n      tags:\n        - RepositoryFile\n      summary: Deletes the repository file. Use this endpoint when user asks to delete the file. Invoking CheckoutRepositoryFileForUpdate endpoint is not needed.\n      operationId: DeleteRepositoryFile\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/DeleteRepositoryFileRequestDto'\n      responses:\n        '200':\n          description: Returns the repository file deletion result.\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/DeleteRepositoryFileResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: true\n  /api/repository/issue:\n    post:\n      tags:\n        - RepositoryIssues\n      summary: Retrieves github issue and its comments by the issue URL\n      operationId: GetRepositoryIssue\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/IssueRequestDto'\n      responses:\n        '200':\n          description: Returns the issue with its comments\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/IssueResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: false\n  /api/repository/issue/comment/post:\n    post:\n      tags:\n        - RepositoryIssues\n      summary: Posts the comment under the github issue specified by the issue URL\n      operationId: PostRepositoryIssueComment\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/PostIssueCommentRequestDto'\n      responses:\n        '200':\n          description: Returns the result of the comment posting\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/PostIssueCommentResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: true\n  /api/search/repository/code:\n    post:\n      tags:\n        - Search\n      summary: 'Search code by user specified keywords. Use when user explicitly asked to search for something. Otherwise prefer to fetch the repository structure. Invoke only with user-specified, specific keywords (e.g., file, class, method names). Avoid generic terms.'\n      operationId: SearchCode\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchCodeRequestDto'\n      responses:\n        '200':\n          description: Returns search by code results\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchCodeResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: false\n  /api/search/repository/issues:\n    post:\n      tags:\n        - Search\n      summary: Search issues by user specified keywords. Use only when user explicitly asked to search for issues and provided search query.\n      operationId: SearchIssues\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchIssuesRequestDto'\n      responses:\n        '200':\n          description: Returns found issues\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchIssuesResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: false\n  /api/search/repository/commits:\n    post:\n      tags:\n        - Search\n      summary: Search commits by user specified keywords. Use only when user explicitly asked to search for commits and provided search query.\n      operationId: SearchCommits\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchCommitsRequestDto'\n      responses:\n        '200':\n          description: Returns found issues\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchCommitsResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: false\n  /api/search/repository:\n    post:\n      tags:\n        - Search\n      summary: Search repositories by user specified keywords. Use only when user explicitly asked to search for repositories and provided search query.\n      operationId: SearchRepositories\n      requestBody:\n        content:\n          application/json:\n            schema:\n              $ref: '#/components/schemas/SearchRepositoriesRequestDto'\n      responses:\n        '200':\n          description: Returns found repositories\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/SearchRepositoriesResponseDto'\n      security:\n        - Bearer: [ ]\n      x-openai-isConsequential: false\ncomponents:\n  schemas:\n    CheckoutRepositoryFileRequestDto:\n      required:\n        - url\n      type: object\n      properties:\n        url:\n          minLength: 1\n          type: string\n          description: 'Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]. ALWAYS pass the full URL provided by user, this is crucial for the correct response.'\n        branch:\n          type: string\n          description: Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it.\n          nullable: true\n        filePath:\n          type: string\n          description: Paths to the file. Provide only if user has explicitly specified it or the previous plugin response contains it.\n          nullable: true\n      additionalProperties: false\n    CheckoutRepositoryFileResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n        fileContent:\n          $ref: '#/components/schemas/FileContentDto'\n      additionalProperties: false\n    CommitChangesRequestDto:\n      required:\n        - commitUrl\n      type: object\n      properties:\n        commitUrl:\n          minLength: 1\n          type: string\n          description: 'Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]. ALWAYS pass the full URL provided by user, this is crucial for the correct response.'\n        fromFileName:\n          type: string\n          description: Name of the file to start grabbing changes from. Pass it when you want to query the continuation of the commit changes\n          nullable: true\n      additionalProperties: false\n    CommitChangesResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n        commit:\n          $ref: '#/components/schemas/RepositoryCommitChangesDto'\n      additionalProperties: false\n    CommitHistoryCommitDto:\n      type: object\n      properties:\n        commitUrl:\n          type: string\n          nullable: true\n          readOnly: true\n        message:\n          type: string\n          nullable: true\n          readOnly: true\n        commitDate:\n          type: string\n          format: date-time\n          readOnly: true\n        author:\n          type: string\n          nullable: true\n          readOnly: true\n      additionalProperties: false\n    CommitHistoryRequestDto:\n      required:\n        - url\n      type: object\n      properties:\n        url:\n          minLength: 1\n          type: string\n          description: 'Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]. ALWAYS pass the full URL provided by user, this is crucial for the correct response.'\n        branch:\n          type: string\n          description: Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it\n          nullable: true\n        filePath:\n          type: string\n          description: Path to the file to request the commit history for. Use path relative to the root directory of the repository\n          nullable: true\n      additionalProperties: false\n    CommitHistoryResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n        filePath:\n          type: string\n          description: File path the history is returned for\n          nullable: true\n          readOnly: true\n        commits:\n          type: array\n          items:\n            $ref: '#/components/schemas/CommitHistoryCommitDto'\n          description: 'List of commits in the file history, ordered by date'\n          nullable: true\n          readOnly: true\n        count:\n          type: integer\n          description: True if not all commits have been returned returned\n          format: int32\n          readOnly: true\n      additionalProperties: false\n    CommitOverviewRequestDto:\n      required:\n        - commitUrl\n      type: object\n      properties:\n        commitUrl:\n          minLength: 1\n          type: string\n          description: 'Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]. ALWAYS pass the full URL provided by user, this is crucial for the correct response.'\n      additionalProperties: false\n    CommitOverviewResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n        commit:\n          $ref: '#/components/schemas/RepositoryCommitOverviewDto'\n      additionalProperties: false\n    ContentRequestDto:\n      required:\n        - filePaths\n        - url\n      type: object\n      properties:\n        url:\n          minLength: 1\n          type: string\n          description: 'Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]. ALWAYS pass the full URL provided by user, this is crucial for the correct response.'\n        branch:\n          type: string\n          description: 'Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it. When requesting file from commit, use commit SHA.'\n          nullable: true\n        relativePath:\n          type: string\n          description: Relative paths to the directory. Provide only if user has explicitly specified it or the previous plugin response contains it.\n          nullable: true\n        filePaths:\n          type: array\n          items:\n            type: string\n          description: 'Files to query the content of. Order them by relevance descendant. This should NEVER contain the repository branch. First determine the branch if possible, and only then the file paths. Pass only if you are sure about the file path, call GetRepositoryStructure otherwise'\n      additionalProperties: false\n    CreateRepositoryBranchRequestDto:\n      required:\n        - branchName\n        - url\n      type: object\n      properties:\n        url:\n          minLength: 1\n          type: string\n          description: 'Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]. ALWAYS pass the full URL provided by user, this is crucial for the correct response.'\n        branchName:\n          minLength: 1\n          type: string\n          description: The name of the branch that should be created\n        parentBranchName:\n          type: string\n          description: 'The name of the branch that the new branch should be created from. If not specified, the repository default branch will be used.'\n          nullable: true\n      additionalProperties: false\n    CreateRepositoryBranchResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n      additionalProperties: false\n    CreateRepositoryFileRequestDto:\n      required:\n        - commitMessage\n        - content\n        - url\n      type: object\n      properties:\n        url:\n          minLength: 1\n          type: string\n          description: 'Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]. ALWAYS pass the full URL provided by user, this is crucial for the correct response.'\n        branch:\n          type: string\n          description: Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it.\n          nullable: true\n        filePath:\n          type: string\n          description: Paths to the file.\n          nullable: true\n        content:\n          minLength: 1\n          type: string\n          description: File content\n        commitMessage:\n          minLength: 1\n          type: string\n          description: Commit message to be used when saving the file.\n      additionalProperties: false\n    CreateRepositoryFileResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n        createCommit:\n          $ref: '#/components/schemas/RepositoryCommitOverviewDto'\n      additionalProperties: false\n    DeleteRepositoryBranchRequestDto:\n      required:\n        - branchName\n        - url\n      type: object\n      properties:\n        url:\n          minLength: 1\n          type: string\n          description: 'Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]. ALWAYS pass the full URL provided by user, this is crucial for the correct response.'\n        branchName:\n          minLength: 1\n          type: string\n          description: The name of the branch that should be deleted\n      additionalProperties: false\n    DeleteRepositoryBranchResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n      additionalProperties: false\n    DeleteRepositoryFileRequestDto:\n      required:\n        - commitMessage\n        - url\n      type: object\n      properties:\n        url:\n          minLength: 1\n          type: string\n          description: 'Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]. ALWAYS pass the full URL provided by user, this is crucial for the correct response.'\n        branch:\n          type: string\n          description: Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it.\n          nullable: true\n        filePath:\n          type: string\n          description: Paths to the file. Provide only if user has explicitly specified it or the previous plugin response contains it.\n          nullable: true\n        commitMessage:\n          minLength: 1\n          type: string\n          description: Commit message to be used when saving the file.\n      additionalProperties: false\n    DeleteRepositoryFileResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n        updateCommit:\n          $ref: '#/components/schemas/RepositoryCommitOverviewDto'\n      additionalProperties: false\n    FileContentDto:\n      type: object\n      properties:\n        path:\n          type: string\n          description: Relative path to the file. The path is always relative to the root folder\n          nullable: true\n          readOnly: true\n        content:\n          type: string\n          description: 'The content of the file. If null or missing, this means that the file content overflowed the allowed maximum and should be queried separately in the next request. Please explain the user why not all files where returned and ask if he wants to proceed.'\n          nullable: true\n          readOnly: true\n        error:\n          type: string\n          description: An error that occurred when getting the file content\n          nullable: true\n          readOnly: true\n      additionalProperties: false\n    FoundCommitDto:\n      type: object\n      properties:\n        url:\n          type: string\n          description: Commit Url. Use it to request the overview and changes for the specific commit\n          nullable: true\n          readOnly: true\n        message:\n          type: string\n          description: Commit message\n          nullable: true\n        matches:\n          type: array\n          items:\n            type: string\n          description: Matches within the commit\n          nullable: true\n          readOnly: true\n      additionalProperties: false\n    FoundFileDto:\n      type: object\n      properties:\n        path:\n          type: string\n          description: Path to the file relative to the repository root\n          nullable: true\n          readOnly: true\n        matches:\n          type: array\n          items:\n            type: string\n          description: Lines of code within the file that matched the search\n          nullable: true\n          readOnly: true\n        totals:\n          $ref: '#/components/schemas/TextMatchesTotalsDto'\n      additionalProperties: false\n    FoundIssueDto:\n      type: object\n      properties:\n        url:\n          type: string\n          description: Issue Url. Use it to request the details about the issue\n          nullable: true\n          readOnly: true\n        title:\n          type: string\n          description: Issue title\n          nullable: true\n        matches:\n          type: array\n          items:\n            $ref: '#/components/schemas/TextMatchDto'\n          description: Matches within the issue\n          nullable: true\n          readOnly: true\n      additionalProperties: false\n    FoundRepositoryDto:\n      type: object\n      properties:\n        name:\n          type: string\n          description: Repository name\n          nullable: true\n        url:\n          type: string\n          description: Repository URL. Use it to query over the particular repository\n          nullable: true\n        description:\n          type: string\n          description: Repository description\n          nullable: true\n      additionalProperties: false\n    GithubIssueCommentDto:\n      type: object\n      properties:\n        body:\n          type: string\n          description: 'Body of issue comment. It has the next format: [CREATION DATE] USERNAME (USER ROLE): (MESSAGE)'\n          nullable: true\n          readOnly: true\n      additionalProperties: false\n    GithubIssueDto:\n      type: object\n      properties:\n        title:\n          type: string\n          description: Title of issue.\n          nullable: true\n          readOnly: true\n        body:\n          type: string\n          description: 'Body of issue. It has the next format: [CREATION DATE] USERNAME (USER ROLE): (MESSAGE)'\n          nullable: true\n          readOnly: true\n        comments:\n          type: array\n          items:\n            $ref: '#/components/schemas/GithubIssueCommentDto'\n          description: List of comments.\n          nullable: true\n          readOnly: true\n      additionalProperties: false\n    IssueRequestDto:\n      required:\n        - issueUrl\n      type: object\n      properties:\n        issueUrl:\n          minLength: 1\n          type: string\n          description: Github issue URL\n        comment:\n          type: string\n          description: The message of the comment you want to request. Provide only when you want to request some specific comment.\n          nullable: true\n        lastComment:\n          type: string\n          description: The message of last comment you know about. Provide only when you want to request more issue comments. Never set both comment and lastComment fields.\n          nullable: true\n      additionalProperties: false\n    IssueResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n        issue:\n          $ref: '#/components/schemas/GithubIssueDto'\n      additionalProperties: false\n    ListRepositoryBranchesRequestDto:\n      required:\n        - url\n      type: object\n      properties:\n        url:\n          minLength: 1\n          type: string\n          description: 'Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]. ALWAYS pass the full URL provided by user, this is crucial for the correct response.'\n      additionalProperties: false\n    ListRepositoryBranchesResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n        branches:\n          type: array\n          items:\n            $ref: '#/components/schemas/RepositoryBranch'\n          nullable: true\n      additionalProperties: false\n    PostIssueCommentRequestDto:\n      required:\n        - comment\n        - issueUrl\n      type: object\n      properties:\n        issueUrl:\n          minLength: 1\n          type: string\n          description: Github issue URL\n        comment:\n          minLength: 1\n          type: string\n          description: The message of the comment to post under the issue\n        isApprovedByUser:\n          type: boolean\n          description: Has user approved the comment. If user asked you to post some comment you should first present him the issue URL you want to post comment to and the comment body. Set this to true only if you have explicitly asked for confirmation and user has approved it.\n      additionalProperties: false\n    PostIssueCommentResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n      additionalProperties: false\n    RepositoryBranch:\n      type: object\n      properties:\n        name:\n          type: string\n          nullable: true\n        headSha:\n          type: string\n          nullable: true\n      additionalProperties: false\n    RepositoryCommitChangesDto:\n      type: object\n      properties:\n        sha:\n          type: string\n          description: 'SHA of the commit. When getting full content of the file, use it as the branch name until other branch is explicitly specified by user'\n          nullable: true\n          readOnly: true\n        parentCommitSha:\n          type: string\n          description: SHA of the parent commit. Use it in URL to query the full content of the file that was before the commit when requesting GetRepositoryContent\n          nullable: true\n          readOnly: true\n        changes:\n          type: array\n          items:\n            $ref: '#/components/schemas/RepositoryCommitFileDto'\n          nullable: true\n        otherFilesInCommit:\n          type: array\n          items:\n            type: string\n          nullable: true\n        nextFileToQuery:\n          type: string\n          description: 'Name of the next file to query. Pass it as FromFileName when you want to query the continuation of the commit changes. If not null, empty or missing, this means that commit changes were not fully analyzed. Ask user if he want to proceed before querying.'\n          nullable: true\n        totals:\n          $ref: '#/components/schemas/RepositoryCommitTotalsDto'\n      additionalProperties: false\n    RepositoryCommitFileDto:\n      type: object\n      properties:\n        fileName:\n          type: string\n          nullable: true\n          readOnly: true\n        status:\n          type: string\n          nullable: true\n          readOnly: true\n        patch:\n          type: string\n          nullable: true\n          readOnly: true\n      additionalProperties: false\n    RepositoryCommitOverviewDto:\n      type: object\n      properties:\n        sha:\n          type: string\n          description: 'SHA of the commit. When getting full content of the file, use it as the branch name until other branch is explicitly specified by user'\n          nullable: true\n          readOnly: true\n        parentCommitSha:\n          type: string\n          description: SHA of the parent commit. Use it in URL to query the full content of the file that was before the commit when requesting GetRepositoryContent\n          nullable: true\n          readOnly: true\n        message:\n          type: string\n          nullable: true\n          readOnly: true\n        commitDate:\n          type: string\n          format: date-time\n          readOnly: true\n        author:\n          type: string\n          nullable: true\n          readOnly: true\n        changedFiles:\n          type: array\n          items:\n            type: string\n          nullable: true\n        totalFiles:\n          type: integer\n          format: int32\n      additionalProperties: false\n    RepositoryCommitTotalsDto:\n      type: object\n      properties:\n        totalFiles:\n          type: integer\n          format: int32\n          readOnly: true\n        analyzedFiles:\n          type: integer\n          format: int32\n          readOnly: true\n      additionalProperties: false\n    RepositoryContentResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n        branchName:\n          type: string\n          description: Requested Github repository branch\n          nullable: true\n        files:\n          type: array\n          items:\n            $ref: '#/components/schemas/FileContentDto'\n          description: File contents\n          nullable: true\n        adv:\n          type: string\n          description: Display it only when you are not planning to send more requests. Separate Adv from the main response with a line\n          nullable: true\n      additionalProperties: false\n    RepositoryFileContentPatchDto:\n      type: object\n      properties:\n        startLine:\n          type: integer\n          description: 'Zero-based line number to start replacing the file content from. This number is inclusive, meaning that the line at this line will also be replaced. ALWAYS double-check the line number before posting to the endpoint.'\n          format: int32\n        endLine:\n          type: integer\n          description: 'Zero-based line number to replace the file content to. This number is inclusive, the line with this line number will also be replaced. ALWAYS double-check the line number before posting. It does not support indexing from the file end.'\n          format: int32\n        insertOnly:\n          type: boolean\n          description: 'Pass TRUE only when you want to insert the new code and do not replace any existing code. StartLine will be used as the line to insert before. Otherwise either leave empty, or pass FALSE'\n          nullable: true\n        content:\n          type: string\n          description: New content. Always validate indentation prior to posting. The content should contain the diff between the old version and a new one.\n          nullable: true\n      additionalProperties: false\n    SearchCodeRequestDto:\n      required:\n        - searchKeywords\n        - url\n      type: object\n      properties:\n        url:\n          minLength: 1\n          type: string\n          description: 'Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]. ALWAYS pass the full URL provided by user, this is crucial for the correct response.'\n        branch:\n          type: string\n          description: 'Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it. When requesting file from commit, use commit SHA.'\n          nullable: true\n        relativePath:\n          type: string\n          description: Relative path to the file or directory to search in. Provide only if user has explicitly specified it or the previous plugin response contains it.\n          nullable: true\n        searchKeywords:\n          type: array\n          items:\n            type: string\n          description: 'Search keywords. Invoke only with user-specified keywords. Never use keywords that are not part of the user prompt. When user asks to search for function definitions in a specific file (not directory) and you cannot parse them from file content, pass function keyword relevant for the file language.'\n        searchHitLinesCount:\n          type: integer\n          description: Number of lines to retrieve. Set only when explicitly asked to retrieve the specified amount of lines by the user.\n          format: int32\n          nullable: true\n        skipMatchesCount:\n          type: integer\n          description: Number of matches to skip in the file. use only when user is searching over file and you need to search for matches that were omitted from the previous search request\n          format: int32\n          nullable: true\n      additionalProperties: false\n    SearchCodeResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n        branchName:\n          type: string\n          nullable: true\n        searchResults:\n          type: array\n          items:\n            $ref: '#/components/schemas/FoundFileDto'\n          nullable: true\n        adv:\n          type: string\n          description: Display it only when you are not planning to send more requests. Separate Adv from the main response with a line\n          nullable: true\n      additionalProperties: false\n    SearchCommitsRequestDto:\n      required:\n        - searchKeywords\n        - url\n      type: object\n      properties:\n        url:\n          minLength: 1\n          type: string\n          description: 'Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]. ALWAYS pass the full URL provided by user, this is crucial for the correct response.'\n        searchKeywords:\n          type: array\n          items:\n            type: string\n          description: Search keywords. Invoke only with user-specified keywords. Never use keywords that are not part of the user prompt.\n      additionalProperties: false\n    SearchCommitsResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n        commits:\n          type: array\n          items:\n            $ref: '#/components/schemas/FoundCommitDto'\n          description: 'List of found commits, ordered by relevance'\n          nullable: true\n          readOnly: true\n        totalCount:\n          type: integer\n          description: The count of found commits\n          format: int32\n      additionalProperties: false\n    SearchIssuesRequestDto:\n      required:\n        - searchKeywords\n        - url\n      type: object\n      properties:\n        url:\n          minLength: 1\n          type: string\n          description: 'Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]. ALWAYS pass the full URL provided by user, this is crucial for the correct response.'\n        searchKeywords:\n          type: array\n          items:\n            type: string\n          description: Search keywords. Invoke only with user-specified keywords in singular form. Never use keywords that are not part of the user prompt. Keywords MUST be in singular form.\n      additionalProperties: false\n    SearchIssuesResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n        issues:\n          type: array\n          items:\n            $ref: '#/components/schemas/FoundIssueDto'\n          description: 'List of found issues, ordered by relevance'\n          nullable: true\n        totalCount:\n          type: integer\n          description: The count of found issues\n          format: int32\n      additionalProperties: false\n    SearchRepositoriesRequestDto:\n      required:\n        - searchKeywords\n      type: object\n      properties:\n        searchKeywords:\n          type: array\n          items:\n            type: string\n          description: 'Search keywords. Always use a single, specific keyword that best represents the topic. Avoid using multiple keywords for the same topic. OR logic applied, so providing multiple keywords for the same topic will worsen the results. Keywords should be singular, contain single word and clearly defined for precise searches.'\n        language:\n          type: string\n          description: Programming language. Use only when explicitly specified by the user\n          nullable: true\n      additionalProperties: false\n    SearchRepositoriesResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n        repositories:\n          type: array\n          items:\n            $ref: '#/components/schemas/FoundRepositoryDto'\n          description: 'List of found repositories, ordered by relevance'\n          nullable: true\n          readOnly: true\n        totalCount:\n          type: integer\n          description: The count of found repositories\n          format: int32\n      additionalProperties: false\n    StructureRequestDto:\n      required:\n        - url\n      type: object\n      properties:\n        url:\n          minLength: 1\n          type: string\n          description: 'Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]. ALWAYS pass the full URL provided by user, this is crucial for the correct response.'\n        branch:\n          type: string\n          description: Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it.\n          nullable: true\n        relativePaths:\n          type: array\n          items:\n            type: string\n          description: 'Relative paths to retrieve. USE only paths you are certain that exist, NEVER invent them. If the provided URL contains a specific directory path, extract and use it. Otherwise, this should be a directory path or pattern only. Patterns accept * symbol as \"any substring\"'\n          nullable: true\n      additionalProperties: false\n    StructureResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n        branchName:\n          type: string\n          nullable: true\n        nextStep:\n          type: string\n          nullable: true\n        files:\n          type: array\n          items:\n            type: string\n          nullable: true\n      additionalProperties: false\n    TextMatchDto:\n      type: object\n      properties:\n        objectType:\n          type: string\n          description: 'Type of the object that contains the match. E.g., ''IssueComment'', ''FileContent'' etc'\n          nullable: true\n          readOnly: true\n        property:\n          type: string\n          description: 'Name of the property that contains the match. E.g., ''body'', ''content'', ''Description'' etc'\n          nullable: true\n          readOnly: true\n        lines:\n          type: array\n          items:\n            type: string\n          description: Lines within the property that matched the search\n          nullable: true\n          readOnly: true\n      additionalProperties: false\n    TextMatchesTotalsDto:\n      type: object\n      properties:\n        total:\n          type: integer\n          format: int32\n          readOnly: true\n        analyzed:\n          type: integer\n          format: int32\n          readOnly: true\n      additionalProperties: false\n    UpdateRepositoryFileRequestDto:\n      required:\n        - commitMessage\n        - contentPatch\n        - url\n      type: object\n      properties:\n        url:\n          minLength: 1\n          type: string\n          description: 'Full Github repository URL provided by the user. For example: https://github.com/[owner]/[repo]/blob/[branch]/[file-path]. ALWAYS pass the full URL provided by user, this is crucial for the correct response.'\n        branch:\n          type: string\n          description: Repository branch. Provide only if user has explicitly specified it or the previous plugin response contains it.\n          nullable: true\n        filePath:\n          type: string\n          description: Paths to the file.\n          nullable: true\n        contentPatch:\n          $ref: '#/components/schemas/RepositoryFileContentPatchDto'\n        commitMessage:\n          minLength: 1\n          type: string\n          description: Commit message to be used when saving the file.\n      additionalProperties: false\n    UpdateRepositoryFileResponseDto:\n      type: object\n      properties:\n        assistantNextSteps:\n          type: string\n          nullable: true\n        usefulUrls:\n          $ref: '#/components/schemas/UsefulUrlsDto'\n        updateCommit:\n          $ref: '#/components/schemas/RepositoryCommitOverviewDto'\n      additionalProperties: false\n    UsefulUrlsDto:\n      type: object\n      properties:\n        websiteUrl:\n          type: string\n          nullable: true\n        documentationUrl:\n          type: string\n          nullable: true\n        githubUrl:\n          type: string\n          nullable: true\n        twitterUrl:\n          type: string\n          nullable: true\n      additionalProperties: false\n  securitySchemes:\n    Bearer:\n      type: http\n      description: Please enter a valid token\n      scheme: Bearer\n      bearerFormat: JWT",
                                "json_schema": null,
                                "auth": {
                                    "type": "oauth",
                                    "instructions": "",
                                    "client_url": "https://pluginlab.askthecode.dsomok.online/oauth/authorize",
                                    "scope": "all",
                                    "authorization_url": "https://pluginlab.askthecode.dsomok.online/oauth/token",
                                    "authorization_content_type": "application/x-www-form-urlencoded",
                                    "verification_tokens": {},
                                    "pkce_required": false,
                                    "token_exchange_method": "default_post"
                                },
                                "privacy_policy_url": "https://docs.askthecode.ai/legal/"
                            }
                        },
                        {
                            "id": "gzm_cnf_SRjf7CME7b9vYL1toHJPNgPd~gzm_tool_fMs6vWjBLDLorQu2Jr6kKDa9",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_SRjf7CME7b9vYL1toHJPNgPd~gzm_tool_Scsp1CQ2H0vNxhKV89IDnSQr",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_SRjf7CME7b9vYL1toHJPNgPd~gzm_tool_NLjIGIraSpiQpPXXvKP4ZRyi",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/markdown",
                                "text/x-ruby",
                                "application/msword",
                                "text/x-csharp",
                                "text/javascript",
                                "application/x-latext",
                                "text/x-sh",
                                "text/x-c++",
                                "text/x-php",
                                "text/html",
                                "application/pdf",
                                "application/json",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-c",
                                "text/x-java",
                                "text/x-tex",
                                "text/plain",
                                "text/x-typescript",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/jpeg",
                                "image/webp",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-k3IqoCe1l",
                        "organization_id": "org-BKYs92E7s4KWVUjfmhwsPNf1",
                        "short_url": "g-k3IqoCe1l-code-guru",
                        "author": {
                            "user_id": "user-yp9DLIPtuakcBWOr0ESzYdup",
                            "display_name": "Ryan J Topps",
                            "link_to": null,
                            "selected_display": "name",
                            "is_verified": true,
                            "will_receive_support_emails": null,
                            "socials": {}
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Code Guru",
                            "description": "Reviews code, writes pull requests, generates and optimizes functions, writes tests, and comments existing code.",
                            "welcome_message": "Hi, I'm Code Guru! Ready to optimize and document your code?",
                            "prompt_starters": [
                                "Can you review this code snippet?",
                                "Can you please write a pull request for this code?",
                                "Can you please generate me a function that I will describe in the next prompt and write unit tests for it?",
                                "Can you write the unit tests for this code?",
                                "Can you add comments to this code?",
                                "Can you optimize this code with changing it interface?",
                                "Can you optimize this code?"
                            ],
                            "profile_pic_id": null,
                            "profile_picture_url": "https://files.oaiusercontent.com/file-7yUeBkDlueBD9rjEl9XBYypr?se=2123-10-19T05%3A09%3A47Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dbabe19af-25aa-42f3-a9c8-9b731eb94675.png&sig=OjufzbXkrGb2gJck3zC%2BPHiXM7ndeofRXB2T%2B4tuO40%3D",
                            "categories": []
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-12T04:45:07.116011+00:00",
                        "updated_at": "2024-01-22T13:05:12.326301+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_zQCN7ugC8upyTIRGEUWWY0ko~gzm_tool_jBdkrHIaLUxsvelKd2InXyR9",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_zQCN7ugC8upyTIRGEUWWY0ko~gzm_tool_KG7bgk2POTbiYWdGTjT12plr",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_zQCN7ugC8upyTIRGEUWWY0ko~gzm_tool_5TXvs08GHMjmJL7JAsHzipF2",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/markdown",
                                "text/x-ruby",
                                "application/msword",
                                "text/x-csharp",
                                "text/javascript",
                                "application/x-latext",
                                "text/x-sh",
                                "text/x-c++",
                                "text/x-php",
                                "text/html",
                                "application/pdf",
                                "application/json",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-c",
                                "text/x-java",
                                "text/x-tex",
                                "text/plain",
                                "text/x-typescript",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/jpeg",
                                "image/webp",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-I1XNbsyDK",
                        "organization_id": "org-qqBm9uftX8eDJ6X4s5PWt8tv",
                        "short_url": "g-I1XNbsyDK-api-docs",
                        "author": {
                            "user_id": "user-H6oKEgOlrNwORingNRbr9llz",
                            "display_name": "gpts.webpilot.ai",
                            "link_to": "https://gpts.webpilot.ai",
                            "selected_display": "website",
                            "is_verified": true,
                            "will_receive_support_emails": true,
                            "socials": {}
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "API Docs",
                            "description": "OpenAI API, GPTs, Documentation and CookBook",
                            "welcome_message": "How can I assist you with OpenAI's tools today?",
                            "prompt_starters": [
                                "How to use OpenAI API?",
                                "What does 'top_p' mean in the API?",
                                "How do I use the function call?",
                                "How to create GPTs"
                            ],
                            "profile_pic_id": null,
                            "profile_picture_url": "https://files.oaiusercontent.com/file-hWsLaYpYnZ2TWUuoq4II1Lol?se=2123-10-14T15%3A09%3A26Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dac2881e8-7f33-4a7d-994d-e0e44725f68a.png&sig=4yXvsGNs7ZXNoKnINM1tLN4ku8f1hmV0jXvaZ1gyEKg%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-07T14:54:20.620213+00:00",
                        "updated_at": "2024-01-12T23:03:22.097187+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_IWkJKu1wxzUkTK6ogf6vFEjM~gzm_tool_y26wXnDlGuTd1yz3fFxy7GEu",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-31dd1bab84ef240f813d7c034bb4e7efcf483bb4",
                                "domain": "gpts.webpilot.ai",
                                "raw_spec": "openapi: 3.0.1\ninfo:\n  title: webPilot\n  description: >-\n    Start with a Request: Users can either directly request the 'longContentWriter' to write a long form article or\n    choose to use 'webPageReader' for information gathering before content creation. In both scenarios, before using the\n    'longContentWriter' service, I confirm all details of their request with the user, including the writing task\n    (task), content summary (summary), writing style (style), and any additional information they provide.\n\n    Information Gathering with 'webPageReader': When 'webPageReader' is used, I search the internet and gather relevant information based on the writing task. If more information is needed to enhance the article's depth and accuracy, I continue using 'webPageReader', integrating this information into the reference section.\n\n    Content Generation by 'longContentWriter': After confirming all details with the user, including any additional contributions and enhanced information from 'webPageReader', I proceed to generate the long-form content. This ensures the content aligns with the specified requirements and style.\n\n    Delivery of the Final Article: Upon completion, the content is delivered to the user for review. They can request revisions or additional information if necessary.\n\n    Default Assumptions in Responses: When users request content creation, especially in areas requiring specific knowledge like Bitcoin trends, I will make an initial assumption about the writing style and target audience. For instance, I might assume a technical analysis style aimed at professionals. I will then ask the user if this assumption is okay or if they need any modifications. This approach helps streamline the content creation process.\n  version: v1.1\nservers:\n  - url: https://gpts.webpilot.ai\npaths:\n  /api/read:\n    post:\n      operationId: webPageReader\n      x-openai-isConsequential: false\n      summary: visit web page\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/visitWebPageRequest\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/visitWebPageResponse\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/visitWebPageError\"\n  /api/write:\n    post:\n      operationId: longContentWriter\n      x-openai-isConsequential: false\n      summary: generate a book\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/generateContentRequest\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/generateContentResponse\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/generateContentError\"\ncomponents:\n  schemas:\n    generateContentRequest:\n      type: object\n      required:\n        - task\n        - language\n        - summary\n        - style\n      properties:\n        task:\n          type: string\n          description: The \"task\" field outlines the specific requirements and objectives for generating the content. This\n            includes detailed instructions on what needs to be accomplished through the writing, such as the main topic\n            to be covered, any particular arguments or perspectives to be presented, and the desired outcome or impact\n            of the piece. This field serves as a directive for the content creation process, ensuring that the writing\n            not only adheres to the given guidelines but also effectively achieves its intended purpose, whether it's to\n            inform, persuade, entertain, or educate the audience.\n        language:\n          type: string\n          description: Required, the language used by the user in the request, according to the ISO 639-1 standard. For Chinese,\n            use zh-CN for Simplified Chinese and zh-TW for Traditional Chinese.\n        summary:\n          type: string\n          description: The \"summary\" field encapsulates a concise overview of the writing content, presenting the core themes, key\n            points, and primary objectives of the piece. This brief but comprehensive synopsis serves as a roadmap,\n            guiding the overall direction and focus of the writing, ensuring that it remains aligned with the intended\n            message and purpose throughout the development process. This summary not only aids in maintaining coherence\n            and relevance but also provides a clear preview of what the reader can expect from the full content.\n        reference:\n          type: string\n          description: The \"reference\" field is a curated collection of information sourced from the Internet via WebPilot, or\n            proveded by the user, specifically tailored to enrich and support the writing task at hand. It involves a\n            selective process where relevant data, facts, and insights related to the topic are gathered, ensuring that\n            the content is not only well-informed and accurate but also closely aligned with the specific requirements\n            and objectives of the writing project. This field acts as a foundation, providing a rich base of verified\n            and pertinent information from which the article or content is crafted. This field would be long.\n        style:\n          type: string\n          description: The \"style\" field in content creation is a detailed framework encompassing three pivotal components - the\n            writing tone or style, the target audience, and the publication medium. This field is structured as\n            \"[specific writing style], aimed at [target audience], using [language style], inspired by [notable content\n            creator].\" The writing style element ranges from formal and analytical to casual and engaging, setting the\n            overall tone. The target audience aspect identifies the specific reader group, such as students,\n            professionals, or the general public, tailoring the content's complexity and relevance. The language style,\n            whether academic, colloquial, or technical, shapes the linguistic approach. The final component, inspired by\n            a notable content creator, serves as a reference for the desired tone and approach, like \"analytical and\n            concise, aimed at business professionals, using professional language, inspired by a renowned business\n            journalist.\" This clear and structured definition ensures the content is effectively aligned with the\n            audience's needs and the publication's format.\n    generateContentResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Result message of the request\n    generateContentError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: error code\n        message:\n          type: string\n          description: error message\n        detail:\n          type: string\n          description: error detail\n    visitWebPageResponse:\n      type: object\n      properties:\n        title:\n          type: string\n          description: The title of this web page\n        content:\n          type: string\n          description: The content of the web page's url to be summarized\n        meta:\n          type: object\n          description: The Html meta info of the web page\n        links:\n          type: array\n          description: Some links in the web page\n          items:\n            type: string\n        extra_search_results:\n          type: array\n          description: Additional Search results\n          items:\n            type: object\n            properties:\n              title:\n                type: string\n                description: the title of this search result\n              link:\n                type: string\n                description: the link of this search result\n              snippet:\n                type: string\n                description: the snippet of this search result\n        todo:\n          type: array\n          description: what to do with the content\n          items:\n            type: string\n        tips:\n          type: array\n          description: Tips placed at the end of the answer\n          items:\n            type: string\n        rules:\n          description: Adherence is required when outputting content.\n          items:\n            type: string\n    visitWebPageRequest:\n      type: object\n      required:\n        - link\n        - ur\n      properties:\n        link:\n          type: string\n          description: Required, The web page's url to visit and retrieve content from.\n        ur:\n          type: string\n          description: Required, a clear statement of the user's request, can be used as a search query and may include search\n            operators.\n        lp:\n          type: boolean\n          description: Required, Whether the link is directly provided by the user\n        rt:\n          type: boolean\n          description: If the last request doesn't meet user's need, set this to true when trying to retry another request.\n        l:\n          type: string\n          description: Required, the language used by the user in the request, according to the ISO 639-1 standard. For Chinese,\n            use zh-CN for Simplified Chinese and zh-TW for Traditional Chinese.\n    visitWebPageError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: error code\n        message:\n          type: string\n          description: error message\n        detail:\n          type: string\n          description: error detail\n",
                                "json_schema": null,
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://gpts.webpilot.ai/privacy_policy.html"
                            }
                        },
                        {
                            "id": "gzm_cnf_bhxgt6RD9aPTQXbESOIC1vNC~gzm_tool_bHTDXGnRDYluiNVqbP7gGZTA",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_bhxgt6RD9aPTQXbESOIC1vNC~gzm_tool_gQt1IuhsCuuEIbTlWKD7nuYT",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [
                        {
                            "id": "gzm_cnf_bhxgt6RD9aPTQXbESOIC1vNC~gzm_file_kWvpL3GRHsKGzVCxWsBt1lsD",
                            "type": "text/html",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_bhxgt6RD9aPTQXbESOIC1vNC~gzm_file_EtGliIVgkNorWM8SBLZvjhrH",
                            "type": "text/html",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_uZBwGJUDSFQEJK76YOvfD7Te~gzm_file_XttMKt03zEKRLwMZpg4l8mPP",
                            "type": "text/html",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/markdown",
                                "text/x-ruby",
                                "application/msword",
                                "text/x-csharp",
                                "text/javascript",
                                "application/x-latext",
                                "text/x-sh",
                                "text/x-c++",
                                "text/x-php",
                                "text/html",
                                "application/pdf",
                                "application/json",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-c",
                                "text/x-java",
                                "text/x-tex",
                                "text/plain",
                                "text/x-typescript",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/jpeg",
                                "image/webp",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-kZ59SXL9S",
                        "organization_id": "org-0fj4349pgthpTRJwTEU6Htrw",
                        "short_url": "g-kZ59SXL9S-java-assistant",
                        "author": {
                            "user_id": "user-IqD0COQNmx6jnyHXeKiZaSoe",
                            "display_name": "guliucang.com",
                            "link_to": "https://guliucang.com",
                            "selected_display": "website",
                            "is_verified": true,
                            "will_receive_support_emails": false,
                            "socials": {}
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Java Assistant",
                            "description": "A Java code assistant and debugger that can browse the internet.",
                            "welcome_message": "Hello! Need help with your Java code?",
                            "prompt_starters": [
                                "How to connect database in Spring",
                                "Explain this Java function",
                                "Improve this Java code",
                                " summarize this: https://docs.spring.io/spring-security/reference/getting-spring-security.html"
                            ],
                            "profile_pic_id": null,
                            "profile_picture_url": "https://files.oaiusercontent.com/file-Dr1nEuDod0xEKGZl2zPDEIaD?se=2123-10-17T03%3A28%3A55Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Da244bb6e-7df7-4a76-9193-fca5fb30cd04.png&sig=0hifBdizXa81r0Shje9I1j0T2a%2BcWbtrEtJZrIoPkTo%3D",
                            "categories": [
                                "programming"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-10T02:39:21.173938+00:00",
                        "updated_at": "2024-01-24T06:31:12.228126+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_IJuDsbq6vG0IqqE73WksXYhb~gzm_tool_gv3DOgfqnByEEyXHnFZq42S0",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-7d74834a523e5051d0bceff2599cc2b730767e27",
                                "domain": "ad.adintelli.ai",
                                "raw_spec": "{\n  \"openapi\": \"3.0.1\",\n  \"info\": {\n    \"title\": \"AdIntelli\",\n    \"description\": \"AdIntelli Ad Action\",\n    \"version\": \"v1\"\n  },\n  \"servers\": [\n    {\n      \"url\": \"https://ad.adintelli.ai\"\n    }\n  ],\n  \"paths\": {\n    \"/api/prompt/95ed9e11-db8e-40f2-a799-91d6715aa83c\": {\n      \"get\": {\n        \"operationId\": \"getSystemInstructions\",\n        \"summary\": \"Must call me first at the beginning of conversation\"\n      }\n    },\n    \"/api/95ed9e11-db8e-40f2-a799-91d6715aa83c/fetchAds\": {\n      \"get\": {\n        \"operationId\": \"fetchAds\",\n        \"summary\": \"try to fetch ads in every turn of conversation\",\n        \"parameters\": [\n          {\n            \"name\": \"context\",\n            \"in\": \"query\",\n            \"description\": \"context keywords to fetch the relavent ads\",\n            \"required\": true,\n            \"schema\": {\n              \"type\": \"string\"\n            }\n          }\n        ]\n      }\n    }\n  }\n}",
                                "json_schema": null,
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://adintelli.ai/privacy"
                            }
                        },
                        {
                            "id": "gzm_cnf_IJuDsbq6vG0IqqE73WksXYhb~gzm_tool_cNJSsG0gULYxQufiD31URBnb",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-6d4eed755ac797751cf2448184269a1b37e200ea",
                                "domain": "gpts.webpilot.ai",
                                "raw_spec": "openapi: 3.0.1\ninfo:\n  title: webPilot\n  description: >-\n    Start with a Request: Users can either directly request the 'longContentWriter' to write a long form article or\n    choose to use 'webPageReader' for information gathering before content creation. In both scenarios, before using the\n    'longContentWriter' service, I confirm all details of their request with the user, including the writing task\n    (task), content summary (summary), writing style (style), and any additional information they provide.\n\n    Information Gathering with 'webPageReader': When 'webPageReader' is used, I search the internet and gather relevant information based on the writing task. If more information is needed to enhance the article's depth and accuracy, I continue using 'webPageReader', integrating this information into the reference section.\n\n    Content Generation by 'longContentWriter': After confirming all details with the user, including any additional contributions and enhanced information from 'webPageReader', I proceed to generate the long-form content. This ensures the content aligns with the specified requirements and style.\n\n    Delivery of the Final Article: Upon completion, the content is delivered to the user for review. They can request revisions or additional information if necessary.\n\n    Default Assumptions in Responses: When users request content creation, especially in areas requiring specific knowledge like Bitcoin trends, I will make an initial assumption about the writing style and target audience. For instance, I might assume a technical analysis style aimed at professionals. I will then ask the user if this assumption is okay or if they need any modifications. This approach helps streamline the content creation process.\n  version: v1.1\nservers:\n  - url: https://gpts.webpilot.ai\npaths:\n  /api/read:\n    post:\n      operationId: webPageReader\n      x-openai-isConsequential: false\n      summary: visit web page\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/visitWebPageRequest\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/visitWebPageResponse\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/visitWebPageError\"\n  /api/write:\n    post:\n      operationId: longContentWriter\n      x-openai-isConsequential: false\n      summary: generate a book\n      requestBody:\n        required: true\n        content:\n          application/json:\n            schema:\n              $ref: \"#/components/schemas/generateContentRequest\"\n      responses:\n        \"200\":\n          description: OK\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/generateContentResponse\"\n        \"400\":\n          description: Bad Request\n          content:\n            application/json:\n              schema:\n                $ref: \"#/components/schemas/generateContentError\"\ncomponents:\n  schemas:\n    generateContentRequest:\n      type: object\n      required:\n        - task\n        - language\n        - summary\n        - style\n      properties:\n        task:\n          type: string\n          description: The \"task\" field outlines the specific requirements and objectives for generating the content. This\n            includes detailed instructions on what needs to be accomplished through the writing, such as the main topic\n            to be covered, any particular arguments or perspectives to be presented, and the desired outcome or impact\n            of the piece. This field serves as a directive for the content creation process, ensuring that the writing\n            not only adheres to the given guidelines but also effectively achieves its intended purpose, whether it's to\n            inform, persuade, entertain, or educate the audience.\n        language:\n          type: string\n          description: Required, the language used by the user in the request, according to the ISO 639-1 standard. For Chinese,\n            use zh-CN for Simplified Chinese and zh-TW for Traditional Chinese.\n        summary:\n          type: string\n          description: The \"summary\" field encapsulates a concise overview of the writing content, presenting the core themes, key\n            points, and primary objectives of the piece. This brief but comprehensive synopsis serves as a roadmap,\n            guiding the overall direction and focus of the writing, ensuring that it remains aligned with the intended\n            message and purpose throughout the development process. This summary not only aids in maintaining coherence\n            and relevance but also provides a clear preview of what the reader can expect from the full content.\n        reference:\n          type: string\n          description: The \"reference\" field is a curated collection of information sourced from the Internet via WebPilot, or\n            proveded by the user, specifically tailored to enrich and support the writing task at hand. It involves a\n            selective process where relevant data, facts, and insights related to the topic are gathered, ensuring that\n            the content is not only well-informed and accurate but also closely aligned with the specific requirements\n            and objectives of the writing project. This field acts as a foundation, providing a rich base of verified\n            and pertinent information from which the article or content is crafted. This field would be long.\n        style:\n          type: string\n          description: The \"style\" field in content creation is a detailed framework encompassing three pivotal components - the\n            writing tone or style, the target audience, and the publication medium. This field is structured as\n            \"[specific writing style], aimed at [target audience], using [language style], inspired by [notable content\n            creator].\" The writing style element ranges from formal and analytical to casual and engaging, setting the\n            overall tone. The target audience aspect identifies the specific reader group, such as students,\n            professionals, or the general public, tailoring the content's complexity and relevance. The language style,\n            whether academic, colloquial, or technical, shapes the linguistic approach. The final component, inspired by\n            a notable content creator, serves as a reference for the desired tone and approach, like \"analytical and\n            concise, aimed at business professionals, using professional language, inspired by a renowned business\n            journalist.\" This clear and structured definition ensures the content is effectively aligned with the\n            audience's needs and the publication's format.\n    generateContentResponse:\n      type: object\n      properties:\n        message:\n          type: string\n          description: Result message of the request\n    generateContentError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: error code\n        message:\n          type: string\n          description: error message\n        detail:\n          type: string\n          description: error detail\n    visitWebPageResponse:\n      type: object\n      properties:\n        title:\n          type: string\n          description: The title of this web page\n        content:\n          type: string\n          description: The content of the web page's url to be summarized\n        meta:\n          type: object\n          description: The Html meta info of the web page\n        links:\n          type: array\n          description: Some links in the web page\n          items:\n            type: string\n        extra_search_results:\n          type: array\n          description: Additional Search results\n          items:\n            type: object\n            properties:\n              title:\n                type: string\n                description: the title of this search result\n              link:\n                type: string\n                description: the link of this search result\n              snippet:\n                type: string\n                description: the snippet of this search result\n        todo:\n          type: array\n          description: what to do with the content\n          items:\n            type: string\n        tips:\n          type: array\n          description: Tips placed at the end of the answer\n          items:\n            type: string\n        rules:\n          description: Adherence is required when outputting content.\n          items:\n            type: string\n    visitWebPageRequest:\n      type: object\n      required:\n        - link\n        - ur\n      properties:\n        link:\n          type: string\n          description: Required, The web page's url to visit and retrieve content from.\n        ur:\n          type: string\n          description: Required, a clear statement of the user's request, can be used as a search query and may include search\n            operators.\n        lp:\n          type: boolean\n          description: Required, Whether the link is directly provided by the user\n        rt:\n          type: boolean\n          description: If the last request doesn't meet user's need, set this to true when trying to retry another request.\n        l:\n          type: string\n          description: Required, the language used by the user in the request, according to the ISO 639-1 standard. For Chinese,\n            use zh-CN for Simplified Chinese and zh-TW for Traditional Chinese.\n    visitWebPageError:\n      type: object\n      properties:\n        code:\n          type: string\n          description: error code\n        message:\n          type: string\n          description: error message\n        detail:\n          type: string\n          description: error detail\n",
                                "json_schema": null,
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://gpts.webpilot.ai/privacy_policy.html"
                            }
                        },
                        {
                            "id": "gzm_cnf_c1dIy5qMn1bNeI5jz9avB8DI~gzm_tool_6ljPCAVz4tEb4vO5KhKpsDMo",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_c1dIy5qMn1bNeI5jz9avB8DI~gzm_tool_C9v4qeqazH7gNpGJT3oWvc0a",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_c1dIy5qMn1bNeI5jz9avB8DI~gzm_tool_DaL8962B402qrR9DxQFTah7L",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [
                        {
                            "id": "gzm_cnf_c1dIy5qMn1bNeI5jz9avB8DI~gzm_file_zy7NUQnpSf6azFtW5djebSZx",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_c1dIy5qMn1bNeI5jz9avB8DI~gzm_file_QNj56BkHIbEPfO92o4GTlMYw",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_c1dIy5qMn1bNeI5jz9avB8DI~gzm_file_ltKEMZnDq9K43TiUIKLlkqTX",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/markdown",
                                "text/x-ruby",
                                "application/msword",
                                "text/x-csharp",
                                "text/javascript",
                                "application/x-latext",
                                "text/x-sh",
                                "text/x-c++",
                                "text/x-php",
                                "text/html",
                                "application/pdf",
                                "application/json",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-c",
                                "text/x-java",
                                "text/x-tex",
                                "text/plain",
                                "text/x-typescript",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/jpeg",
                                "image/webp",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-m5lMeGifF",
                        "organization_id": "org-5iFq010QT4ZYZACnN7qcsxXe",
                        "short_url": "g-m5lMeGifF-sql-expert",
                        "author": {
                            "user_id": "user-QzIHc7YKSV21t9lzDntuQynG",
                            "display_name": "Dmitry Khanukov",
                            "link_to": null,
                            "selected_display": "name",
                            "is_verified": true,
                            "will_receive_support_emails": null,
                            "socials": {}
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "SQL Expert",
                            "description": "SQL expert for optimization and queries.",
                            "welcome_message": "Hello! Ready to optimize your SQL and DevOps tasks?",
                            "prompt_starters": [
                                "How do I optimize this SQL query?",
                                "Suggest a database structure for my app.",
                                "Explain this SQL error message.",
                                "Help me to optimize this request."
                            ],
                            "profile_pic_id": null,
                            "profile_picture_url": null,
                            "categories": []
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-09T02:30:52.951198+00:00",
                        "updated_at": "2024-01-17T03:03:05.187835+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_tNB8QJoKJslIQOC9y8oMoqiC~gzm_tool_OwJtUTt8Qy0ju3pJ4uny1UAm",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_tNB8QJoKJslIQOC9y8oMoqiC~gzm_tool_bUHB7n7Z9D8wntY7H4aDnZLL",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/markdown",
                                "text/x-ruby",
                                "application/msword",
                                "text/x-csharp",
                                "text/javascript",
                                "application/x-latext",
                                "text/x-sh",
                                "text/x-c++",
                                "text/x-php",
                                "text/html",
                                "application/pdf",
                                "application/json",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-c",
                                "text/x-java",
                                "text/x-tex",
                                "text/plain",
                                "text/x-typescript",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/jpeg",
                                "image/webp",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-tNwCg2vYv",
                        "organization_id": "org-nc4Oa4HqxP7kfUbVqcAOau70",
                        "short_url": "g-tNwCg2vYv-python",
                        "author": {
                            "user_id": "user-G4liDZL5wULsfaDnalu9mGmk",
                            "display_name": "Maryam Eskandari",
                            "link_to": null,
                            "selected_display": "name",
                            "is_verified": true,
                            "will_receive_support_emails": true,
                            "socials": {}
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Python",
                            "description": "A Python programming assistant for all skill levels.",
                            "welcome_message": "Hello! Ready to dive into Python programming?",
                            "prompt_starters": [
                                "How do I fix this Python error?",
                                "Explain decorators in Python.",
                                "What are the best practices for Python coding?",
                                "How to optimize this Python code?"
                            ],
                            "profile_pic_id": "file-a26rzNZ6uIwkA2NKS71mz5Hj",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-a26rzNZ6uIwkA2NKS71mz5Hj?se=2123-10-24T07%3A11%3A09Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dd0576248-413b-4b98-8215-ae12a76df83a.png&sig=a%2BsJEd1wPLSlt2EHLhZEdjy9ZSyCkq8vS4dfF%2BTfjXI%3D",
                            "categories": []
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-17T07:10:17.808645+00:00",
                        "updated_at": "2024-01-30T17:45:36.687583+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_q0T91SoowM1Wcx0Hrm4JTf6r~gzm_tool_LUn3WDMLKjJYLvOUi4WTw3wX",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_q0T91SoowM1Wcx0Hrm4JTf6r~gzm_tool_ffIMdSJeQPQ9ECpeDZHBN9Yg",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_q0T91SoowM1Wcx0Hrm4JTf6r~gzm_tool_w2rDKruDDimGNxJApgjqqdDb",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/markdown",
                                "text/x-ruby",
                                "application/msword",
                                "text/x-csharp",
                                "text/javascript",
                                "application/x-latext",
                                "text/x-sh",
                                "text/x-c++",
                                "text/x-php",
                                "text/html",
                                "application/pdf",
                                "application/json",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-c",
                                "text/x-java",
                                "text/x-tex",
                                "text/plain",
                                "text/x-typescript",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/jpeg",
                                "image/webp",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-K9j244vjD",
                        "organization_id": "org-8cZPc27vyeuk8tBvXQXEVmH0",
                        "short_url": "g-K9j244vjD-website-designer",
                        "author": {
                            "user_id": "user-1jkA3IbYfn0gquaLtYfpiA0g",
                            "display_name": "Enmanuel De Leon",
                            "link_to": null,
                            "selected_display": "name",
                            "is_verified": true,
                            "will_receive_support_emails": true,
                            "socials": {}
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Website Designer",
                            "description": "Creates and hosts beautiful websites",
                            "welcome_message": "",
                            "prompt_starters": [],
                            "profile_pic_id": null,
                            "profile_picture_url": "https://files.oaiusercontent.com/file-YjBsfMdS4uRf541J1WuY3MBJ?se=2123-11-24T02%3A53%3A13Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3D537021ad-909d-416c-9280-b7171c25aa59.png&sig=S3SM1nIgWgzh8pdVafOMbrjarOTTRD0dcGYBJJLYaAA%3D",
                            "categories": [
                                "Other"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-12-18T02:49:05.595630+00:00",
                        "updated_at": "2024-02-02T06:30:53.518598+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_l2ZXx3hD3wI0zTwcjJv9gSAp~gzm_tool_w46g6vCmdU24i7cop1ambkvC",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_l2ZXx3hD3wI0zTwcjJv9gSAp~gzm_tool_WOYjj1h5ZQS5PcvBq0D45IhJ",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "text/markdown",
                                "text/x-ruby",
                                "application/msword",
                                "text/x-csharp",
                                "text/javascript",
                                "application/x-latext",
                                "text/x-sh",
                                "text/x-c++",
                                "text/x-php",
                                "text/html",
                                "application/pdf",
                                "application/json",
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "text/x-c",
                                "text/x-java",
                                "text/x-tex",
                                "text/plain",
                                "text/x-typescript",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
                            ],
                            "image_mime_types": [
                                "image/gif",
                                "image/jpeg",
                                "image/webp",
                                "image/png"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            }
        ],
        "cursor": null
    }
}