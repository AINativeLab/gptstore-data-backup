{
    "info": {
        "id": "productivity",
        "title": "Productivity",
        "description": "Increase your efficiency",
        "display_type": "ranked",
        "display_group": "Productivity",
        "locale": "global"
    },
    "list": {
        "items": [
            {
                "resource": {
                    "gizmo": {
                        "id": "g-Vklr0BddT",
                        "organization_id": "org-SYqj9TQFQ88iTqHixWNBlu2l",
                        "short_url": "g-Vklr0BddT-slide-maker",
                        "author": {
                            "user_id": "user-t0D9RBPCtvLGuZUnv2qKGobB",
                            "display_name": "aidocmaker.com",
                            "link_to": "https://aidocmaker.com",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Slide Maker",
                            "description": "Prompt to create PowerPoint presentations. Supports creating 20+ slide presentations. Can read links to web pages, Google Drive, OneDrive, and more to fetch content.",
                            "prompt_starters": [
                                "What can this GPT do?",
                                "Academic presentation on CRISPR for genetic disorders.",
                                "Sales presentation for NVIDIA H100 GPU chips.",
                                "Investment presentation on NVIDIA from 2010-2020."
                            ],
                            "profile_pic_id": "file-7wucSlKrcCoipKRoTaxydYsv",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-7wucSlKrcCoipKRoTaxydYsv?se=2123-10-18T01%3A57%3A11Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dlogo.png&sig=b8skgReALrhw4frzasMMf/5yY148%2B5pjmi9YtngLHkA%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-11T01:55:08.362247+00:00",
                        "updated_at": "2024-03-01T16:51:22.925839+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_9ev01eVTYJAyBIWLyXx6mFSr~gzm_tool_MvZxAoJbtrnbZ7ZEyh7CGTMM",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_9ev01eVTYJAyBIWLyXx6mFSr~gzm_tool_bTuBiRrMfPIK8K6LiiSe9OlT",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_rjsbJYlZC8mMYFwQZA2glWLC~gzm_tool_v4bs7XcUOnocT5hcSS96KgF5",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-154606c758a7c67dc48fd3c7217e8d310e33cac1",
                                "domain": "gpt.slides.aidocmaker.com",
                                "raw_spec": null,
                                "json_schema": {
                                    "components": {
                                        "schemas": {
                                            "CreateDocumentIndirectlyWithGptRequest": {
                                                "properties": {
                                                    "background_info": {
                                                        "default": "",
                                                        "description": "Important background information that will be used as context by a GPT-3.5 model to create the document. Should contain all context information needed to generate document, including specific details and relevant technical information.",
                                                        "title": "Background Info",
                                                        "type": "string"
                                                    },
                                                    "content": {
                                                        "title": "Content",
                                                        "type": "string"
                                                    },
                                                    "language": {
                                                        "default": "ENGLISH",
                                                        "description": "The target human language for the generated document.",
                                                        "title": "Language",
                                                        "type": "string"
                                                    },
                                                    "page_count": {
                                                        "description": "The number of document pages (or number of presentation slides) to generate.",
                                                        "title": "Page Count",
                                                        "type": "integer"
                                                    },
                                                    "prompt": {
                                                        "description": "Instructions that will be used by a GPT-3.5 model to create the document. The instructions should be detailed and contain important information.",
                                                        "title": "Prompt",
                                                        "type": "string"
                                                    },
                                                    "title": {
                                                        "title": "Title",
                                                        "type": "string"
                                                    },
                                                    "url": {
                                                        "default": "",
                                                        "description": "[OPTIONAL] URL to import data for document creation, such as web link, Google Drive / OneDrive link or aidocmaker.com link.",
                                                        "title": "Url",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "prompt",
                                                    "page_count"
                                                ],
                                                "title": "CreateDocumentIndirectlyWithGptRequest",
                                                "type": "object"
                                            },
                                            "HTTPValidationError": {
                                                "properties": {
                                                    "detail": {
                                                        "items": {
                                                            "$ref": "#/components/schemas/ValidationError"
                                                        },
                                                        "title": "Detail",
                                                        "type": "array"
                                                    }
                                                },
                                                "title": "HTTPValidationError",
                                                "type": "object"
                                            },
                                            "ReadDocV2Request": {
                                                "properties": {
                                                    "f1_http_url": {
                                                        "description": "User will pass a HTTPS or HTTP url to a file so that the file contents can be read.",
                                                        "title": "F1 Http Url",
                                                        "type": "string"
                                                    },
                                                    "f2_query": {
                                                        "default": "",
                                                        "description": "User will pass a query string to fetch relevant sections from the contents. It will be used for sentence-level similarity search on the document based on embeddings.",
                                                        "title": "F2 Query",
                                                        "type": "string"
                                                    },
                                                    "f3_selected_pages": {
                                                        "default": [],
                                                        "description": "Filter document on these page numbers. Use empty list to get all pages.",
                                                        "items": {
                                                            "type": "integer"
                                                        },
                                                        "title": "F3 Selected Pages",
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "f1_http_url"
                                                ],
                                                "title": "ReadDocV2Request",
                                                "type": "object"
                                            },
                                            "ValidationError": {
                                                "properties": {
                                                    "loc": {
                                                        "items": {
                                                            "anyOf": [
                                                                {
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "type": "integer"
                                                                }
                                                            ]
                                                        },
                                                        "title": "Location",
                                                        "type": "array"
                                                    },
                                                    "msg": {
                                                        "title": "Message",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "title": "Error Type",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "loc",
                                                    "msg",
                                                    "type"
                                                ],
                                                "title": "ValidationError",
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "info": {
                                        "description": "A GPT that allows the user to create a presentation.",
                                        "title": "Slide Maker GPT",
                                        "version": "v1"
                                    },
                                    "openapi": "3.1.0",
                                    "paths": {
                                        "/create_pptx_indirectly_with_gpt": {
                                            "post": {
                                                "description": "Create a presentation indirectly by prompting a GPT model specialized for generating long presentations",
                                                "operationId": "create_pptx_indirectly_with_gpt",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CreateDocumentIndirectlyWithGptRequest"
                                                            }
                                                        }
                                                    },
                                                    "required": true
                                                },
                                                "responses": {
                                                    "200": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        },
                                                        "description": "Successful Response"
                                                    },
                                                    "422": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        },
                                                        "description": "Validation Error"
                                                    }
                                                },
                                                "summary": "Create a presentation indirectly by prompting a GPT model specialized for generating long presentations"
                                            }
                                        },
                                        "/read_url": {
                                            "post": {
                                                "description": "Allows for reading the contents of an URL link, including PDF/DOC/DOCX/PPT/CSV/XLS/XLSX/HTML content, Google Drive, Dropbox, OneDrive, aidocmaker.com docs. Always wrap image URLs from the response field `z1_image_urls` in Markdown, where each image has a ## DESCRIPTION.",
                                                "operationId": "read_url",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/ReadDocV2Request"
                                                            }
                                                        }
                                                    },
                                                    "required": true
                                                },
                                                "responses": {
                                                    "200": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        },
                                                        "description": "Successful Response"
                                                    },
                                                    "422": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        },
                                                        "description": "Validation Error"
                                                    }
                                                },
                                                "summary": "Read the contents of an URL link"
                                            }
                                        }
                                    },
                                    "servers": [
                                        {
                                            "url": "https://gpt.slides.aidocmaker.com"
                                        }
                                    ]
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://www.aidocmaker.com/privacy-policy"
                            }
                        },
                        {
                            "id": "gzm_cnf_no05oO7UnTZzz5E9f19jLSYr~gzm_tool_WwAMq8m2N7ibfrpZoBTdkrbx",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/json",
                                "text/x-c++",
                                "application/msword",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/markdown",
                                "text/x-csharp",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-java",
                                "text/javascript",
                                "application/pdf",
                                "text/x-php",
                                "text/x-tex",
                                "text/x-c",
                                "text/plain",
                                "text/html",
                                "application/x-latext",
                                "text/x-sh"
                            ],
                            "image_mime_types": [
                                "image/png",
                                "image/webp",
                                "image/jpeg",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-pNWGgUYqS",
                        "organization_id": "org-qqBm9uftX8eDJ6X4s5PWt8tv",
                        "short_url": "g-pNWGgUYqS-webpilot",
                        "author": {
                            "user_id": "user-H6oKEgOlrNwORingNRbr9llz",
                            "display_name": "gpts.webpilot.ai",
                            "link_to": "https://gpts.webpilot.ai",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": true,
                            "display_socials": [
                                {
                                    "id": "githubverify-dff6-4871-860f-d61dfa7afa7f",
                                    "type": "github",
                                    "display_name": "GitHub",
                                    "verified": true,
                                    "verified_data": {
                                        "id": 6043666,
                                        "username": "CocoSgt",
                                        "type": "github",
                                        "link_to": "https://github.com/CocoSgt"
                                    }
                                },
                                {
                                    "id": "twitterverify-43d2-b12a-bbe33d600487",
                                    "type": "twitter",
                                    "display_name": "X",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "553334373",
                                        "username": "@CocoSgt_twt",
                                        "type": "twitter",
                                        "link_to": "https://twitter.com/CocoSgt_twt"
                                    }
                                }
                            ]
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "WebPilot",
                            "description": "Search, Browse, Write & Agent. Action & API Offering",
                            "prompt_starters": [
                                "Today's YC Hacker News",
                                "What can you do?",
                                "WebPilot Open-source ExtensionWrite",
                                "WebPilot Action & API"
                            ],
                            "profile_pic_id": "file-WCpXavrnVzievanNCKCQBSHC",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-WCpXavrnVzievanNCKCQBSHC?se=2123-12-25T04%3A39%3A21Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DWebPilot_Logo.jpg&sig=srB2//6MMMj0T%2BNRuDljzYjCsYYMngBRcaSN%2BpX6tIs%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-07T04:51:43.805735+00:00",
                        "updated_at": "2024-02-26T06:06:46.712735+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_zx65CZpfEoKfr7nKDRdhdyur~gzm_tool_gcQehRwFsP54ttHnDm4VJtiI",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-573a29962beccba069fbad15dc3e4dccb409daac",
                                "domain": "gpts.webpilot.ai",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.0.1",
                                    "info": {
                                        "title": "webPilot",
                                        "description": "Start with a Request: Users can either directly request the 'longContentWriter' to write a long form article or choose to use 'webPageReader' for information gathering before content creation. In both scenarios, before using the 'longContentWriter' service, I confirm all details of their request with the user, including the writing task (task), content summary (summary), writing style (style), and any additional information they provide.\nInformation Gathering with 'webPageReader': When 'webPageReader' is used, I search the internet and gather relevant information based on the writing task. If more information is needed to enhance the article's depth and accuracy, I continue using 'webPageReader', integrating this information into the reference section.\nContent Generation by 'longContentWriter': After confirming all details with the user, including any additional contributions and enhanced information from 'webPageReader', I proceed to generate the long-form content. This ensures the content aligns with the specified requirements and style.\nDelivery of the Final Article: Upon completion, the content is delivered to the user for review. They can request revisions or additional information if necessary.\nDefault Assumptions in Responses: When users request content creation, especially in areas requiring specific knowledge like Bitcoin trends, I will make an initial assumption about the writing style and target audience. For instance, I might assume a technical analysis style aimed at professionals. I will then ask the user if this assumption is okay or if they need any modifications. This approach helps streamline the content creation process.",
                                        "version": "v1.1"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://gpts.webpilot.ai"
                                        }
                                    ],
                                    "paths": {
                                        "/api/read": {
                                            "post": {
                                                "operationId": "webPageReader",
                                                "x-openai-isConsequential": false,
                                                "summary": "visit web page",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/visitWebPageRequest"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "OK",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/visitWebPageResponse"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Bad Request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/visitWebPageError"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/api/write": {
                                            "post": {
                                                "operationId": "longContentWriter",
                                                "x-openai-isConsequential": false,
                                                "summary": "generate a book",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/generateContentRequest"
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "OK",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/generateContentResponse"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Bad Request",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/generateContentError"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "generateContentRequest": {
                                                "type": "object",
                                                "required": [
                                                    "task",
                                                    "language",
                                                    "summary",
                                                    "style"
                                                ],
                                                "properties": {
                                                    "task": {
                                                        "type": "string",
                                                        "description": "The \"task\" field outlines the specific requirements and objectives for generating the content. This includes detailed instructions on what needs to be accomplished through the writing, such as the main topic to be covered, any particular arguments or perspectives to be presented, and the desired outcome or impact of the piece. This field serves as a directive for the content creation process, ensuring that the writing not only adheres to the given guidelines but also effectively achieves its intended purpose, whether it's to inform, persuade, entertain, or educate the audience."
                                                    },
                                                    "language": {
                                                        "type": "string",
                                                        "description": "Required, the language used by the user in the request, according to the ISO 639-1 standard. For Chinese, use zh-CN for Simplified Chinese and zh-TW for Traditional Chinese."
                                                    },
                                                    "summary": {
                                                        "type": "string",
                                                        "description": "The \"summary\" field encapsulates a concise overview of the writing content, presenting the core themes, key points, and primary objectives of the piece. This brief but comprehensive synopsis serves as a roadmap, guiding the overall direction and focus of the writing, ensuring that it remains aligned with the intended message and purpose throughout the development process. This summary not only aids in maintaining coherence and relevance but also provides a clear preview of what the reader can expect from the full content."
                                                    },
                                                    "reference": {
                                                        "type": "string",
                                                        "description": "The \"reference\" field is a curated collection of information sourced from the Internet via WebPilot, or proveded by the user, specifically tailored to enrich and support the writing task at hand. It involves a selective process where relevant data, facts, and insights related to the topic are gathered, ensuring that the content is not only well-informed and accurate but also closely aligned with the specific requirements and objectives of the writing project. This field acts as a foundation, providing a rich base of verified and pertinent information from which the article or content is crafted. This field would be long."
                                                    },
                                                    "style": {
                                                        "type": "string",
                                                        "description": "The \"style\" field in content creation is a comprehensive framework that includes four essential components - the writing tone or style, the target audience, the language style, and inspiration from a notable content creator. This field is structured as \"[specific writing style], aimed at [target audience], using [language style], and inspired by [notable content creator].\" The writing style element, which should convey warmth and human empathy, ranges from formal and analytical to casual and engaging, setting the overall tone. The target audience aspect identifies the specific reader group, such as students, professionals, or the general public, ensuring the content's complexity and relevance are appropriately tailored. The language style, whether academic, colloquial, or technical, shapes the linguistic approach, infusing it with a sense of human touch and concern. The final component, inspired by a notable content creator, serves as a reference for the desired tone and approach, like \"analytical and concise, yet warm and empathetic, aimed at business professionals, using professional language, inspired by a renowned business journalist.\" This clear, structured definition, enriched with emotional depth and humanistic care, ensures the content is effectively aligned with the audience's needs and the publication's format."
                                                    }
                                                }
                                            },
                                            "generateContentResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "message": {
                                                        "type": "string",
                                                        "description": "Result message of the request"
                                                    }
                                                }
                                            },
                                            "generateContentError": {
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "type": "string",
                                                        "description": "error code"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "error message"
                                                    },
                                                    "detail": {
                                                        "type": "string",
                                                        "description": "error detail"
                                                    }
                                                }
                                            },
                                            "visitWebPageResponse": {
                                                "type": "object",
                                                "properties": {
                                                    "title": {
                                                        "type": "string",
                                                        "description": "The title of this web page"
                                                    },
                                                    "content": {
                                                        "type": "string",
                                                        "description": "The content of the web page's url to be summarized"
                                                    },
                                                    "meta": {
                                                        "type": "object",
                                                        "description": "The Html meta info of the web page"
                                                    },
                                                    "links": {
                                                        "type": "array",
                                                        "description": "Some links in the web page",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "extra_search_results": {
                                                        "type": "array",
                                                        "description": "Additional Search results",
                                                        "items": {
                                                            "type": "object",
                                                            "properties": {
                                                                "title": {
                                                                    "type": "string",
                                                                    "description": "the title of this search result"
                                                                },
                                                                "link": {
                                                                    "type": "string",
                                                                    "description": "the link of this search result"
                                                                },
                                                                "snippet": {
                                                                    "type": "string",
                                                                    "description": "the snippet of this search result"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "todo": {
                                                        "type": "array",
                                                        "description": "what to do with the content",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "tips": {
                                                        "type": "array",
                                                        "description": "Tips placed at the end of the answer",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "rules": {
                                                        "description": "Adherence is required when outputting content.",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    }
                                                }
                                            },
                                            "visitWebPageRequest": {
                                                "type": "object",
                                                "required": [
                                                    "link",
                                                    "ur"
                                                ],
                                                "properties": {
                                                    "link": {
                                                        "type": "string",
                                                        "description": "Required, The web page's url to visit and retrieve content from."
                                                    },
                                                    "ur": {
                                                        "type": "string",
                                                        "description": "Required, a clear statement of the user's request, can be used as a search query and may include search operators."
                                                    },
                                                    "lp": {
                                                        "type": "boolean",
                                                        "description": "Required, Whether the link is directly provided by the user"
                                                    },
                                                    "rt": {
                                                        "type": "boolean",
                                                        "description": "If the last request doesn't meet user's need, set this to true when trying to retry another request."
                                                    },
                                                    "l": {
                                                        "type": "string",
                                                        "description": "Required, the language used by the user in the request, according to the ISO 639-1 standard. For Chinese, use zh-CN for Simplified Chinese and zh-TW for Traditional Chinese."
                                                    }
                                                }
                                            },
                                            "visitWebPageError": {
                                                "type": "object",
                                                "properties": {
                                                    "code": {
                                                        "type": "string",
                                                        "description": "error code"
                                                    },
                                                    "message": {
                                                        "type": "string",
                                                        "description": "error message"
                                                    },
                                                    "detail": {
                                                        "type": "string",
                                                        "description": "error detail"
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://gpts.webpilot.ai/privacy_policy.html"
                            }
                        },
                        {
                            "id": "gzm_cnf_oJa2gkGBM0P6mDX9SdG1yby1~gzm_tool_Ov6TzSRCIdbVCY0jYPUVGhlw",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_oJa2gkGBM0P6mDX9SdG1yby1~gzm_tool_0CHl1DzyqCjytegKLhQwjx6M",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/json",
                                "text/x-c++",
                                "application/msword",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/markdown",
                                "text/x-csharp",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-java",
                                "text/javascript",
                                "application/pdf",
                                "text/x-php",
                                "text/x-tex",
                                "text/x-c",
                                "text/plain",
                                "text/html",
                                "application/x-latext",
                                "text/x-sh"
                            ],
                            "image_mime_types": [
                                "image/png",
                                "image/webp",
                                "image/jpeg",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-0gFt7qej4",
                        "organization_id": "org-EMOKHTaWBdRXJCptB9ScL6bQ",
                        "short_url": "g-0gFt7qej4-powerpoint",
                        "author": {
                            "user_id": "user-Axl3HnY1uTtlXzadazVeXgnN",
                            "display_name": "gptmakerspace.com",
                            "link_to": "https://gptmakerspace.com",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "PowerPoint",
                            "description": "Creates High Quality Presentations.",
                            "prompt_starters": [
                                "Create a presentation outline for me.",
                                "Generate VBA code for my presentation.",
                                "Help me insert VBA code into PowerPoint.",
                                "Convert my slides to a PowerPoint outline."
                            ],
                            "profile_pic_id": "file-WKhIX1prMm8WgBiPKyuPVLXj",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-WKhIX1prMm8WgBiPKyuPVLXj?se=2123-10-16T03%3A50%3A09Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dpp.png&sig=21Yts4EvAe8Pi7fQR7lk52818vlFBW4oTgSikhXeMIQ%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-09T03:31:55.207705+00:00",
                        "updated_at": "2024-02-13T06:30:24.769772+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_rS5woHZo55ArRSIVazDlhhkt~gzm_tool_RQ03Z9Feb4VibyixDdubUrJM",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_rS5woHZo55ArRSIVazDlhhkt~gzm_tool_oYw6L3zg2rXjYpzVskw7E9j2",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/json",
                                "text/x-c++",
                                "application/msword",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/markdown",
                                "text/x-csharp",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-java",
                                "text/javascript",
                                "application/pdf",
                                "text/x-php",
                                "text/x-tex",
                                "text/x-c",
                                "text/plain",
                                "text/html",
                                "application/x-latext",
                                "text/x-sh"
                            ],
                            "image_mime_types": [
                                "image/png",
                                "image/webp",
                                "image/jpeg",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-MrgKnTZbc",
                        "organization_id": "org-lgpfb8y4pwLxgsMJQVpVtWvc",
                        "short_url": "g-MrgKnTZbc-resume",
                        "author": {
                            "user_id": "user-P0ihRV0AwwvEfbwIvIHOrN8M",
                            "display_name": "jobright.ai",
                            "link_to": "https://jobright.ai",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Resume",
                            "description": "By combining the expertise of top resume writers with advanced AI, we assist in diagnosing and enhancing your resume | ATS Compatible | Tailor Your Resume for a Specific Job | We value your experience, please contact support@jobright.ai if you need support❤️!",
                            "prompt_starters": [
                                "Can you help me analyze my resume?",
                                "Can you help me tailor my resume with this job?",
                                "Find jobs that fit with my background?",
                                "How to make my resume ATS compatible? "
                            ],
                            "profile_pic_id": "file-0tpK8Pe8mMuE8HB8KKPcyoRn",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-0tpK8Pe8mMuE8HB8KKPcyoRn?se=2123-12-21T20%3A47%3A14Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3DScreenshot%25202024-01-14%2520at%252012.33.34%25E2%2580%25AFPM.png&sig=xiF%2Bmn%2B4uHhqgzWNSOA8F0aMnaxWguZ%2BsMb%2Bj1NYwFc%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2024-01-14T05:48:30.102508+00:00",
                        "updated_at": "2024-02-27T04:50:57.984593+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_5SlRIhyoxt6ROBpwsweQPCdM~gzm_tool_Uvbq0hKN2t4ieU7prCuFju0F",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-658ef1b58f5cace5a786bdf29ca3645995d342dc",
                                "domain": "swan-api.jobright.ai",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.1.0",
                                    "info": {
                                        "title": "Job Search and Query Parsing API",
                                        "description": "APIs for parsing search queries and searching jobs",
                                        "version": "v1.0.0"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://swan-api.jobright.ai"
                                        }
                                    ],
                                    "components": {
                                        "schemas": {
                                            "FilterCondition": {
                                                "type": "object",
                                                "properties": {
                                                    "jobTitle": {
                                                        "type": "string"
                                                    },
                                                    "jobTypes": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "city": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "seniority": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "companyCategory": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        }
                                                    },
                                                    "annualSalaryMinimum": {
                                                        "type": "integer",
                                                        "nullable": true
                                                    },
                                                    "isH1BOnly": {
                                                        "type": "boolean"
                                                    },
                                                    "roleType": {
                                                        "type": "string",
                                                        "nullable": true
                                                    },
                                                    "skills": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "companyStages": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "string"
                                                        },
                                                        "nullable": true
                                                    },
                                                    "workModel": {
                                                        "type": "array",
                                                        "items": {
                                                            "type": "integer"
                                                        }
                                                    },
                                                    "radiusRange": {
                                                        "type": "number",
                                                        "format": "float"
                                                    },
                                                    "daysAgo": {
                                                        "type": "integer",
                                                        "description": "default to 3, represents jobs within 3 day (72 hours)",
                                                        "nullable": true
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "paths": {
                                        "/swan/gpts/oneline/parse": {
                                            "post": {
                                                "description": "Parse user's search preference",
                                                "operationId": "ParseSearchPreference",
                                                "x-openai-isConsequential": false,
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "oneLineInput": {
                                                                        "type": "string",
                                                                        "description": "One sentence input from user to describe the job search preference"
                                                                    },
                                                                    "visitId": {
                                                                        "type": "string",
                                                                        "description": "An ID to identify user's identity, can hardcode to 4096 for now"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful response",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "success": {
                                                                            "type": "boolean",
                                                                            "description": "Indicates if the request was successful"
                                                                        },
                                                                        "errorCode": {
                                                                            "type": "integer",
                                                                            "description": "Error code, 10000 for success"
                                                                        },
                                                                        "errorMsg": {
                                                                            "type": "string",
                                                                            "description": "Error message if applicable"
                                                                        },
                                                                        "result": {
                                                                            "type": "object",
                                                                            "description": "Filter conditions returned by the server",
                                                                            "properties": {
                                                                                "filterResult": {
                                                                                    "$ref": "#/components/schemas/FilterCondition"
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/swan/gpts/job/search": {
                                            "post": {
                                                "description": "Search for jobs based on various filters",
                                                "operationId": "JobSearch",
                                                "x-openai-isConsequential": false,
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "startPos": {
                                                                        "type": "integer",
                                                                        "description": "The starting position for the search results. This parameter could be for simple pagination, for example, if user has seen 20 jobs, you can set startPos to 20 for next batch of jobs."
                                                                    },
                                                                    "sortCondition": {
                                                                        "type": "string",
                                                                        "description": "The condition used for sorting the search results. RELEVANCE is the default value which means sort by relevance, FRESHNESS is sorting by fresheness so that fresh jobs will go first."
                                                                    },
                                                                    "filterCondition": {
                                                                        "$ref": "#/components/schemas/FilterCondition"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful job search response",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "results": {
                                                                            "type": "array",
                                                                            "description": "array of jobs",
                                                                            "items": {
                                                                                "type": "object",
                                                                                "properties": {
                                                                                    "jobResult": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "jobId": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "jobTitle": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "jobSeniority": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "jobLocation": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "isRemote": {
                                                                                                "type": "boolean"
                                                                                            },
                                                                                            "workModel": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "publishTime": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "publishTimeDesc": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "salaryDesc": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "employmentType": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "jobSummary": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "requirements": {
                                                                                                "type": "array",
                                                                                                "description": "List of requirements or qualifications of the job",
                                                                                                "items": {
                                                                                                    "type": "string"
                                                                                                }
                                                                                            },
                                                                                            "url": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "applyLink": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "h1BStatus": {
                                                                                                "type": "string",
                                                                                                "description": "Either Past Sponsorship or Explicit mentioned"
                                                                                            }
                                                                                        }
                                                                                    },
                                                                                    "companyResult": {
                                                                                        "type": "object",
                                                                                        "properties": {
                                                                                            "companyName": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "companySize": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "companyDesc": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "companyCategories": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "companyURL": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "fundraisingCurrentStage": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "fundraisingTotalFunding": {
                                                                                                "type": "string"
                                                                                            },
                                                                                            "grating": {
                                                                                                "type": "object",
                                                                                                "description": "glassdoor rating"
                                                                                            }
                                                                                        }
                                                                                    }
                                                                                }
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "service_http",
                                    "instructions": "",
                                    "authorization_type": "bearer",
                                    "verification_tokens": {},
                                    "custom_auth_header": ""
                                },
                                "privacy_policy_url": "https://jobright.ai/legal/privacy"
                            }
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/json",
                                "text/x-c++",
                                "application/msword",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/markdown",
                                "text/x-csharp",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-java",
                                "text/javascript",
                                "application/pdf",
                                "text/x-php",
                                "text/x-tex",
                                "text/x-c",
                                "text/plain",
                                "text/html",
                                "application/x-latext",
                                "text/x-sh"
                            ],
                            "image_mime_types": [
                                "image/png",
                                "image/webp",
                                "image/jpeg",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-8m2CPAfeF",
                        "organization_id": "org-LFizWYCMMt6pjUXgiMAxBJtC",
                        "short_url": "g-8m2CPAfeF-excel",
                        "author": {
                            "user_id": "user-Z9JrMzzMAJlIByGeRtUptmUN",
                            "display_name": "pulsr.co.uk",
                            "link_to": "https://pulsr.co.uk",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": true,
                            "display_socials": [
                                {
                                    "id": "linkedinverify-4b97-9080-6c959845166a",
                                    "type": "linkedin",
                                    "display_name": "LinkedIn",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "uRC2-heAmK",
                                        "username": "Leo Feasby",
                                        "display_name": "Leo Feasby",
                                        "type": "linkedin",
                                        "link_to": "https://linkedin.com/in/leo-feasby-4b6006251"
                                    }
                                },
                                {
                                    "id": "twitterverify-43d2-b12a-bbe33d600487",
                                    "type": "twitter",
                                    "display_name": "X",
                                    "verified": true,
                                    "verified_data": {
                                        "id": "1752728225191456768",
                                        "username": "@leo_pulsr",
                                        "type": "twitter",
                                        "link_to": "https://twitter.com/leo_pulsr"
                                    }
                                }
                            ]
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "excel",
                            "description": "The worlds most powerful Excel assistant.",
                            "prompt_starters": [
                                "Data Analysis mode",
                                "Graph mode",
                                "Reorganise data mode",
                                "Function writing mode"
                            ],
                            "profile_pic_id": "file-TlO1ApPhsLjAldNLJonCWZAk",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-TlO1ApPhsLjAldNLJonCWZAk?se=2124-02-02T20%3A13%3A11Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3Dexcel-logo-0.png&sig=G8txhf0b22CwJ9mjIjJN/DBEo1Fmx9apDmCXta2SnqM%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2024-02-11T21:47:19.884058+00:00",
                        "updated_at": "2024-03-04T09:13:02.535333+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_W8h5HmUXjdM4SKVHog66l73T~gzm_tool_4j6Bgh8zhedDnJfnRBXdClNV",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_lStu7a4CyRcXuy78SA87uFbx~gzm_tool_gmwUTl44qqTXHcb4sqSSdDto",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_lStu7a4CyRcXuy78SA87uFbx~gzm_tool_Zldj6QRtSORxl814Jrl2ED2x",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/json",
                                "text/x-c++",
                                "application/msword",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/markdown",
                                "text/x-csharp",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-java",
                                "text/javascript",
                                "application/pdf",
                                "text/x-php",
                                "text/x-tex",
                                "text/x-c",
                                "text/plain",
                                "text/html",
                                "application/x-latext",
                                "text/x-sh"
                            ],
                            "image_mime_types": [
                                "image/png",
                                "image/webp",
                                "image/jpeg",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-Gt6Z8pqWF",
                        "organization_id": "org-SYqj9TQFQ88iTqHixWNBlu2l",
                        "short_url": "g-Gt6Z8pqWF-doc-maker",
                        "author": {
                            "user_id": "user-t0D9RBPCtvLGuZUnv2qKGobB",
                            "display_name": "aidocmaker.com",
                            "link_to": "https://aidocmaker.com",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Doc Maker",
                            "description": "Prompt to create documents, such as resumes, reports, and more. Export to PDF, DOCX, PPTX, XLSX, CSV.",
                            "prompt_starters": [
                                "What can this GPT do?",
                                "Create a proposal for using AI in digital marketing",
                                "Create a presentation on the history of AI",
                                "Create a guide on speeding up a PC"
                            ],
                            "profile_pic_id": "file-13dEVJG38EwNmA3nAZUykEa0",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-13dEVJG38EwNmA3nAZUykEa0?se=2123-10-15T15%3A43%3A23Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dlogo.png&sig=qSmhlnQuzuTPcWSBeyBDOgSbwDMcQXh48GvPiDNM4UY%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-08T15:39:39.648513+00:00",
                        "updated_at": "2024-03-01T20:09:52.931935+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_cv5WNO68dY0e9ELXPELXvf1c~gzm_tool_iXtvQJeFY4pKFjYdH0Tgan7d",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-4bbbf1dcf1e4d37aa0b2870a61b008122eac30fa",
                                "domain": "gpt.docs.aidocmaker.com",
                                "raw_spec": null,
                                "json_schema": {
                                    "components": {
                                        "schemas": {
                                            "CreateAudioFileRequest": {
                                                "properties": {
                                                    "transcript": {
                                                        "description": "Text that will be used to generate the audio file",
                                                        "title": "Transcript",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "transcript"
                                                ],
                                                "title": "CreateAudioFileRequest",
                                                "type": "object"
                                            },
                                            "CreateDocumentDirectlyWithHtmlRequest": {
                                                "properties": {
                                                    "background_info": {
                                                        "title": "Background Info",
                                                        "type": "string"
                                                    },
                                                    "content": {
                                                        "description": "Content of the document in HTML format",
                                                        "title": "Content",
                                                        "type": "string"
                                                    },
                                                    "language": {
                                                        "title": "Language",
                                                        "type": "string"
                                                    },
                                                    "page_count": {
                                                        "title": "Page Count",
                                                        "type": "integer"
                                                    },
                                                    "prompt": {
                                                        "title": "Prompt",
                                                        "type": "string"
                                                    },
                                                    "title": {
                                                        "description": "Title of the document.",
                                                        "title": "Title",
                                                        "type": "string"
                                                    },
                                                    "url": {
                                                        "title": "Url",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "title",
                                                    "content"
                                                ],
                                                "title": "CreateDocumentDirectlyWithHtmlRequest",
                                                "type": "object"
                                            },
                                            "CreateDocumentIndirectlyWithGptRequest": {
                                                "properties": {
                                                    "background_info": {
                                                        "default": "",
                                                        "description": "Important background information that will be used as context by a GPT-3.5 model to create the document. Should contain all context information needed to generate document, including specific details and relevant technical information.",
                                                        "title": "Background Info",
                                                        "type": "string"
                                                    },
                                                    "content": {
                                                        "title": "Content",
                                                        "type": "string"
                                                    },
                                                    "language": {
                                                        "default": "ENGLISH",
                                                        "description": "The target human language for the generated document.",
                                                        "title": "Language",
                                                        "type": "string"
                                                    },
                                                    "page_count": {
                                                        "description": "The number of document pages (or number of presentation slides) to generate.",
                                                        "title": "Page Count",
                                                        "type": "integer"
                                                    },
                                                    "prompt": {
                                                        "description": "Instructions that will be used by a GPT-3.5 model to create the document. The instructions should be detailed and contain important information.",
                                                        "title": "Prompt",
                                                        "type": "string"
                                                    },
                                                    "title": {
                                                        "title": "Title",
                                                        "type": "string"
                                                    },
                                                    "url": {
                                                        "default": "",
                                                        "description": "[OPTIONAL] URL to import data for document creation, such as web link, Google Drive / OneDrive link or aidocmaker.com link.",
                                                        "title": "Url",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "prompt",
                                                    "page_count"
                                                ],
                                                "title": "CreateDocumentIndirectlyWithGptRequest",
                                                "type": "object"
                                            },
                                            "CreateSpreadsheetRequest": {
                                                "properties": {
                                                    "prompt": {
                                                        "description": "Prompt context for creating spreadsheet - will be shown later in document UI.",
                                                        "title": "Prompt",
                                                        "type": "string"
                                                    },
                                                    "sheets": {
                                                        "description": "List of sheets inside spreadsheet. Each sheet consists of a header row, followed by rows of data",
                                                        "items": {
                                                            "$ref": "#/components/schemas/DocmakerSheet"
                                                        },
                                                        "title": "Sheets",
                                                        "type": "array"
                                                    },
                                                    "title": {
                                                        "default": "Untitled",
                                                        "description": "Mandatory: the title of the spreadsheet. Must be included.",
                                                        "title": "Title",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "prompt",
                                                    "sheets"
                                                ],
                                                "title": "CreateSpreadsheetRequest",
                                                "type": "object"
                                            },
                                            "DocmakerSheet": {
                                                "properties": {
                                                    "content": {
                                                        "default": "",
                                                        "description": "Sheet data content in CSV format. Enclose all fields in double quotes.",
                                                        "title": "Content",
                                                        "type": "string"
                                                    }
                                                },
                                                "title": "DocmakerSheet",
                                                "type": "object"
                                            },
                                            "HTTPValidationError": {
                                                "properties": {
                                                    "detail": {
                                                        "items": {
                                                            "$ref": "#/components/schemas/ValidationError"
                                                        },
                                                        "title": "Detail",
                                                        "type": "array"
                                                    }
                                                },
                                                "title": "HTTPValidationError",
                                                "type": "object"
                                            },
                                            "Markdown2ResumeRequest": {
                                                "properties": {
                                                    "prompt": {
                                                        "description": "Prompt used to describe the doc creation request. IT IS NOT USED TO CREATE DOC, only to display in UI for user to view later.",
                                                        "title": "Prompt",
                                                        "type": "string"
                                                    },
                                                    "resume_content": {
                                                        "default": "",
                                                        "description": "Resume content in Markdown format. Do NOT include any of the above information (name, email, phone, location, website url) here; they should be directly placed via their respective fields. When using acronyms, ensure to write out the full term as well. For example, instead of writing 'SEO', write 'Search Engine Optimization (SEO)'.",
                                                        "title": "Resume Content",
                                                        "type": "string"
                                                    },
                                                    "resume_field_email": {
                                                        "description": "Optional: Personal email to be placed directly into the resume/cv. If supplied, do NOT include it in the formatted_markdown field.",
                                                        "title": "Resume Field Email",
                                                        "type": "string"
                                                    },
                                                    "resume_field_location": {
                                                        "description": "Optional: Location to be placed directly into the resume/cv. If supplied, do NOT include it in the formatted_markdown field.",
                                                        "title": "Resume Field Location",
                                                        "type": "string"
                                                    },
                                                    "resume_field_name": {
                                                        "default": "",
                                                        "description": "Mandatory: Personal name to be placed directly into the resume/cv. Do NOT include it in the formatted_markdown field.",
                                                        "title": "Resume Field Name",
                                                        "type": "string"
                                                    },
                                                    "resume_field_phone": {
                                                        "description": "Optional: Phone number to be placed directly into the resume/cv. If supplied, do NOT include it in the formatted_markdown field.",
                                                        "title": "Resume Field Phone",
                                                        "type": "string"
                                                    },
                                                    "resume_field_website_url": {
                                                        "description": "Optional: Website URL to be placed directly into the resume/cv. If supplied, do NOT include it in the formatted_markdown field.",
                                                        "title": "Resume Field Website Url",
                                                        "type": "string"
                                                    },
                                                    "title": {
                                                        "default": "Untitled",
                                                        "description": "Mandatory: Title of the document.",
                                                        "title": "Title",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "prompt"
                                                ],
                                                "title": "Markdown2ResumeRequest",
                                                "type": "object"
                                            },
                                            "PptxRequest": {
                                                "properties": {
                                                    "intro_slide": {
                                                        "allOf": [
                                                            {
                                                                "$ref": "#/components/schemas/SimpleIntroSlide"
                                                            }
                                                        ],
                                                        "description": "The first slide in the deck - IT SHOULD ONLY HAVE A TITLE AND NO CONTENT",
                                                        "title": "Intro Slide"
                                                    },
                                                    "prompt": {
                                                        "description": "Prompt context for creating doc - will be shown later in document UI.",
                                                        "title": "Prompt",
                                                        "type": "string"
                                                    },
                                                    "slides": {
                                                        "description": "List of slides following the intro slide. Each slide should only have 2 string params: `title` and `content`. Content is a single string (DO NOT INPUT AS A LIST).",
                                                        "items": {
                                                            "$ref": "#/components/schemas/SimpleSlideContent"
                                                        },
                                                        "title": "Slides",
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "prompt",
                                                    "intro_slide",
                                                    "slides"
                                                ],
                                                "title": "PptxRequest",
                                                "type": "object"
                                            },
                                            "ReadDocV2Request": {
                                                "properties": {
                                                    "f1_http_url": {
                                                        "description": "User will pass a HTTPS or HTTP url to a file so that the file contents can be read.",
                                                        "title": "F1 Http Url",
                                                        "type": "string"
                                                    },
                                                    "f2_query": {
                                                        "default": "",
                                                        "description": "User will pass a query string to fetch relevant sections from the contents. It will be used for sentence-level similarity search on the document based on embeddings.",
                                                        "title": "F2 Query",
                                                        "type": "string"
                                                    },
                                                    "f3_selected_pages": {
                                                        "default": [],
                                                        "description": "Filter document on these page numbers. Use empty list to get all pages.",
                                                        "items": {
                                                            "type": "integer"
                                                        },
                                                        "title": "F3 Selected Pages",
                                                        "type": "array"
                                                    }
                                                },
                                                "required": [
                                                    "f1_http_url"
                                                ],
                                                "title": "ReadDocV2Request",
                                                "type": "object"
                                            },
                                            "SimpleIntroSlide": {
                                                "properties": {
                                                    "title": {
                                                        "description": "The title of the slide. Must be included.",
                                                        "title": "Title",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "title"
                                                ],
                                                "title": "SimpleIntroSlide",
                                                "type": "object"
                                            },
                                            "SimpleSlideContent": {
                                                "properties": {
                                                    "content": {
                                                        "description": "The string content for this slide. DO NOT INPUT AS A LIST. Must contain ALL the text that will go on the slide. Use '\\n' characters for formatting.",
                                                        "title": "Content",
                                                        "type": "string"
                                                    },
                                                    "title": {
                                                        "description": "The title of the slide. Must be included.",
                                                        "title": "Title",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "title",
                                                    "content"
                                                ],
                                                "title": "SimpleSlideContent",
                                                "type": "object"
                                            },
                                            "ValidationError": {
                                                "properties": {
                                                    "loc": {
                                                        "items": {
                                                            "anyOf": [
                                                                {
                                                                    "type": "string"
                                                                },
                                                                {
                                                                    "type": "integer"
                                                                }
                                                            ]
                                                        },
                                                        "title": "Location",
                                                        "type": "array"
                                                    },
                                                    "msg": {
                                                        "title": "Message",
                                                        "type": "string"
                                                    },
                                                    "type": {
                                                        "title": "Error Type",
                                                        "type": "string"
                                                    }
                                                },
                                                "required": [
                                                    "loc",
                                                    "msg",
                                                    "type"
                                                ],
                                                "title": "ValidationError",
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "info": {
                                        "description": "A GPT that allows users to create documents.",
                                        "title": "Doc Maker GPT",
                                        "version": "v1"
                                    },
                                    "openapi": "3.1.0",
                                    "paths": {
                                        "/create_audio": {
                                            "post": {
                                                "operationId": "create_audio",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CreateAudioFileRequest"
                                                            }
                                                        }
                                                    },
                                                    "required": true
                                                },
                                                "responses": {
                                                    "200": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        },
                                                        "description": "Successful Response"
                                                    },
                                                    "422": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        },
                                                        "description": "Validation Error"
                                                    }
                                                },
                                                "summary": "Create an audio file that can be downloaded via URL"
                                            }
                                        },
                                        "/create_document_directly_with_html": {
                                            "post": {
                                                "description": "Create a document directly with HTML content.",
                                                "operationId": "create_document_directly_with_html",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CreateDocumentDirectlyWithHtmlRequest"
                                                            }
                                                        }
                                                    },
                                                    "required": true
                                                },
                                                "responses": {
                                                    "200": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        },
                                                        "description": "Successful Response"
                                                    },
                                                    "422": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        },
                                                        "description": "Validation Error"
                                                    }
                                                },
                                                "summary": "Create a document directly with HTML content"
                                            }
                                        },
                                        "/create_document_indirectly_with_gpt": {
                                            "post": {
                                                "description": "Create a document indirectly by prompting a GPT model specialized for longform writing",
                                                "operationId": "create_document_indirectly_with_gpt",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CreateDocumentIndirectlyWithGptRequest"
                                                            }
                                                        }
                                                    },
                                                    "required": true
                                                },
                                                "responses": {
                                                    "200": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        },
                                                        "description": "Successful Response"
                                                    },
                                                    "422": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        },
                                                        "description": "Validation Error"
                                                    }
                                                },
                                                "summary": "Create a document indirectly by prompting a GPT model specialized for longform writing"
                                            }
                                        },
                                        "/create_pptx_directly_with_content": {
                                            "post": {
                                                "description": "Create a new presentation by directly providing the content.",
                                                "operationId": "create_pptx_directly_with_content",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/PptxRequest"
                                                            }
                                                        }
                                                    },
                                                    "required": true
                                                },
                                                "responses": {
                                                    "200": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        },
                                                        "description": "Successful Response"
                                                    },
                                                    "422": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        },
                                                        "description": "Validation Error"
                                                    }
                                                },
                                                "summary": "Create a new presentation directly with content"
                                            }
                                        },
                                        "/create_resume": {
                                            "post": {
                                                "operationId": "create_resume",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/Markdown2ResumeRequest"
                                                            }
                                                        }
                                                    },
                                                    "required": true
                                                },
                                                "responses": {
                                                    "200": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        },
                                                        "description": "Successful Response"
                                                    },
                                                    "422": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        },
                                                        "description": "Validation Error"
                                                    }
                                                },
                                                "summary": "Create Resume Endpoint"
                                            }
                                        },
                                        "/create_spreadsheet": {
                                            "post": {
                                                "description": "Create a new spreadsheet given data. Enclose all fields in double quotes.",
                                                "operationId": "create_spreadsheet",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/CreateSpreadsheetRequest"
                                                            }
                                                        }
                                                    },
                                                    "required": true
                                                },
                                                "responses": {
                                                    "200": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        },
                                                        "description": "Successful Response"
                                                    },
                                                    "422": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        },
                                                        "description": "Validation Error"
                                                    }
                                                },
                                                "summary": "Create a new spreadsheet"
                                            }
                                        },
                                        "/read_url": {
                                            "post": {
                                                "description": "Allows for reading the contents of an URL link, including PDF/DOC/DOCX/PPT/CSV/XLS/XLSX/HTML content, Google Drive, Dropbox, OneDrive, aidocmaker.com docs. Always wrap image URLs from the response field `z1_image_urls` in Markdown, where each image has a ## DESCRIPTION.",
                                                "operationId": "read_url",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "$ref": "#/components/schemas/ReadDocV2Request"
                                                            }
                                                        }
                                                    },
                                                    "required": true
                                                },
                                                "responses": {
                                                    "200": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {}
                                                            }
                                                        },
                                                        "description": "Successful Response"
                                                    },
                                                    "422": {
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/HTTPValidationError"
                                                                }
                                                            }
                                                        },
                                                        "description": "Validation Error"
                                                    }
                                                },
                                                "summary": "Read the contents of an URL link"
                                            }
                                        }
                                    },
                                    "servers": [
                                        {
                                            "url": "https://gpt.docs.aidocmaker.com"
                                        }
                                    ]
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://www.aidocmaker.com/privacy-policy"
                            }
                        },
                        {
                            "id": "gzm_cnf_an7DMxAgEqQAPngi8JITgXAi~gzm_tool_sjAIiEEy88wsLSHGBgBj4Ic2",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_nfIHTbFyDlEFxI9Kst6g7kYP~gzm_tool_8Lt60vGg3dgo8j1y2Th1UECh",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_an7DMxAgEqQAPngi8JITgXAi~gzm_tool_11XoswJuATxyhQcHoPDT9W4C",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/json",
                                "text/x-c++",
                                "application/msword",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/markdown",
                                "text/x-csharp",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-java",
                                "text/javascript",
                                "application/pdf",
                                "text/x-php",
                                "text/x-tex",
                                "text/x-c",
                                "text/plain",
                                "text/html",
                                "application/x-latext",
                                "text/x-sh"
                            ],
                            "image_mime_types": [
                                "image/png",
                                "image/webp",
                                "image/jpeg",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-5Qx0mOEND",
                        "organization_id": "org-b7Y6YpgWjeITGOyj4fBgoozE",
                        "short_url": "g-5Qx0mOEND-diagram-genius",
                        "author": {
                            "user_id": "user-nnxBIyN2yN8cOdLLkqxURjbs",
                            "display_name": "diagramgenius.com",
                            "link_to": "https://diagramgenius.com",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Diagram Genius",
                            "description": "Creates diagrams, flowcharts, mindmaps and more",
                            "prompt_starters": [
                                "Generate an inline diagram for a clever and ROI-focused sales funnel",
                                "Generate a detailed ERD for an enterprise-level SaaS database. Include key entities, columns and all FK references examples are User, SaaS Account, Subscription, Invoice, Service, Team Member & Role, Affiliate, Coupon, Referral, Payment Ledger, Payment, Marketing Campaign, and Audit Log. Ensure to show primary and foreign keys, and relationship types (one-to-one, one-to-many, many-to-many). Focus on payment processing, marketing, and user management aspects",
                                "Generate a sequence diagram  showing how a Pi Hole works",
                                "Create a  mind map diagram for smart product ideation, experimentation, analytics and iteration",
                                "Create a diagram that shows the optimal solution for the Largest Island Problem",
                                "Create a timeline diagram of the recent OpenAI saga using the web."
                            ],
                            "profile_pic_id": "file-LzJsonGJQh2qa0DPR1TgUluU",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-LzJsonGJQh2qa0DPR1TgUluU?se=2123-10-31T03%3A04%3A54Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3DDALL%25C2%25B7E%25202023-11-23%252018.57.40%2520-%2520A%2520two-tone%2520logo%2520design%2520with%2520an%2520interlocking%2520diamond%2520pattern%252C%2520set%2520against%2520a%2520background%2520in%2520the%2520shade%2520of%2520%2527zinc%2520800%2527%252C%2520a%2520deep%2520gray%2520color.%2520The%2520logo%2520is%2520monoc.png&sig=W%2BZyGwa53t0J%2BVj7DtAHTOyNuSoMN6NIE7LRGw8fsig%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-15T07:06:04.059846+00:00",
                        "updated_at": "2024-03-03T07:33:03.981335+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_5BwrEdqCWfoLzt4PAaLFSSdW~gzm_tool_gp8ay3ROXO3EWk4wNljfrNbK",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_5BwrEdqCWfoLzt4PAaLFSSdW~gzm_tool_uPOv5tSW108zcmEXBqShPRVZ",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_5BwrEdqCWfoLzt4PAaLFSSdW~gzm_tool_A3YX5Ty62viNDSpOqS0m5fOX",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_mo1d8mXPw0IyCakaxgcMc4DO~gzm_tool_7vq8hAxFRUP3nKTeglB5Oh1L",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-90601d14318c8ecd63b42276bfd06013b2bf820b",
                                "domain": "diagramgenius.com",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.1.0",
                                    "info": {
                                        "title": "Diagram Genius API Documentation",
                                        "version": "1.0.0",
                                        "description": "API Documentation for Diagram Genius"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://diagramgenius.com",
                                            "description": "Production server"
                                        }
                                    ],
                                    "paths": {
                                        "/generate-diagram": {
                                            "post": {
                                                "operationId": "generate_diagram",
                                                "summary": "Generate a diagram from Mermaid markdown",
                                                "description": "Takes Mermaid markdown and generates a corresponding SVG image",
                                                "requestBody": {
                                                    "required": true,
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "mermaidMarkdown": {
                                                                        "type": "string",
                                                                        "description": "Mermaid markdown to be converted into a diagram"
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "SVG image generated successfully",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "svgLink": {
                                                                            "type": "string",
                                                                            "description": "URL to the generated SVG image"
                                                                        },
                                                                        "htmlPageLink": {
                                                                            "type": "string",
                                                                            "description": "URL to the corresponding HTML page"
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "No Mermaid markdown provided"
                                                    },
                                                    "500": {
                                                        "description": "Error in generating the diagram, possibly due to invalid syntax"
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "tags": []
                                },
                                "auth": {
                                    "type": "service_http",
                                    "instructions": "",
                                    "authorization_type": "custom",
                                    "verification_tokens": {},
                                    "custom_auth_header": "X-Api-Key"
                                },
                                "privacy_policy_url": "https://diagramgenius.com/privacy.html"
                            }
                        }
                    ],
                    "files": [
                        {
                            "id": "gzm_cnf_q3rgbbOdTnz35AVgQ5beVVO2~gzm_file_ebyKq6MOH4KdhivXaKVCRnIC",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_q3rgbbOdTnz35AVgQ5beVVO2~gzm_file_nCviXdo8Of0iF0uhGjBnkBBj",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_q3rgbbOdTnz35AVgQ5beVVO2~gzm_file_5edYuo7ThmSLHSr3MM9OIDZk",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_VBeQjq7kBkOZoSotwFGq3guF~gzm_file_QJLlCOdOsfiC1Z7e70TEYCpV",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_q3rgbbOdTnz35AVgQ5beVVO2~gzm_file_ppIuG2n5JnaQ3p5c0SBn6TsM",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_q3rgbbOdTnz35AVgQ5beVVO2~gzm_file_4sXl8AND9p3BUIJPqW8oTs1x",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_q3rgbbOdTnz35AVgQ5beVVO2~gzm_file_h4a2Qd5M2g67QLcEIwlJ0I4B",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_HpWUwUMHYuqAP0m90vkgz128~gzm_file_9LTErAueSmL6kBWaU7mstp8U",
                            "type": "text/html",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_xnv4Gi49jiN8PiEFNrgqCAMR~gzm_file_YRG5IuZmlYayggBXJUezqxKf",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        },
                        {
                            "id": "gzm_cnf_XQ95eVWOKhoPCxkuG9WfxKWQ~gzm_file_hG64g84MxY9qVMCTEaAVKcul",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/json",
                                "text/x-c++",
                                "application/msword",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/markdown",
                                "text/x-csharp",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-java",
                                "text/javascript",
                                "application/pdf",
                                "text/x-php",
                                "text/x-tex",
                                "text/x-c",
                                "text/plain",
                                "text/html",
                                "application/x-latext",
                                "text/x-sh"
                            ],
                            "image_mime_types": [
                                "image/png",
                                "image/webp",
                                "image/jpeg",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-RuhDS8mbd",
                        "organization_id": "org-akzTa1XbKVACz9l88n5Sw6wg",
                        "short_url": "g-RuhDS8mbd-22-500-best-custom-gpts",
                        "author": {
                            "user_id": "user-N8oSl3qLgyMfcHv9QyhW8yps",
                            "display_name": "Torbjørn Flensted",
                            "link_to": "https://seo.ai",
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": null,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "22.500+ Best Custom GPTs",
                            "description": "Search all public GPTs in one place. Find the best Custom ChatGPTs tailored to your needs. Every day, hundreds of new popular GPTs join our ranks. Discover GPT Store's best!",
                            "prompt_starters": [
                                "What custom GPTs can help with SEO?",
                                "Find GPTs for Facebook Ads",
                                "I need GPTs for productivity",
                                "Suggest GPTs for business analytics"
                            ],
                            "profile_pic_id": null,
                            "profile_picture_url": "https://files.oaiusercontent.com/file-MgGT6z8XgEqooNX79PZufM5S?se=2123-10-27T22%3A07%3A12Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3Dbest-gpts.png&sig=MlatxQXK4pU8bZzLY/9zMjlRY2N4FEFOyMM16ZfUVTM%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-13T10:04:27.305847+00:00",
                        "updated_at": "2024-02-25T14:52:42.877023+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null
                    },
                    "tools": [],
                    "files": [
                        {
                            "id": "gzm_cnf_uib7ck7YdBQuYQLfJMnXlQCI~gzm_file_gvp5re7VnnvVinbaTdtnqu8E",
                            "type": "application/pdf",
                            "file_id": "",
                            "location": ""
                        }
                    ],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/json",
                                "text/x-c++",
                                "application/msword",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/markdown",
                                "text/x-csharp",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-java",
                                "text/javascript",
                                "application/pdf",
                                "text/x-php",
                                "text/x-tex",
                                "text/x-c",
                                "text/plain",
                                "text/html",
                                "application/x-latext",
                                "text/x-sh"
                            ],
                            "image_mime_types": [
                                "image/png",
                                "image/webp",
                                "image/jpeg",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-jBdvgesNC",
                        "organization_id": "org-Q1sNHSCUqwEjWNY5mF5CsQO5",
                        "short_url": "g-jBdvgesNC-diagram-pro",
                        "author": {
                            "user_id": "user-G4p1yJeaaveeVcqU3SOAhKEe",
                            "display_name": "pyxl.ai",
                            "link_to": "https://pyxl.ai",
                            "is_verified": true,
                            "selected_display": "website",
                            "will_receive_support_emails": true,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "DIAGRAM ⚡PRO⚡",
                            "description": "Mindmaps, Databases, Flowcharts, Charts. ⚡Drag-N-Drop⚡ Edit.",
                            "prompt_starters": [
                                "SHOW DEMO - all chart types you can create",
                                "MINDMAP DEMO:  Create a mindmap diagram example with random content",
                                "REAL ESTATE DEAL: Create a sequence diagram to illustrate the typical interaction between all involved",
                                "Create a visualization of..."
                            ],
                            "profile_pic_id": "file-v1z4oe7GJpi7TPWOSXaZmYxW",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-v1z4oe7GJpi7TPWOSXaZmYxW?se=2124-01-20T00%3A33%3A17Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D1209600%2C%20immutable&rscd=attachment%3B%20filename%3Dvar1_6M.jpg&sig=QJoRDZZmwh0LRC54aHtRKGlrJxZnRc%2BZ8MOzBsh4B5Y%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2024-01-10T23:20:32.477425+00:00",
                        "updated_at": "2024-03-02T06:33:26.649013+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_um88Pr7yOBvv78tSpexsvqac~gzm_tool_pPNbhnm8niIJgq0UV6TJfB3j",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_1YmDVCYjxQgTrcazoV2ngJl4~gzm_tool_ECxx6e2EDc7DHUjySzkJkemJ",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-bdc4d1ca25a6e25defa535a0735c3bc9b1a33977",
                                "domain": "www.blocksandarrows.com",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.1.0",
                                    "info": {
                                        "title": "GPT Companion",
                                        "version": "1.0"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://www.blocksandarrows.com",
                                            "description": "Development server"
                                        }
                                    ],
                                    "components": {
                                        "schemas": {},
                                        "parameters": {}
                                    },
                                    "paths": {
                                        "/api/gpt/getGuides": {
                                            "post": {
                                                "summary": "Endpoint to get guides to create diagram",
                                                "x-openai-isConsequential": false,
                                                "operationId": "post_GetGuides",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "graph",
                                                                            "class",
                                                                            "sequence",
                                                                            "mindmap",
                                                                            "timeline",
                                                                            "entity-relationship",
                                                                            "pie-chart",
                                                                            "database"
                                                                        ],
                                                                        "description": "Type of the diagram",
                                                                        "example": "graph"
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Guides for creating this type of diagrams",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "guide": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "guide"
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/api/gpt/renderDiagram": {
                                            "post": {
                                                "summary": "",
                                                "x-openai-isConsequential": false,
                                                "operationId": "post_RenderDiagram",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {
                                                                    "type": {
                                                                        "type": "string",
                                                                        "enum": [
                                                                            "graph",
                                                                            "class",
                                                                            "sequence",
                                                                            "mindmap",
                                                                            "timeline",
                                                                            "entity-relationship",
                                                                            "pie-chart",
                                                                            "database"
                                                                        ],
                                                                        "description": "Type of the diagram",
                                                                        "example": "graph"
                                                                    },
                                                                    "diagramString": {
                                                                        "type": "string",
                                                                        "description": "The string for the chart rendering"
                                                                    },
                                                                    "documentName": {
                                                                        "type": "string",
                                                                        "description": "The name of the document in which the diagram will be placed"
                                                                    },
                                                                    "diagramTags": {
                                                                        "type": "string",
                                                                        "description": "For your diagram, include a total of 10 tags, written with commas in between. The first tag should be the primary one, characterizing the overall purpose of the diagram, such as #SMS for a social media marketing diagram or #Database for a database structure. The subsequent tags should provide additional details about the content, tools, focus, and key elements of the diagram, enhancing its searchability and identification.",
                                                                        "example": "#Database, #DataModeling, #ERDiagram, #SQL, #Normalization, #DataStructure, #SchemaDesign, #RelationalDB, #DataIntegrity, #QueryOptimization"
                                                                    },
                                                                    "isContainsPrivateInfo": {
                                                                        "type": "boolean",
                                                                        "description": "If you notice the user input includes personal details such as their full name, email address, phone number, home address, company name, or any other identifiable information, then set this flag to true."
                                                                    }
                                                                },
                                                                "required": [
                                                                    "type",
                                                                    "diagramString",
                                                                    "documentName",
                                                                    "diagramTags",
                                                                    "isContainsPrivateInfo"
                                                                ]
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "Diagram successfully rendered",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "answer": {
                                                                            "type": "string",
                                                                            "description": "Answer with image and url to edit. You should not change the response text, only insert data such as descriptions"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "answer"
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "422": {
                                                        "description": "Error while rendering the diagram",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "errorMessage": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "errorMessage"
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        },
                                        "/api/gpt/getExamplesForUser": {
                                            "post": {
                                                "summary": "An endpoint to show the user which charts we can build.",
                                                "x-openai-isConsequential": false,
                                                "operationId": "post_GetExamplesForUser",
                                                "requestBody": {
                                                    "content": {
                                                        "application/json": {
                                                            "schema": {
                                                                "type": "object",
                                                                "properties": {}
                                                            }
                                                        }
                                                    }
                                                },
                                                "responses": {
                                                    "200": {
                                                        "description": "An answer with examples of diagrams that you should provide",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "object",
                                                                    "properties": {
                                                                        "answer": {
                                                                            "type": "string"
                                                                        }
                                                                    },
                                                                    "required": [
                                                                        "answer"
                                                                    ]
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "webhooks": {}
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://www.blocksandarrows.com/policy"
                            }
                        },
                        {
                            "id": "gzm_cnf_um88Pr7yOBvv78tSpexsvqac~gzm_tool_nhLGwBn3StTgQd28UxeRB7Qn",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/json",
                                "text/x-c++",
                                "application/msword",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/markdown",
                                "text/x-csharp",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-java",
                                "text/javascript",
                                "application/pdf",
                                "text/x-php",
                                "text/x-tex",
                                "text/x-c",
                                "text/plain",
                                "text/html",
                                "application/x-latext",
                                "text/x-sh"
                            ],
                            "image_mime_types": [
                                "image/png",
                                "image/webp",
                                "image/jpeg",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            },
            {
                "resource": {
                    "gizmo": {
                        "id": "g-fL6Xsk6UU",
                        "organization_id": "org-eVyRXL0J8I3E9KIV3lvfBecv",
                        "short_url": "g-fL6Xsk6UU-free-youtube-summarizer",
                        "author": {
                            "user_id": "user-rVwCVqHyY6gvTe6eCNPOENhs",
                            "display_name": "Natzir Turrado Ruiz",
                            "link_to": null,
                            "is_verified": true,
                            "selected_display": "name",
                            "will_receive_support_emails": null,
                            "display_socials": []
                        },
                        "voice": {
                            "id": "ember"
                        },
                        "workspace_id": null,
                        "model": null,
                        "instructions": null,
                        "settings": null,
                        "display": {
                            "name": "Free YouTube Summarizer",
                            "description": "Extracts and summarizes YouTube video transcripts in any chosen language, removing language barriers. Converts the summaries into embeddable HTML articles for websites.",
                            "prompt_starters": [
                                "Can you summarize this YouTube video?",
                                "I need a summary of this video in French.",
                                "How would you summarize this video's content?",
                                "Please convert this video summary into an article."
                            ],
                            "profile_pic_id": "file-4XVUFjv7l6zgCnxi5No2kI1N",
                            "profile_picture_url": "https://files.oaiusercontent.com/file-4XVUFjv7l6zgCnxi5No2kI1N?se=2123-10-17T14%3A51%3A56Z&sp=r&sv=2021-08-06&sr=b&rscc=max-age%3D31536000%2C%20immutable&rscd=attachment%3B%20filename%3D849ab236-e3bb-4e20-970f-e037acdd6ee3.png&sig=ZBrMgV3umgKTIOuhcXHejjcw2I8TOHx7mFUf20srCmE%3D",
                            "categories": [
                                "productivity"
                            ]
                        },
                        "share_recipient": "marketplace",
                        "created_at": "2023-11-10T09:10:41.525705+00:00",
                        "updated_at": "2024-02-27T04:48:53.829826+00:00",
                        "last_interacted_at": null,
                        "num_interactions": null,
                        "tags": [
                            "public",
                            "reportable",
                            "uses_function_calls"
                        ],
                        "version": null,
                        "live_version": null,
                        "training_disabled": null,
                        "sharing_targets": null,
                        "appeal_info": null,
                        "vanity_metrics": {
                            "num_conversations": null,
                            "num_conversations_str": null,
                            "num_pins": 0,
                            "created_ago_str": null,
                            "review_stats": null
                        },
                        "workspace_approval_date": null,
                        "workspace_approved": null,
                        "sharing": null
                    },
                    "tools": [
                        {
                            "id": "gzm_cnf_Bewq87NgVJE8dMOcV3XLe1db~gzm_tool_kUa8kriQ0ZbYWJ8g82h8BXgR",
                            "type": "plugins_prototype",
                            "settings": null,
                            "metadata": {
                                "action_id": "g-a250ec4c26ddf9bb333163835020e8e6fb7e238c",
                                "domain": "youtube-summary-natzir.vercel.app",
                                "raw_spec": null,
                                "json_schema": {
                                    "openapi": "3.1.0",
                                    "info": {
                                        "title": "YouTube Video Transcriptor",
                                        "description": "API for transcribing YouTube videos",
                                        "version": "1.0.0"
                                    },
                                    "servers": [
                                        {
                                            "url": "https://youtube-summary-natzir.vercel.app"
                                        }
                                    ],
                                    "paths": {
                                        "/get_transcripcion": {
                                            "get": {
                                                "tags": [
                                                    "Transcription"
                                                ],
                                                "summary": "Get video transcription",
                                                "description": "Get transcription of a YouTube video.",
                                                "operationId": "get_video_transcription",
                                                "parameters": [
                                                    {
                                                        "name": "url",
                                                        "in": "query",
                                                        "required": true,
                                                        "schema": {
                                                            "type": "string",
                                                            "title": "Video URL"
                                                        }
                                                    }
                                                ],
                                                "responses": {
                                                    "200": {
                                                        "description": "Successful Response",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "type": "array",
                                                                    "items": {
                                                                        "type": "object",
                                                                        "properties": {
                                                                            "text": {
                                                                                "type": "string"
                                                                            },
                                                                            "start": {
                                                                                "type": "number"
                                                                            },
                                                                            "duration": {
                                                                                "type": "number"
                                                                            }
                                                                        }
                                                                    }
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "400": {
                                                        "description": "Invalid URL or Video ID",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/Error"
                                                                }
                                                            }
                                                        }
                                                    },
                                                    "404": {
                                                        "description": "Video not found or not available for transcription",
                                                        "content": {
                                                            "application/json": {
                                                                "schema": {
                                                                    "$ref": "#/components/schemas/Error"
                                                                }
                                                            }
                                                        }
                                                    }
                                                }
                                            }
                                        }
                                    },
                                    "components": {
                                        "schemas": {
                                            "Error": {
                                                "type": "object",
                                                "properties": {
                                                    "detail": {
                                                        "type": "string",
                                                        "description": "Detail of the error."
                                                    }
                                                },
                                                "required": [
                                                    "detail"
                                                ],
                                                "title": "Error"
                                            }
                                        }
                                    }
                                },
                                "auth": {
                                    "type": "none"
                                },
                                "privacy_policy_url": "https://youtube-summary-natzir.vercel.app/static/legal.html"
                            }
                        },
                        {
                            "id": "gzm_cnf_Bewq87NgVJE8dMOcV3XLe1db~gzm_tool_EzaLzW7CH8SJDy70d2jZQJlX",
                            "type": "browser",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_Bewq87NgVJE8dMOcV3XLe1db~gzm_tool_amrbHIeJyM4zUyfi9W4cdhvu",
                            "type": "dalle",
                            "settings": null,
                            "metadata": null
                        },
                        {
                            "id": "gzm_cnf_Bewq87NgVJE8dMOcV3XLe1db~gzm_tool_Wvv9DBTeOigx8yKIGJrI39Td",
                            "type": "python",
                            "settings": null,
                            "metadata": null
                        }
                    ],
                    "files": [],
                    "product_features": {
                        "attachments": {
                            "type": "retrieval",
                            "accepted_mime_types": [
                                "application/vnd.openxmlformats-officedocument.presentationml.presentation",
                                "application/json",
                                "text/x-c++",
                                "application/msword",
                                "text/x-script.python",
                                "application/vnd.openxmlformats-officedocument.wordprocessingml.document",
                                "text/markdown",
                                "text/x-csharp",
                                "text/x-typescript",
                                "text/x-ruby",
                                "text/x-java",
                                "text/javascript",
                                "application/pdf",
                                "text/x-php",
                                "text/x-tex",
                                "text/x-c",
                                "text/plain",
                                "text/html",
                                "application/x-latext",
                                "text/x-sh"
                            ],
                            "image_mime_types": [
                                "image/png",
                                "image/webp",
                                "image/jpeg",
                                "image/gif"
                            ],
                            "can_accept_all_mime_types": true
                        }
                    }
                }
            }
        ],
        "cursor": null
    }
}